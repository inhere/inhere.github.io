(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{501:function(s,t,a){"use strict";a.r(t);var e=a(16),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("简单学习编写bash命令自动补全")]),s._v(" "),a("blockquote",[a("p",[s._v("下面的示例使用 "),a("code",[s._v("__my_completion")]),s._v(" 作为命令行应用 "),a("code",[s._v("myapp")]),s._v("(eg: git) 的补全函数")])]),s._v(" "),a("h2",{attrs:{id:"相关函数说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关函数说明"}},[s._v("#")]),s._v(" 相关函数说明")]),s._v(" "),a("h3",{attrs:{id:"complete-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#complete-函数"}},[s._v("#")]),s._v(" complete 函数")]),s._v(" "),a("p",[a("code",[s._v("complete")]),s._v(" 指定命令的补全函数")]),s._v(" "),a("p",[s._v("自定义补全时调用complete命令来完成，complete通过选项提供了多种补全的途径和方式，这些选项是按照先后次序起作用的："),a("code",[s._v("-A -G -W -F -C -X -P -S -o")])]),s._v(" "),a("p",[s._v("一些选项说明:")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("-o STRING")]),s._v(" 额外设置补全选项，可以设置多次；选项值可以为：\n"),a("ul",[a("li",[a("code",[s._v("bashdefault")]),s._v(" 如果没有生成补全条目，就使用bash默认的其它补全")]),s._v(" "),a("li",[a("code",[s._v("default")]),s._v("\t如果没有生成补全条目，就使用“readline”默认的文件名补全。")]),s._v(" "),a("li",[a("code",[s._v("dirnames")]),s._v("\t如果没有生成补全条目，就进行目录名补全。")]),s._v(" "),a("li",[a("code",[s._v("filenames")]),s._v("\t告诉“readline”生成文件名，以便进行与文件名相关的处理，例如在目录名后面加上斜杠，引用特殊字符，去掉行尾的空格，目的是用于shell函数。")]),s._v(" "),a("li",[a("code",[s._v("noquote")]),s._v("\t告诉“readline”不引用文件名，默认会进行引用。")]),s._v(" "),a("li",[a("code",[s._v("nospace")]),s._v("\t告诉“readline”在补全的名称后不添加空格，默认添加空格。")]),s._v(" "),a("li",[a("code",[s._v("plusdirs")]),s._v("\t生成补全条目之后，还会进行目录名补全并把结果添加到其它动作得到的结果中。")])])]),s._v(" "),a("li",[a("code",[s._v("-A STRING")]),s._v(" action，指定动作，这个有固定的几个可选。选项值可以为：\n"),a("ul",[a("li",[a("code",[s._v("alias")]),s._v("\t别名，同选项  "),a("code",[s._v("-a")]),s._v("。")]),s._v(" "),a("li",[a("code",[s._v("arrayvar")]),s._v("\t数组变量名。")]),s._v(" "),a("li",[a("code",[s._v("binding")]),s._v("\t“readline”键绑定名。")]),s._v(" "),a("li",[a("code",[s._v("builtin")]),s._v("\tshell内建命令名，同选项 "),a("code",[s._v("-b")]),s._v("。")]),s._v(" "),a("li",[a("code",[s._v("command")]),s._v("\t命令名，同选项 "),a("code",[s._v("-c")]),s._v("。")]),s._v(" "),a("li",[a("code",[s._v("directory")]),s._v("\t目录名，同选项 "),a("code",[s._v("-d")]),s._v("。")]),s._v(" "),a("li",[a("code",[s._v("disabled")]),s._v("\t不可用的shell内建命令名。")]),s._v(" "),a("li",[a("code",[s._v("enabled")]),s._v("\t可用的shell内建命令名。")]),s._v(" "),a("li",[a("code",[s._v("export")]),s._v("\t导出的shell变量名，同选项"),a("code",[s._v("-e")]),s._v("。")]),s._v(" "),a("li",[a("code",[s._v("file")]),s._v("\t文件名，同选项 "),a("code",[s._v("-f")]),s._v("。")]),s._v(" "),a("li",[a("code",[s._v("function")]),s._v("\tshell函数名。")]),s._v(" "),a("li",[a("code",[s._v("group")]),s._v("\t组名，同选项 "),a("code",[s._v("-g")]),s._v("。")]),s._v(" "),a("li",[a("code",[s._v("helptopic")]),s._v("\t内建命令help支持的帮助主题。")]),s._v(" "),a("li",[a("code",[s._v("hostname")]),s._v("\t主机名，从shell环境变量HOSTFILE中获取。")]),s._v(" "),a("li",[a("code",[s._v("job")]),s._v("\t作业名，同选项 "),a("code",[s._v("-j")]),s._v("。")]),s._v(" "),a("li",[a("code",[s._v("keyword")]),s._v("\tshell保留字，同选项 "),a("code",[s._v("-k")]),s._v("。")]),s._v(" "),a("li",[a("code",[s._v("running")]),s._v("\t正在运行的作业名。")]),s._v(" "),a("li",[a("code",[s._v("service")]),s._v("\t服务名，同选项 "),a("code",[s._v("-s")]),s._v("。")]),s._v(" "),a("li",[a("code",[s._v("setopt")]),s._v("\t内建命令set的选项 "),a("code",[s._v("-o")]),s._v(" 可用的参数。")]),s._v(" "),a("li",[a("code",[s._v("shopt")]),s._v("\t内建命令shopt可接受的选项名。")]),s._v(" "),a("li",[a("code",[s._v("signal")]),s._v("\t信号名。")]),s._v(" "),a("li",[a("code",[s._v("stopped")]),s._v("\t暂停的作业名。")]),s._v(" "),a("li",[a("code",[s._v("user")]),s._v("\t用户名，同选项 "),a("code",[s._v("-u")]),s._v("。")]),s._v(" "),a("li",[a("code",[s._v("variable")]),s._v("\t所有的shell变量名，同选项 "),a("code",[s._v("-v")]),s._v("。")])])]),s._v(" "),a("li",[a("code",[s._v("-C command")]),s._v("\t在子shell中执行命令，并把其结果作为补全条目。")]),s._v(" "),a("li",[a("code",[s._v("-F function")]),s._v(" 指定function生成可选单词。\n"),a("ul",[a("li",[s._v("在函数定义中，一些shell变量可以使用："),a("code",[s._v("COMP_LINE")]),s._v(", "),a("code",[s._v("COMP_POINT")]),s._v(", "),a("code",[s._v("COMP_KEY")]),s._v(", "),a("code",[s._v("COMP_TYPE")]),s._v("。")]),s._v(" "),a("li",[s._v("函数参数定义是："),a("code",[s._v("$1")]),s._v(" 为当前要补全参数的命令，"),a("code",[s._v("$2")]),s._v(" 为当前要补全的单词，"),a("code",[s._v("$3")]),s._v(" 为当前要补全单词的前面一个单词。")]),s._v(" "),a("li",[s._v("这些都可以在自定义函数中使用。最终单词列表要放到 "),a("code",[s._v("COMPREPLY")]),s._v(" 这个数组中，shell补全机制是从这个数组中取单词的。")])])]),s._v(" "),a("li",[a("code",[s._v("-G globpat")]),s._v("\t使用文件名扩展模式globpat进行扩展以生成可能的补全条目。")]),s._v(" "),a("li",[a("code",[s._v("-P prefix")]),s._v("\t在所有的选项应用到补全结果后，在结果前添加前缀prefix。")]),s._v(" "),a("li",[a("code",[s._v("-S suffix")]),s._v("\t在所有的选项应用到补全结果后，在结果后添加后缀suffix。")]),s._v(" "),a("li",[a("code",[s._v("-W wordlist")]),s._v("\t使用特殊变量 "),a("code",[s._v("IFS")]),s._v(" 中的字符拆分单词列表wordlist，并扩展拆分后的每个单词，结果中与待补全单词匹配的条目就是补全条目。")]),s._v(" "),a("li",[a("code",[s._v("-X filterpat")]),s._v("\tfilterpat是进行文件名扩展时使用的模式，它作用于通过前面的选项和参数生成的补全列表，并把每个与过滤模式匹配的条目删除，模式中前导的叹号表示否定，这时会删除与过滤模式不匹配的条目。")])]),s._v(" "),a("blockquote",[a("p",[s._v("TIP: "),a("code",[s._v("IFS")]),s._v(" 内部字段分隔符。\n用于迭代字符串，例如："),a("code",[s._v('data="a,b,c"')]),s._v(" 设置 "),a("code",[s._v('local IFS=","')]),s._v(" , 使用 "),a("code",[s._v("for item in $data")]),s._v(" 迭代字符串，内部item 即是单个的 "),a("code",[s._v("a")]),s._v(" "),a("code",[s._v("b")]),s._v(" "),a("code",[s._v("c")])])]),s._v(" "),a("p",[s._v("** -F 补充说明：**")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("COMPREPLY")]),s._v(" 变量的内容总是会显示，补全函数需要自己处理其中的内容。")])]),s._v(" "),a("li",[a("p",[s._v("如果 "),a("code",[s._v("COMPREPLY")]),s._v(" 变量中只有一个元素，那么这个词会自动补全到命令之后。返回多个候选则不会触发这个功能。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("COMP_WORDS")]),s._v("：当前命令行中已经输入的词数组。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("COMP_CWORD")]),s._v("：当前光标所处词位于 "),a("code",[s._v("COMP_WORDS")]),s._v(" 数组中的索引值。既当按下 tab 键时光标所处词的索引。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("COMP_LINE")]),s._v("：当前命令行。")])])]),s._v(" "),a("p",[s._v("获取命令后面的词，我们可以使用 "),a("code",[s._v("COMP_WORDS[1]")]),s._v(" 的值")]),s._v(" "),a("h3",{attrs:{id:"compgen-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compgen-函数"}},[s._v("#")]),s._v(" compgen 函数")]),s._v(" "),a("p",[a("code",[s._v("compgen")]),s._v(" 是一个用于生成补全列表的内置命令，支持complete命令的大部分参数（例如-W参数指定补全词列表，-d参数补全目录），并能够 "),a("strong",[s._v("基于用户已经输入的内容进行过滤")])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ compgen --help\ncompgen: compgen "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-abcdefgjksuv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-o option"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-A action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-G globpat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-W wordlist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-F function"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-C command"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-X filterpat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-P prefix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-S suffix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("word"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("table",[a("thead",[a("tr",[a("th",[s._v("选项")]),s._v(" "),a("th",[s._v("选项值")]),s._v(" "),a("th",[s._v("说明")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("-F")])]),s._v(" "),a("td",[s._v("function")]),s._v(" "),a("td",[s._v("执行shell 函数，函数中生成COMPREPLY作为候选的补全结果")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("-C")])]),s._v(" "),a("td",[s._v("command")]),s._v(" "),a("td",[s._v("将 command 命令的执行结果作为候选的补全 结果")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("-G")])]),s._v(" "),a("td",[s._v("pattern")]),s._v(" "),a("td",[s._v("将匹配 pattern的文件名作为候选的补全结果")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("-W")])]),s._v(" "),a("td",[s._v("wordlist")]),s._v(" "),a("td",[s._v("分割 wordlist 中的单词，作为候选的补全结果")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("-p")])]),s._v(" "),a("td",[a("code",[s._v("[name]")])]),s._v(" "),a("td",[s._v("列出当前所有的补全命令")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("-r")])]),s._v(" "),a("td",[a("code",[s._v("[name]")])]),s._v(" "),a("td",[s._v("删除某个补全命令")])])])]),s._v(" "),a("p",[s._v("测试使用：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ compgen -W "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"one two three"')]),s._v("\none\ntwo\nthree\n\ninhere@Inhere-win10 MINGW64 /f/work "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n$ compgen -W "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"one two three"')]),s._v(" o\none\n\ninhere@Inhere-win10 MINGW64 /f/work "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n$ compgen -W "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"one two three"')]),s._v(" t\ntwo\nthree\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h3",{attrs:{id:"帮助调试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#帮助调试"}},[s._v("#")]),s._v(" 帮助调试")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 打印全部已定义的函数名称")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("declare")]),s._v(" -F\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看指定函数的定义")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("declare")]),s._v(" -f __my_completion\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"分割单词列表作为补全数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分割单词列表作为补全数据"}},[s._v("#")]),s._v(" 分割单词列表作为补全数据")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/usr/bin/env bash")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("__my_completion")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("cur_name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${COMP_WORDS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("COMP_CWORD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 候选命令")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("commands")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"one two three"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("COMPREPLY")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("compgen -W "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$commands")]),s._v('"')]),s._v(" -- "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$cur_name")]),s._v('"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\ncomplete -F __my_completion myapp\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h2",{attrs:{id:"使用echo返回作为补全数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用echo返回作为补全数据"}},[s._v("#")]),s._v(" 使用echo返回作为补全数据")]),s._v(" "),a("p",[s._v("简单的使用echo返回作为补全数据")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("__my_completion")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 候选命令")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("commands")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"one two three"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$commands")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# for use echo")]),s._v("\ncomplete -o dirnames -C "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'__my_completion'")]),s._v(" myapp\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h2",{attrs:{id:"使用外部函数的结果补全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用外部函数的结果补全"}},[s._v("#")]),s._v(" 使用外部函数的结果补全")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("__my_completion")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输入的关键词")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("term")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${COMP_WORDS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("COMP_CWORD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用外部命令来匹配关键词并返回结果")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("commands")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("kite jump hint "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$term")]),s._v('"')]),s._v(" --no-name"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    echo commands:")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    echo $commands --- ${commands[@]}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("COMPREPLY")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$commands")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# for use echo")]),s._v("\ncomplete -o dirnames -F "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'__my_completion'")]),s._v(" myapp\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("blockquote",[a("p",[s._v("TIP: 编写好之后，可以使用 "),a("code",[s._v("source ./my_complete.sh")]),s._v(" 临时加载到bash; 要保持一直生效需要配置到 "),a("code",[s._v(".bashrc")])])]),s._v(" "),a("blockquote",[a("p",[s._v("参考文章链接：")]),s._v(" "),a("ul",[a("li",[s._v("https://blog.csdn.net/qq_38883889/article/details/106543271")]),s._v(" "),a("li",[s._v("https://blog.csdn.net/junyidcf/article/details/54178196")]),s._v(" "),a("li",[s._v("https://www.infoq.cn/article/bash-programmable-completion-tutorial")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);