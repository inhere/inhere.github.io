"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1062],{9613:(e,t,o)=>{o.d(t,{Zo:()=>p,kt:()=>d});var a=o(9496);function l(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function n(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,a)}return o}function r(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?n(Object(o),!0).forEach((function(t){l(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,a,l=function(e,t){if(null==e)return{};var o,a,l={},n=Object.keys(e);for(a=0;a<n.length;a++)o=n[a],t.indexOf(o)>=0||(l[o]=e[o]);return l}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)o=n[a],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(l[o]=e[o])}return l}var g=a.createContext({}),s=function(e){var t=a.useContext(g),o=t;return e&&(o="function"==typeof e?e(t):r(r({},t),e)),o},p=function(e){var t=s(e.components);return a.createElement(g.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var o=e.components,l=e.mdxType,n=e.originalType,g=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=s(o),c=l,d=u["".concat(g,".").concat(c)]||u[c]||m[c]||n;return o?a.createElement(d,r(r({ref:t},p),{},{components:o})):a.createElement(d,r({ref:t},p))}));function d(e,t){var o=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var n=o.length,r=new Array(n);r[0]=c;var i={};for(var g in t)hasOwnProperty.call(t,g)&&(i[g]=t[g]);i.originalType=e,i[u]="string"==typeof e?e:l,r[1]=i;for(var s=2;s<n;s++)r[s]=o[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,o)}c.displayName="MDXCreateElement"},1095:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>g,contentTitle:()=>r,default:()=>m,frontMatter:()=>n,metadata:()=>i,toc:()=>s});var a=o(1966),l=(o(9496),o(9613));const n={title:"gookit/slog - release v0.5.2, Lightweight, configurable, extensible logging library",tags:["gookit","golang","logger","slog"],date:"2023-06-19T17:16",slug:"gookit-slog-release-v0.5.2",authors:"inhere"},r=void 0,i={permalink:"/en/blog/gookit-slog-release-v0.5.2",editUrl:"https://github.com/inhere/inhere.github.io/tree/main/blog/2023/06-19-gookit-slog-release-v0.5.2.md",source:"@site/i18n/en/docusaurus-plugin-content-blog/2023/06-19-gookit-slog-release-v0.5.2.md",title:"gookit/slog - release v0.5.2, Lightweight, configurable, extensible logging library",description:"gookit/slog \ud83d\udcd1 Lightweight, configurable, extensible logging library written in Go.",date:"2023-06-19T17:16:00.000Z",formattedDate:"June 19, 2023",tags:[{label:"gookit",permalink:"/en/blog/tags/gookit"},{label:"golang",permalink:"/en/blog/tags/golang"},{label:"logger",permalink:"/en/blog/tags/logger"},{label:"slog",permalink:"/en/blog/tags/slog"}],readingTime:1.48,hasTruncateMarker:!0,authors:[{name:"inhere",title:"docs maintainer",url:"https://github.com/inhere",imageURL:"https://github.com/inhere.png",key:"inhere"}],frontMatter:{title:"gookit/slog - release v0.5.2, Lightweight, configurable, extensible logging library",tags:["gookit","golang","logger","slog"],date:"2023-06-19T17:16",slug:"gookit-slog-release-v0.5.2",authors:"inhere"},prevItem:{title:"gookit/goutil - released v0.6.10, an extension library of common Go features",permalink:"/en/blog/gookit-goutil-release-v0.6.10"},nextItem:{title:"gookit/event - Go\u5b9e\u73b0\u7684\u8f7b\u91cf\u7ea7\u7684\u4e8b\u4ef6\u7ba1\u7406\u3001\u8c03\u5ea6\u7a0b\u5e8f\u5e93",permalink:"/en/blog/gookit-event-pacakge-intro"}},g={authorsImageUrls:[void 0]},s=[{value:"v0.5.2 changelog",id:"v052-changelog",level:2},{value:"Feature",id:"feature",level:3},{value:"Update",id:"update",level:3},{value:"New feature usage",id:"new-feature-usage",level:2},{value:"Custom log file permissions",id:"custom-log-file-permissions",level:3},{value:"Split files using ModeCreate mode",id:"split-files-using-modecreate-mode",level:3},{value:"More usage",id:"more-usage",level:2}],p={toc:s},u="wrapper";function m(e){let{components:t,...o}=e;return(0,l.kt)(u,(0,a.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"gookit/slog")," \ud83d\udcd1 Lightweight, configurable, extensible logging library written in Go.\nSupport multi level, multi outputs and built-in multi file logger, buffers, clean, rotate-file handling."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Github ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/gookit/slog"},"https://github.com/gookit/slog"))),(0,l.kt)("h2",{id:"v052-changelog"},"v0.5.2 changelog"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Full changelog"),": ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/gookit/slog/compare/v0.5.1...v0.5.2"},"https://github.com/gookit/slog/compare/v0.5.1...v0.5.2")),(0,l.kt)("h3",{id:"feature"},"Feature"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u2728 feat: Add new option FilePerm to customize the permission on log file creation. issues #102 ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/gookit/slog/commit/699ecd8bc2dea0fb35607ba89d4299e86f96e40b"},"https://github.com/gookit/slog/commit/699ecd8bc2dea0fb35607ba89d4299e86f96e40b")),(0,l.kt)("li",{parentName:"ul"},"\u2728 feat: rotatefile - Added new option ",(0,l.kt)("inlineCode",{parentName:"li"},"ModeCreate")," to support creating log files at rotation time. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/gookit/slog/commit/8c4a9a08a9b3432a699f6770b73935ecfd42e5b8"},"https://github.com/gookit/slog/commit/8c4a9a08a9b3432a699f6770b73935ecfd42e5b8"))),(0,l.kt)("h3",{id:"update"},"Update"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\ud83d\udc54 up: Update and add more unit tests, upgrade goutil to v0.6.10 ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/gookit/slog/commit/693cc04eb0e375183357be18893cbecaa171ffa1"},"https://github.com/gookit/slog/commit/693cc04eb0e375183357be18893cbecaa171ffa1")),(0,l.kt)("li",{parentName:"ul"},"\ud83d\udcdd doc: Update README document description ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/gookit/slog/commit/cbf77c38db5615a9a7ec8ab07853b2f9e3517bfa"},"https://github.com/gookit/slog/commit/cbf77c38db5615a9a7ec8ab07853b2f9e3517bfa")),(0,l.kt)("li",{parentName:"ul"},"\u2705 test: Add more unit test cases ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/gookit/slog/commit/8468ea470645bb981fb34002176671bac1a9559e"},"https://github.com/gookit/slog/commit/8468ea470645bb981fb34002176671bac1a9559e"))),(0,l.kt)("h2",{id:"new-feature-usage"},"New feature usage"),(0,l.kt)("h3",{id:"custom-log-file-permissions"},"Custom log file permissions"),(0,l.kt)("p",null,"The log file permission flag created by configuring the ",(0,l.kt)("inlineCode",{parentName:"p"},"FilePerm")," setting of ",(0,l.kt)("inlineCode",{parentName:"p"},"hander.Config"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'h1 := handler.MustFileHandler("/tmp/error.log",\n    handler.WithLogLevels(slog.DangerLevels),\n    handler.WithFilePerm(0644), // <- sets log file permissions\n)\n\nslog.PushHandler(h1)\n\n')),(0,l.kt)("h3",{id:"split-files-using-modecreate-mode"},"Split files using ModeCreate mode"),(0,l.kt)("p",null,"about ",(0,l.kt)("inlineCode",{parentName:"p"},"RotateMode"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"ModeRename By default, every time rename handles rotation."),(0,l.kt)("li",{parentName:"ul"},"ModeCreate Create files only by split time")),(0,l.kt)("p",null,"Setting ",(0,l.kt)("inlineCode",{parentName:"p"},"RotateMode=ModeCreate")," allows log files to be created only by split time."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'h1 := handler.MustRotateFile(\n    "/tmp/error.log",\n    rotatefile.EveryHour, // split by hour\n    handler.WithLogLevels(slog.DangerLevels),\n    handler.WithRotateMode(rotatefile.ModeCreate), // set RotateMode=ModeCreate\n)\n\nslog.PushHandler(h1)\n')),(0,l.kt)("p",null,"Configure the logfile as ",(0,l.kt)("inlineCode",{parentName:"p"},"/tmp/error.log")," in the above example. When set to ",(0,l.kt)("inlineCode",{parentName:"p"},"ModeCreate")," mode, the file will not actually be created,\nInstead, it will be created according to the actual split time:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"/tmp/error.log.20230618_1500\n/tmp/error.log.20230618_1600\n/tmp/error.log.20230618_1700\n...\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},"Tips"),": The ",(0,l.kt)("inlineCode",{parentName:"p"},"ModeCreate")," mode can be applied to command-line tool applications. Because they exit after each execution, ",(0,l.kt)("inlineCode",{parentName:"p"},"ModeRename")," may not be able to split files on time.")),(0,l.kt)("p",null,"And using ",(0,l.kt)("inlineCode",{parentName:"p"},"ModeRename")," mode will have the following effect:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"/tmp/error.log # <- Logs are always written to this file\n/tmp/error.log.20230618_1500\n/tmp/error.log.20230618_1600\n/tmp/error.log.20230618_1700\n...\n")),(0,l.kt)("h2",{id:"more-usage"},"More usage"),(0,l.kt)("p",null,"More usage please see ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/gookit/slog/blob/master/README.md"},"README")))}m.isMDXComponent=!0}}]);