<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Inhere's Site Blog</title>
        <link>https://inhere.github.io/blog</link>
        <description>Inhere's Site Blog</description>
        <lastBuildDate>Wed, 28 Jun 2023 14:55:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-CN</language>
        <item>
            <title><![CDATA[gookit/goutil - 发布 v0.6.10 版本, Go常用功能的扩展工具库]]></title>
            <link>https://inhere.github.io/blog/gookit-goutil-release-v0.6.10</link>
            <guid>https://inhere.github.io/blog/gookit-goutil-release-v0.6.10</guid>
            <pubDate>Wed, 28 Jun 2023 14:55:00 GMT</pubDate>
            <description><![CDATA[gookit/goutil Go 常用功能的扩展工具库。包含：数字，字符串，slice/数组，Map，结构体，反射，文本，文件，错误，时间日期，测试，CLI，命令运行，系统信息，格式化，常用信息获取等等。]]></description>
            <content:encoded><![CDATA[<p><code>gookit/goutil</code> Go 常用功能的扩展工具库。包含：数字，字符串，slice/数组，Map，结构体，反射，文本，文件，错误，时间日期，测试，CLI，命令运行，系统信息，格式化，常用信息获取等等。</p><blockquote><p><strong>Github</strong>: <a href="https://github.com/gookit/goutil" target="_blank" rel="noopener noreferrer">https://github.com/gookit/goutil</a></p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="v0610-更新记录">v0.6.10 更新记录<a href="#v0610-更新记录" class="hash-link" aria-label="v0.6.10 更新记录的直接链接" title="v0.6.10 更新记录的直接链接">​</a></h2><blockquote><p>完整变更日志 <a href="https://github.com/gookit/goutil/compare/v0.6.9...v0.6.10" target="_blank" rel="noopener noreferrer">v0.6.9...v0.6.10</a></p></blockquote><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="-新功能">✨ 新功能<a href="#-新功能" class="hash-link" aria-label="✨ 新功能的直接链接" title="✨ 新功能的直接链接">​</a></h3><ul><li>✨ feat: testutil - 添加新的子包 <code>fakeobj</code> 以创建假对象用于测试</li><li>✨ feat: testutil - 添加新的函数 <code>NewEchoServer()</code> 来启动e服务器</li><li>✨ feat: byteutil - Buffer 新增更多有用的方法，方便使用</li><li>✨ feat: dump - 特殊处理自定义的 int、uint 类型值，将会打印 String 格式的说明</li><li>✨ feat: fsutil - 添加新的函数 <code>Glob()</code> 快速列出匹配的文件</li><li>♻️ feat: httpreq - 重构内置的 http 客户端 <code>httpreq</code> 逻辑</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="-更新调整">👔 更新调整<a href="#-更新调整" class="hash-link" aria-label="👔 更新调整的直接链接" title="👔 更新调整的直接链接">​</a></h3><ul><li>👔 up: structs - 更新 <code>InitDefaults()</code> 对不为空的结构体切片字段的初始化支持</li><li>👔 up: maputil - <code>SimpleMerge()</code> 支持深度合并 map<!-- -->[string]<!-- -->any 数据</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="其他调整">其他调整<a href="#其他调整" class="hash-link" aria-label="其他调整的直接链接" title="其他调整的直接链接">​</a></h3><ul><li>✅ test: 更新一些文档并修复一些单元测试</li><li>⬆️ dep: 更新 golang.org/x 依赖到最新版本</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="部分新增功能使用">部分新增功能使用<a href="#部分新增功能使用" class="hash-link" aria-label="部分新增功能使用的直接链接" title="部分新增功能使用的直接链接">​</a></h3><h4 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="dump-打印自定义类型">dump 打印自定义类型<a href="#dump-打印自定义类型" class="hash-link" aria-label="dump 打印自定义类型的直接链接" title="dump 打印自定义类型的直接链接">​</a></h4><p>dump 特殊处理自定义的 int、uint 类型值，将会打印 String 格式的说明</p><p><img loading="lazy" src="https://raw.githubusercontent.com/gookit/goutil/v0.6.10/dump/_examples/custom_type.png" alt="dump custom_type.png" class="img_Ytbv"></p><h4 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="初始化结构体">初始化结构体<a href="#初始化结构体" class="hash-link" aria-label="初始化结构体的直接链接" title="初始化结构体的直接链接">​</a></h4><ul><li>支持初始化使用环境变量</li><li>支持初始化 slice 字段，嵌套结构体</li></ul><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> ExtraDefault </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    City   </span><span class="token builtin">string</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">`default:"some where"`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Github </span><span class="token builtin">string</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">`default:"${ GITHUB_ADDR }"`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> User </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Name  </span><span class="token builtin">string</span><span class="token plain">        </span><span class="token string" style="color:#e3116c">`default:"inhere"`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Age   </span><span class="token builtin">int</span><span class="token plain">           </span><span class="token string" style="color:#e3116c">`default:"300"`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Extra </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">ExtraDefault </span><span class="token string" style="color:#e3116c">`default:""`</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 标记需要初始化</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">optFn </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">opt </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">structs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">InitOptions</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    opt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ParseEnv </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">obj </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">User</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> structs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">InitDefaults</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">obj</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> optFn</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">goutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">PanicErr</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">dump</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">P</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">obj</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>初始化结果</strong>:</p><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">structs_test</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">User </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"inhere"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> #</span><span class="token builtin">len</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">6</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Age</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">300</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Extra</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">structs_test</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ExtraDefault </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    City</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"some where"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> #</span><span class="token builtin">len</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">10</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Github</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"https://some .... url"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> #</span><span class="token builtin">len</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">21</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="使用-echo-server-测试">使用 echo server 测试<a href="#使用-echo-server-测试" class="hash-link" aria-label="使用 echo server 测试的直接链接" title="使用 echo server 测试的直接链接">​</a></h4><p>使用 <code>testutil.NewEchoServer()</code> 可以快速的创建一个HTTP echo server. 方便测试HTTP请求，响应等。</p><p><strong>使用示例</strong>：</p><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_KVh2">"example_test.go“</div><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> testSrvAddr </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">TestMain</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">m </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">testing</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">M</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> testutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewEchoServer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">defer</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Close</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    testSrvAddr </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"http://"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Listener</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Addr</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"server addr:"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> testSrvAddr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    m</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Run</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">TestNewEchoServer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">t </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">testing</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">T</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 可直接请求测试server</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    r</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Post</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">testSrvAddr</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"text/plain"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> strings</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewReader</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"hello!"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    assert</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NoErr</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">t</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 将响应信息绑定到 testutil.EchoReply</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    rr </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> testutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ParseRespToReply</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">r</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    dump</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">P</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">rr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    assert</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Eq</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">t</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"POST"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> rr</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Method</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    assert</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Eq</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">t</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"text/plain"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> rr</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ContentType</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    assert</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Eq</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">t</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"hello!"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> rr</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Body</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="v069-更新记录">v0.6.9 更新记录<a href="#v069-更新记录" class="hash-link" aria-label="v0.6.9 更新记录的直接链接" title="v0.6.9 更新记录的直接链接">​</a></h2><blockquote><p>完整变更日志 <a href="https://github.com/gookit/goutil/compare/v0.6.8...v0.6.9" target="_blank" rel="noopener noreferrer">v0.6.8...v0.6.9</a></p></blockquote><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="-新功能-1">✨ 新功能<a href="#-新功能-1" class="hash-link" aria-label="✨ 新功能的直接链接" title="✨ 新功能的直接链接">​</a></h3><ul><li>strutil - 新增 <code>ToByteSize(),SafeByteSize()</code> 用于将大小字符串(eg: 5MB)转换为字节大小</li><li>strutil 新增 <code>ParseSizeRange()</code> 方便快速的解析字符串大小范围表达式 eg：<code>200kb~50mb</code></li><li>strutil - 添加新的工具函数: <code>DatetimeNo()，RandWithTpl(), SimpleMatch()</code></li><li>byteutil - 添加新的工具函数: <code>Random()</code>, <code>AppendAny()</code></li><li>fsutil - 添加新的工具函数: <code>ReadOrErr()</code>, <code>ReadStringOrErr()</code></li><li>cliutil - 添加新的工具函数: <code>Confirm()</code>, <code>ReadAsBool()</code></li><li>errorx - 添加新的工具函数 <code>Err(), Errf()</code> 方便创建 error</li><li>structs - <code>InitDefaults()</code> 增强，支持嵌套结构体指针初始化</li><li>structs - <code>SetValues()</code> 增强，支持设置处理结构体指针值</li><li>structs - 新增 <code>ToSMap(), TryToSMap(), TryToSMap()</code> 转换结构体为string map</li><li>testutil/assert 新增断言方法 <code>NotContainsKey()</code>, <code>NotContainsKeys()</code></li><li>reflects 新增工具方法 <code>UnexportedValue()</code>, <code>SetUnexportedValue()</code></li><li>maputil 新增工具函数 <code>HasOneKey(), CombineToMap(), TryAnyMap()</code></li><li>arrutil 新增工具函数 <code>AnyToSlice(), CombineToMap()</code></li><li>jsonutil 新增工具方法 <code>IsJSON(), IsJSONFast()</code> 检查是否是JSON</li><li>♻️ fsutil/finder 文件、目录查找重构，功能增强，使用更加方便</li><li>timex 新增工具函数 <code>NowAddSec(), IsDuration(), InRange()</code></li><li>timex <code>ToDuration()</code> 增强，支持单位 d，w 和长单位 hour、min、sec</li><li>mathutil 新增工具方法 <code>InRange()</code>, <code>OutRange()</code>, <code>InUintRange()</code></li><li>fsutil 新增工具方法 <code>RemoveSub()</code> 快速删除子目录和文件</li><li>maputil <code>GetByPath()</code> 增强，支持类似 <code>top.*.field</code> 匹配路径获取值</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="-更新调整-1">👔 更新调整<a href="#-更新调整-1" class="hash-link" aria-label="👔 更新调整的直接链接" title="👔 更新调整的直接链接">​</a></h3><ul><li>strutil 优化 <code>ToByteSize()</code> 和 <code>GlobMatch()</code> 逻辑</li><li>struts - InitDefaults() 支持初始化非零 ptr 子结构字段</li><li>💥 struts - InitDefaults() 要初始化子结构字段必须带有 <code>default:""</code></li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="其他调整-1">其他调整<a href="#其他调整-1" class="hash-link" aria-label="其他调整的直接链接" title="其他调整的直接链接">​</a></h3><ul><li>📝 文档：README 文档更新，一些子包添加 README</li><li>✅ test: 新增并修复一些单元测试</li><li>⬆️ dep: 更新 golang.org/x 依赖到最新版本</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="部分功能使用示例">部分功能使用示例<a href="#部分功能使用示例" class="hash-link" aria-label="部分功能使用示例的直接链接" title="部分功能使用示例的直接链接">​</a></h3><h4 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="finder-文件查找使用">finder 文件查找使用<a href="#finder-文件查找使用" class="hash-link" aria-label="finder 文件查找使用的直接链接" title="finder 文件查找使用的直接链接">​</a></h4><p><code>fsutil/finder</code> 提供了简单快速的方式查找匹配文件、目录。</p><ul><li>内置支持 名称、扩展、后缀、前缀、glob、path 等包含或排除</li><li>支持匹配 文件大小，修改时间(ModTime)等扩展匹配方式</li></ul><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">ff </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> finder</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewFinder</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"/path/to/dir/"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// OnlyFindDir(). // 默认只只查找文件</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">UseAbsPath</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">WithoutDotDir</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">WithDirName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"testdata"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Find() 返回chan, 可以 for 处理查找结果</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> el </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">range</span><span class="token plain"> f</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Find</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">el</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Path</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="strutilparsesizerange">strutil.ParseSizeRange<a href="#strutilparsesizerange" class="hash-link" aria-label="strutil.ParseSizeRange的直接链接" title="strutil.ParseSizeRange的直接链接">​</a></h4><p>可以简单方便的将字符串大小范围解析为 byte size</p><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">opt </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">strutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ParseSizeOpt</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mix</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> max</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> strutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ParseSizeRange</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"1kb~1mb"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> opt</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">goutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">PanicErr</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">min</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> max</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// OUTPUT: 1024, 1048576</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>支持的表达式格式示例：</strong></p><div class="language-text codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">"1KB~2MB"       =&gt; 1KB to 2MB</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"-1KB"          =&gt; &lt;1KB</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"~1MB"          =&gt; &lt;1MB</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"&lt; 1KB"         =&gt; &lt;1KB</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"1KB"           =&gt; &gt;1KB</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"1KB~"          =&gt; &gt;1KB</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"&gt;1KB"          =&gt; &gt;1KB</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"+1KB"          =&gt; &gt;1KB</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="timexparserange">timex.ParseRange()<a href="#timexparserange" class="hash-link" aria-label="timex.ParseRange()的直接链接" title="timex.ParseRange()的直接链接">​</a></h4><p><code>timex.ParseRange()</code> 可以简单快速的将相对的时间大小范围、或关键字解析为 time.Time</p><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">start</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> end</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">ParseRange</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"-1h~1h"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">goutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">PanicErr</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">start</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> end</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>支持的表达式格式示例：</strong></p><div class="language-text codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">"-5h~-1h"           =&gt; 5 hours ago to 1 hour ago</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"1h~5h"             =&gt; 1 hour after to 5 hours after</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"-1h~1h"            =&gt; 1 hour ago to 1 hour after</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"-1h"               =&gt; 1 hour ago to feature. eq "-1h~"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"-1h~0"             =&gt; 1 hour ago to now.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"&lt; -1h" OR "~-1h"   =&gt; 1 hour ago.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"&gt; 1h" OR "1h"      =&gt; 1 hour after to feature</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// keyword: now, today, yesterday, tomorrow</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"today"          =&gt; today start to today end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"yesterday"      =&gt; yesterday start to yesterday end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"tomorrow"       =&gt; tomorrow start to tomorrow end</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="更多信息">更多信息<a href="#更多信息" class="hash-link" aria-label="更多信息的直接链接" title="更多信息的直接链接">​</a></h2><p>更多使用说明请看 <a href="https://github.com/gookit/slog/blob/master/README.zh-CN.md" target="_blank" rel="noopener noreferrer">README</a> 以及相关方法的单元测试</p><blockquote><p><strong>Github</strong>: <a href="https://github.com/gookit/goutil" target="_blank" rel="noopener noreferrer">https://github.com/gookit/goutil</a></p></blockquote>]]></content:encoded>
            <category>gookit</category>
            <category>golang</category>
            <category>goutil</category>
        </item>
        <item>
            <title><![CDATA[gookit/slog - 发布 v0.5.2 版本, 易于使用的，可配置、可扩展的Go日志库]]></title>
            <link>https://inhere.github.io/blog/gookit-slog-release-v0.5.2</link>
            <guid>https://inhere.github.io/blog/gookit-slog-release-v0.5.2</guid>
            <pubDate>Mon, 19 Jun 2023 17:16:00 GMT</pubDate>
            <description><![CDATA[gookit/slog 📑 一个易于使用的，轻量级、可配置、可扩展的日志库。支持多个级别，输出到多文件；内置文件日志处理、自动切割、清理、压缩等增强功能]]></description>
            <content:encoded><![CDATA[<p><code>gookit/slog</code> 📑 一个易于使用的，轻量级、可配置、可扩展的日志库。支持多个级别，输出到多文件；内置文件日志处理、自动切割、清理、压缩等增强功能</p><blockquote><p>Github <a href="https://github.com/gookit/slog" target="_blank" rel="noopener noreferrer">https://github.com/gookit/slog</a></p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="v052-更新记录">v0.5.2 更新记录<a href="#v052-更新记录" class="hash-link" aria-label="v0.5.2 更新记录的直接链接" title="v0.5.2 更新记录的直接链接">​</a></h2><p><strong>完整变更记录</strong>: <a href="https://github.com/gookit/slog/compare/v0.5.1...v0.5.2" target="_blank" rel="noopener noreferrer">https://github.com/gookit/slog/compare/v0.5.1...v0.5.2</a></p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="新功能">新功能<a href="#新功能" class="hash-link" aria-label="新功能的直接链接" title="新功能的直接链接">​</a></h3><ul><li>✨ feat: 添加新选项 FilePerm 用于自定义创建log文件上的权限. issues #102 <a href="https://github.com/gookit/slog/commit/699ecd8bc2dea0fb35607ba89d4299e86f96e40b" target="_blank" rel="noopener noreferrer">https://github.com/gookit/slog/commit/699ecd8bc2dea0fb35607ba89d4299e86f96e40b</a></li><li>✨ feat: rotatefile - 添加新配置旋转模式 <code>RotateMode</code> ，支持在旋转时间创建日志文件。 <a href="https://github.com/gookit/slog/commit/8c4a9a08a9b3432a699f6770b73935ecfd42e5b8" target="_blank" rel="noopener noreferrer">https://github.com/gookit/slog/commit/8c4a9a08a9b3432a699f6770b73935ecfd42e5b8</a></li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="更新调整">更新调整<a href="#更新调整" class="hash-link" aria-label="更新调整的直接链接" title="更新调整的直接链接">​</a></h3><ul><li>👔 up: 更新并添加更多单元测试，将 goutil 升级到 v0.6.10 <a href="https://github.com/gookit/slog/commit/693cc04eb0e375183357be18893cbecaa171ffa1" target="_blank" rel="noopener noreferrer">https://github.com/gookit/slog/commit/693cc04eb0e375183357be18893cbecaa171ffa1</a></li><li>📝 doc: 更新README文档说明 <a href="https://github.com/gookit/slog/commit/cbf77c38db5615a9a7ec8ab07853b2f9e3517bfa" target="_blank" rel="noopener noreferrer">https://github.com/gookit/slog/commit/cbf77c38db5615a9a7ec8ab07853b2f9e3517bfa</a></li><li>✅ test: 添加更多单元测试用例 <a href="https://github.com/gookit/slog/commit/8468ea470645bb981fb34002176671bac1a9559e" target="_blank" rel="noopener noreferrer">https://github.com/gookit/slog/commit/8468ea470645bb981fb34002176671bac1a9559e</a></li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="新功能使用">新功能使用<a href="#新功能使用" class="hash-link" aria-label="新功能使用的直接链接" title="新功能使用的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="自定义日志文件权限">自定义日志文件权限<a href="#自定义日志文件权限" class="hash-link" aria-label="自定义日志文件权限的直接链接" title="自定义日志文件权限的直接链接">​</a></h3><p>通过配置 <code>hander.Config</code> 的 <code>FilePerm</code> 设置创建的log文件权限标志。</p><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">h1 </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> handler</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">MustFileHandler</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"/tmp/error.log"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    handler</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">WithLogLevels</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">slog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DangerLevels</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    handler</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">WithFilePerm</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0644</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// &lt;- 设置创建文件的权限</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">slog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">PushHandler</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">h1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="使用modecreate模式分割文件">使用ModeCreate模式分割文件<a href="#使用modecreate模式分割文件" class="hash-link" aria-label="使用ModeCreate模式分割文件的直接链接" title="使用ModeCreate模式分割文件的直接链接">​</a></h3><p>RotateMode 文件切割模式：</p><ul><li>ModeRename 默认，每到时间重命名处理分割</li><li>ModeCreate 只按照分割时间创建</li></ul><p>设置 <code>RotateMode</code> 为 <code>ModeCreate</code> 可以让日志文件，只按照分割时间创建。</p><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">h1 </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> handler</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">MustRotateFile</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"/tmp/error.log"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    rotatefile</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">EveryHour</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 按每小时分割</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    handler</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">WithLogLevels</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">slog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DangerLevels</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    handler</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">WithRotateMode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">rotatefile</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ModeCreate</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 设置RotateMode为ModeCreate</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">slog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">PushHandler</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">h1</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>如上面的示例配置 logfile 为 <code>/tmp/error.log</code>。设置为 <code>ModeCreate</code> 模式时，实际不会创建这个文件，
会按照实际分割时间来创建：</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">/tmp/error.log.20230618_1500</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/tmp/error.log.20230618_1600</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/tmp/error.log.20230618_1700</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p><strong>Tips</strong>: <code>ModeCreate</code> 模式可以适用于命令行工具应用。因为它们是每次执行完就退出，<code>ModeRename</code> 模式下可能无法按时分割文件。</p></blockquote><p>而使用 <code>ModeRename</code> 模式会是如下效果：</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">/tmp/error.log </span><span class="token comment" style="color:#999988;font-style:italic"># &lt;- 日志始终写入这个文件</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/tmp/error.log.20230618_1500</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/tmp/error.log.20230618_1600</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/tmp/error.log.20230618_1700</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="更多">更多<a href="#更多" class="hash-link" aria-label="更多的直接链接" title="更多的直接链接">​</a></h2><p>更多使用说明请看 <a href="https://github.com/gookit/slog/blob/master/README.zh-CN.md" target="_blank" rel="noopener noreferrer">README</a></p>]]></content:encoded>
            <category>gookit</category>
            <category>golang</category>
            <category>logger</category>
            <category>slog</category>
        </item>
        <item>
            <title><![CDATA[gookit/event - Go实现的轻量级的事件管理、调度程序库]]></title>
            <link>https://inhere.github.io/blog/gookit-event-pacakge-intro</link>
            <guid>https://inhere.github.io/blog/gookit-event-pacakge-intro</guid>
            <pubDate>Wed, 14 Jun 2023 15:53:00 GMT</pubDate>
            <description><![CDATA[gookit/event Go实现的轻量级的事件管理、调度程序库, 支持设置监听器的优先级, 支持使用通配符来进行一组事件的监听。]]></description>
            <content:encoded><![CDATA[<p><code>gookit/event</code> Go实现的轻量级的事件管理、调度程序库, 支持设置监听器的优先级, 支持使用通配符来进行一组事件的监听。</p><ul><li>GitHub <a href="https://github.com/gookit/event" target="_blank" rel="noopener noreferrer">https://github.com/gookit/event</a></li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="功能简介">功能简介<a href="#功能简介" class="hash-link" aria-label="功能简介的直接链接" title="功能简介的直接链接">​</a></h2><ul><li>支持自定义创建预定义的事件对象</li><li>支持对一个事件添加多个监听器</li><li>支持设置事件监听器的优先级，优先级越高越先触发</li><li>支持通过通配符 <code>*</code> 来进行一组事件的匹配监听.<ul><li><code>ModeSimple</code> - 注册 <code>app.db.*</code> 事件的监听，触发 <code>app.db.run</code> <code>app.db.end</code> 时，都将同时会触发 <code>app.db.*</code> 监听器</li><li><code>ModePath</code> - <strong>NEW</strong> <code>*</code> 只匹配一段非 <code>.</code> 的字符,可以进行更精细的监听; <code>**</code> 匹配任意多个字符,只能用于开头或结尾</li></ul></li><li>支持直接使用通配符 <code>*</code> 来监听全部事件的触发</li><li>支持触发事件时投递到 <code>chan</code>, 异步进行消费处理. 触发方法: <code>Async(), FireAsync()</code></li><li>完善的单元测试，单元覆盖率 <code>&gt; 95%</code></li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="安装">安装<a href="#安装" class="hash-link" aria-label="安装的直接链接" title="安装的直接链接">​</a></h2><div class="language-shell codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-shell codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">go get github.com/gookit/event</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="主要方法">主要方法<a href="#主要方法" class="hash-link" aria-label="主要方法的直接链接" title="主要方法的直接链接">​</a></h2><ul><li><code>On/Listen(name string, listener Listener, priority ...int)</code> 注册事件监听</li><li><code>Subscribe/AddSubscriber(sbr Subscriber)</code>  订阅，支持注册多个事件监听</li><li><code>Trigger/Fire(name string, params M) (error, Event)</code> 触发事件</li><li><code>MustTrigger/MustFire(name string, params M) Event</code> 触发事件，有错误则会panic</li><li><code>FireEvent(e Event) (err error)</code> 根据给定的事件实例，触发事件</li><li><code>FireBatch(es ...interface{}) (ers []error)</code> 一次触发多个事件</li><li><code>Async/FireC(name string, params M)</code> 触发投递事件到 <code>chan</code>，异步消费处理</li><li><code>FireAsync(e Event)</code>  触发投递事件到 <code>chan</code>，异步消费处理</li><li><code>AsyncFire(e Event)</code>  简单的通过 <code>go</code> 异步触发事件</li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="快速使用">快速使用<a href="#快速使用" class="hash-link" aria-label="快速使用的直接链接" title="快速使用的直接链接">​</a></h2><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">package</span><span class="token plain"> main</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"fmt"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"github.com/gookit/event"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 注册事件监听器</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">On</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"evt1"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ListenerFunc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Event</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"handle event: %s\n"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Name</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Normal</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 注册多个监听器</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">On</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"evt1"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ListenerFunc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Event</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"handle event: %s\n"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Name</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">High</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// ... ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 触发事件</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 注意：第二个监听器的优先级更高，所以它会先被执行</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">MustFire</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"evt1"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">M</span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"arg0"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"val0"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"arg1"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"val1"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>Note: 注意：第二个监听器的优先级更高，所以它会先被执行</p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="异步消费事件">异步消费事件<a href="#异步消费事件" class="hash-link" aria-label="异步消费事件的直接链接" title="异步消费事件的直接链接">​</a></h2><p>可以使用 <code>Async/FireC/FireAsync</code> 方法触发事件，事件将会写入 chan 异步消费。可以使用 <code>CloseWait()</code> 关闭chan并等待事件全部消费完成。</p><p><strong>新增配置选项</strong>:</p><ul><li><code>ChannelSize</code> 设置 <code>chan</code> 的缓冲大小</li><li><code>ConsumerNum</code> 设置启动多少个协程来消费事件</li></ul><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 注意：在程序退出时关闭事件chan</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">defer</span><span class="token plain"> event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Close</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// defer event.CloseWait()</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 注册事件监听器</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">On</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"app.evt1"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ListenerFunc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Event</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"handle event: %s\n"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Name</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Normal</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 注册多个监听器</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">On</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"app.evt1"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ListenerFunc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Event</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"handle event: %s\n"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Name</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">High</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// ... ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 异步消费事件</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">FireC</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"app.evt1"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">M</span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"arg0"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"val0"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"arg1"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"val1"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>Note: 应当在程序退出时关闭事件chan. 可以使用下面的方法:</p></blockquote><ul><li><code>event.Close()</code> 立即关闭 <code>chan</code> 不再接受新的事件</li><li><code>event.CloseWait()</code> 关闭 <code>chan</code> 并等待所有事件处理完成</li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="更多">更多<a href="#更多" class="hash-link" aria-label="更多的直接链接" title="更多的直接链接">​</a></h2><p>更多使用说明请看 <a href="https://github.com/gookit/event/blob/master/README.zh-CN.md" target="_blank" rel="noopener noreferrer">README</a></p>]]></content:encoded>
            <category>golang</category>
            <category>gookit</category>
            <category>event</category>
        </item>
        <item>
            <title><![CDATA[通过docker安装日志搜索服务 zincobserve(openobserve)]]></title>
            <link>https://inhere.github.io/blog/install-log-search-zincobserve-by-docker</link>
            <guid>https://inhere.github.io/blog/install-log-search-zincobserve-by-docker</guid>
            <pubDate>Fri, 26 May 2023 16:41:00 GMT</pubDate>
            <description><![CDATA[在本地安装并使用日志搜索服务 zincobserve.]]></description>
            <content:encoded><![CDATA[<p>在本地安装并使用日志搜索服务 <code>zincobserve</code>.</p><p><code>zincobserve</code> 是一个 rust 编写的日志索引和搜索服务。比ES简洁方便，已经自带了简单的GUI界面，可以直接使用。如果要用于应用业务数据搜索，可以使用它们的另一个项目 <code>zincsearch</code>。</p><blockquote><p>文档地址：<a href="https://zinc.dev/docs/guide/quickstart/" target="_blank" rel="noopener noreferrer">https://zinc.dev/docs/guide/quickstart/</a></p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="拉取镜像">拉取镜像<a href="#拉取镜像" class="hash-link" aria-label="拉取镜像的直接链接" title="拉取镜像的直接链接">​</a></h2><div class="language-shell codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-shell codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">docker</span><span class="token plain"> pull public.ecr.aws/zinclabs/zincobserve:latest</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="启动运行">启动运行<a href="#启动运行" class="hash-link" aria-label="启动运行的直接链接" title="启动运行的直接链接">​</a></h3><p>通过设置环境变量 <code>ZO_ROOT_USER_EMAIL</code> <code>ZO_ROOT_USER_PASSWORD</code> 初始化账号。</p><blockquote><p>注意：先创建一个data目录放数据。</p></blockquote><div class="language-shell codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-shell codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">mkdir</span><span class="token plain"> data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">docker</span><span class="token plain"> run -v </span><span class="token environment constant" style="color:#36acaa">$PWD</span><span class="token plain">/data:/data -e </span><span class="token assign-left variable" style="color:#36acaa">ZO_DATA_DIR</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"/data"</span><span class="token plain"> -p </span><span class="token number" style="color:#36acaa">5080</span><span class="token plain">:5080 </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -e </span><span class="token assign-left variable" style="color:#36acaa">ZO_ROOT_USER_EMAIL</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">root@example.com -e </span><span class="token assign-left variable" style="color:#36acaa">ZO_ROOT_USER_PASSWORD</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">Complexpass</span><span class="token comment" style="color:#999988;font-style:italic">#123 \</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name zinc-observe public.ecr.aws/zinclabs/zincobserve:latest</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>启动后，即可以通过浏览器打开 http://localhost:5080 并登录。</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="加载示例数据">加载示例数据<a href="#加载示例数据" class="hash-link" aria-label="加载示例数据的直接链接" title="加载示例数据的直接链接">​</a></h2><p>我们将使用 JSON API 加载示例日志数据。</p><p>以下命令将下载真实日志数据的示例文件，将其解压缩并使用 JSON 摄取 API 加载到 ZincObserve 中。</p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="下载示例数据">下载示例数据<a href="#下载示例数据" class="hash-link" aria-label="下载示例数据的直接链接" title="下载示例数据的直接链接">​</a></h3><div class="language-shell codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-shell codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">curl</span><span class="token plain"> -L https://zinc-public-data.s3.us-west-2.amazonaws.com/zinc-enl/sample-k8s-logs/k8slog_json.json.zip -o k8slog_json.json.zip</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">unzip</span><span class="token plain"> k8slog_json.json.zip</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">ls</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">k8slog_json.json</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="加载示例数据-1">加载示例数据<a href="#加载示例数据-1" class="hash-link" aria-label="加载示例数据的直接链接" title="加载示例数据的直接链接">​</a></h3><ul><li>加载 <code>array[object]</code> 数据</li></ul><div class="language-shell codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-shell codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">curl</span><span class="token plain"> http://localhost:5080/api/default/default/_json -i -u root@example.com:Complexpass</span><span class="token comment" style="color:#999988;font-style:italic">#123  -d "@k8slog_json.json"</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li>加载多行的JSON数据,每行是一个JSON对象</li></ul><div class="language-shell codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-shell codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">curl</span><span class="token plain"> http://localhost:5080/api/default/default/_multi -i -u root@example.com:Complexpass</span><span class="token comment" style="color:#999988;font-style:italic">#123  -d "@some-app.log"</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="搜索数据">搜索数据<a href="#搜索数据" class="hash-link" aria-label="搜索数据的直接链接" title="搜索数据的直接链接">​</a></h2><p>使用浏览器打开 http://localhost:5080 并登录</p><ol><li>访问页面菜单 <code>Logs</code></li><li>从左侧的下拉列表中选择索引 <code>default</code></li><li>输入搜索栏，然后单击右侧的搜索按钮。 <code>match_all('error')</code></li></ol><p>单击搜索栏旁边的 “语法指南” 按钮以查看有关如何搜索的示例。</p>]]></content:encoded>
            <category>tool</category>
            <category>zinc</category>
            <category>search</category>
        </item>
        <item>
            <title><![CDATA[gookit/config - Go语言读取多种格式配置文件]]></title>
            <link>https://inhere.github.io/blog/gookit-config-intro</link>
            <guid>https://inhere.github.io/blog/gookit-config-intro</guid>
            <pubDate>Wed, 31 Aug 2022 13:25:00 GMT</pubDate>
            <description><![CDATA[gookit/config - Go应用配置管理，支持读取多种格式 JSON(默认), JSON5, INI, Properties, YAML, TOML, HCL, ENV, Flags，多文件加载，支持数据合并，解析环境变量名等等]]></description>
            <content:encoded><![CDATA[<p><code>gookit/config</code> - Go应用配置管理，支持读取多种格式 <code>JSON</code>(默认), <code>JSON5</code>, <code>INI</code>, <code>Properties</code>, <code>YAML</code>, <code>TOML</code>, <code>HCL</code>, <code>ENV</code>, <code>Flags</code>，多文件加载，支持数据合并，解析环境变量名等等</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="功能简介">功能简介<a href="#功能简介" class="hash-link" aria-label="功能简介的直接链接" title="功能简介的直接链接">​</a></h2><ul><li>支持多种格式: <code>JSON</code>(默认), <code>JSON5</code>, <code>INI</code>, <code>Properties</code>, <code>YAML</code>, <code>TOML</code>, <code>HCL</code>, <code>ENV</code>, <code>Flags</code><ul><li><code>JSON</code> 内容支持注释，可以设置解析时清除注释</li><li>其他驱动都是按需使用，不使用的不会加载编译到应用中</li></ul></li><li>支持多个文件、多数据加载</li><li>支持从 OS ENV 变量数据加载配置</li><li>支持从远程 URL 加载配置数据</li><li>支持从命令行参数(<code>flags</code>)设置配置数据</li><li>支持在配置数据更改时触发事件<ul><li>可用事件: <code>set.value</code>, <code>set.data</code>, <code>load.data</code>, <code>clean.data</code></li></ul></li><li>支持数据覆盖合并，加载多份数据时将按key自动合并</li><li>支持将全部或部分配置数据绑定到结构体 <code>config.BindStruct("key", &amp;s)</code><ul><li>NEW: 支持通过结构体标签 <code>default</code> 解析并设置默认值</li></ul></li><li>支持通过 <code>.</code> 分隔符来按路径获取子级值，也支持自定义分隔符。 e.g <code>map.key</code> <code>arr.2</code></li><li>支持解析ENV变量名称。 like <code>shell: ${SHELL}</code> -&gt; <code>shell: /bin/zsh</code></li><li>简洁的使用API <code>Get</code> <code>Int</code> <code>Uint</code> <code>Int64</code> <code>String</code> <code>Bool</code> <code>Ints</code> <code>IntMap</code> <code>Strings</code> <code>StringMap</code> ...</li><li>完善的单元测试(code coverage &gt; 95%)</li></ul><blockquote><p>Github: <a href="https://github.com/gookit/config" target="_blank" rel="noopener noreferrer">https://github.com/gookit/config</a></p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="使用示例">使用示例<a href="#使用示例" class="hash-link" aria-label="使用示例的直接链接" title="使用示例的直接链接">​</a></h2><p>这里使用yaml格式内容作为示例:</p><div class="language-yaml codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-yaml codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> app2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">debug</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">baseKey</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> value2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">shell</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">SHELL</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">envKey1</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">NotExist</span><span class="token punctuation" style="color:#393A34">|</span><span class="token plain">defValue</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">map1</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">key</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> val2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">key2</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> val20</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">arr1</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> val1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> val21</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>示例代码请看 <a href="https://github.com/gookit/config/blob/master/_examples/yaml.go" target="_blank" rel="noopener noreferrer">_examples/yaml.go</a>:</p></blockquote><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">package</span><span class="token plain"> main</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"github.com/gookit/config/v2"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"github.com/gookit/config/v2/yamlv3"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// go run ./examples/yaml.go</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 设置选项支持 ENV 解析</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">WithOptions</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ParseEnv</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 添加驱动程序以支持yaml内容解析（除了JSON是默认支持，其他的则是按需使用）</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">AddDriver</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">yamlv3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Driver</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 加载配置，可以同时传入多个文件</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">LoadFiles</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"testdata/yml_base.yml"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">panic</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// fmt.Printf("config data: \n %#v\n", config.Data())</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 加载更多文件</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    err </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">LoadFiles</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"testdata/yml_other.yml"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 也可以一次性加载多个文件</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// err := config.LoadFiles("testdata/yml_base.yml", "testdata/yml_other.yml")</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">panic</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="使用说明">使用说明<a href="#使用说明" class="hash-link" aria-label="使用说明的直接链接" title="使用说明的直接链接">​</a></h3><ul><li>可以使用 <code>WithOptions()</code> 添加更多额外选项功能. 例如: <code>ParseEnv</code>, <code>ParseDefault</code></li><li>可以使用 <code>AddDriver()</code> 添加需要使用的格式驱动器(<code>json</code> 是默认加载的的,无需添加)</li><li>然后就可以使用 <code>LoadFiles()</code> <code>LoadStrings()</code> 等方法加载配置数据<ul><li>可以传入多个文件,也可以调用多次</li><li>多次加载的数据会自动按key进行合并处理</li></ul></li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="绑定数据到结构体">绑定数据到结构体<a href="#绑定数据到结构体" class="hash-link" aria-label="绑定数据到结构体的直接链接" title="绑定数据到结构体的直接链接">​</a></h3><blockquote><p>注意：结构体默认的绑定映射tag是 <code>mapstructure</code>，可以通过设置 <code>Options.TagName</code> 来更改它</p></blockquote><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> User </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Age  </span><span class="token builtin">int</span><span class="token plain">  </span><span class="token string" style="color:#e3116c">`mapstructure:"age"`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Key  </span><span class="token builtin">string</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">`mapstructure:"key"`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  UserName  </span><span class="token builtin">string</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">`mapstructure:"user_name"`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Tags </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">int</span><span class="token plain">  </span><span class="token string" style="color:#e3116c">`mapstructure:"tags"`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">user </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> User</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">err </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">BindStruct</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"user"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">user</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">user</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">UserName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// inhere</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>更改结构标签名称</strong></p><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">WithOptions</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">opt </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">Options</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    options</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DecoderConfig</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">TagName </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"config"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// use custom tag name.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> User </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Age  </span><span class="token builtin">int</span><span class="token plain">  </span><span class="token string" style="color:#e3116c">`config:"age"`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Key  </span><span class="token builtin">string</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">`config:"key"`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  UserName  </span><span class="token builtin">string</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">`config:"user_name"`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Tags </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">int</span><span class="token plain">  </span><span class="token string" style="color:#e3116c">`config:"tags"`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">user </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> User</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">err </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Decode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">user</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>将所有配置数据绑定到结构:</p><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Decode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">myConf</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 也可以</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">BindStruct</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">myConf</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p><code>config.MapOnExists</code> 与 <code>BindStruct</code> 一样，但仅当 key 存在时才进行映射绑定</p></blockquote><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="快速获取数据">快速获取数据<a href="#快速获取数据" class="hash-link" aria-label="快速获取数据的直接链接" title="快速获取数据的直接链接">​</a></h3><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// 获取整型</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">age </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"age"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">age</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 100</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 获取布尔值</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">val </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Bool</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"debug"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">val</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 获取字符串</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">name </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"name"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// inhere</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 获取字符串数组</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">arr1 </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Strings</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"arr1"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"%v %#v"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> arr1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// []string{"val1", "val21"}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 获取字符串KV映射</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">val </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">StringMap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"map1"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"%v %#v"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">val</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// map[string]string{"key":"val2", "key2":"val20"}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 值包含ENV变量</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">value </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"shell"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">value</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// /bin/zsh</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 通过key路径获取值</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// from array</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">value </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"arr1.0"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">value</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// "val1"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// from map</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">value </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"map1.key"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">value</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// "val2"</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="设置新的值">设置新的值<a href="#设置新的值" class="hash-link" aria-label="设置新的值的直接链接" title="设置新的值的直接链接">​</a></h3><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// set value</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Set</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"name"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"new name"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// get</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"name"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// new name</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="从env载入数据">从ENV载入数据<a href="#从env载入数据" class="hash-link" aria-label="从ENV载入数据的直接链接" title="从ENV载入数据的直接链接">​</a></h2><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// os env: APP_NAME=config APP_DEBUG=true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// load ENV info</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">LoadOSEnvs</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">map</span><span class="token punctuation" style="color:#393A34">[</span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"APP_NAME"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"app_name"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"APP_DEBUG"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"app_debug"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// read</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Bool</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"app_debug"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"app_name"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// "config"</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="从命令行参数载入数据">从命令行参数载入数据<a href="#从命令行参数载入数据" class="hash-link" aria-label="从命令行参数载入数据的直接链接" title="从命令行参数载入数据的直接链接">​</a></h2><p>支持简单的从命令行 <code>flag</code> 参数解析，加载数据</p><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// flags like: --name inhere --env dev --age 99 --debug</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// load flag info</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">keys </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"name"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"env"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"age:int"</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"debug:bool"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">LoadFlags</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">keys</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// read</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"name"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// "inhere"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"env"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// "dev"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"age"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 99</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Bool</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"debug"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// true</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="更多">更多<a href="#更多" class="hash-link" aria-label="更多的直接链接" title="更多的直接链接">​</a></h2><p>更多使用说明请看 <a href="https://github.com/gookit/config/blob/master/README.zh-CN.md" target="_blank" rel="noopener noreferrer">README</a></p>]]></content:encoded>
            <category>golang</category>
            <category>config</category>
            <category>management</category>
            <category>gookit</category>
        </item>
        <item>
            <title><![CDATA[通过 scoop 在Windows 下安装工具]]></title>
            <link>https://inhere.github.io/blog/install-tools-by-scoop-on-windows</link>
            <guid>https://inhere.github.io/blog/install-tools-by-scoop-on-windows</guid>
            <pubDate>Sun, 10 Jul 2022 14:38:00 GMT</pubDate>
            <description><![CDATA[scoop 是一个Windows 下的应用包安装管理工具，类似于 Linux 下的 yum,apt 和MacOs 下的 brew。]]></description>
            <content:encoded><![CDATA[<p><code>scoop</code> 是一个Windows 下的应用包安装管理工具，类似于 Linux 下的 <code>yum,apt</code> 和MacOs 下的 <code>brew</code>。</p><p>通过使用 scoop 可以方便快速的安装常用的开发工具，会自动设置环境变量，例如 php, go, rust 等。</p><blockquote><p>Scoop github: <a href="https://github.com/ScoopInstaller/Scoop" target="_blank" rel="noopener noreferrer">https://github.com/ScoopInstaller/Scoop</a> </p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="安装scoop">安装Scoop<a href="#安装scoop" class="hash-link" aria-label="安装Scoop的直接链接" title="安装Scoop的直接链接">​</a></h2><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">iwr -useb get.scoop.sh </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> iex</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>添加bucket 支持更多工具:</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">scoop bucket </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> extras</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="基本使用">基本使用<a href="#基本使用" class="hash-link" aria-label="基本使用的直接链接" title="基本使用的直接链接">​</a></h2><p>查看可用命令：</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">scoop </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="搜索工具">搜索工具<a href="#搜索工具" class="hash-link" aria-label="搜索工具的直接链接" title="搜索工具的直接链接">​</a></h3><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">scoop search </span><span class="token function" style="color:#d73a49">git</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">scoop search php</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">scoop search go</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>输出类似：</p><div class="language-text codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">inhere@Inhere-win10 MINGW64 /f/work</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ scoop search php</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Results from local buckets...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Name           Version              Source Binaries</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">----           -------              ------ --------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">appengine-go   1.9.70               extras php_cli.ps1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">eclipse-php    2022-06              extras</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">php-nts-xdebug 3.1.5-8.1            extras</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">php-xdebug     3.1.5-8.1            extras</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">phpstorm       2022.1.3-221.5921.28 extras</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">xampp          8.1.6-0              extras php.exe</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">php-nts        8.1.8                main</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">php            8.1.8                main</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="安装工具">安装工具<a href="#安装工具" class="hash-link" aria-label="安装工具的直接链接" title="安装工具的直接链接">​</a></h3><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">scoop </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">git</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="卸载软件">卸载软件<a href="#卸载软件" class="hash-link" aria-label="卸载软件的直接链接" title="卸载软件的直接链接">​</a></h3><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">scoop uninstall </span><span class="token function" style="color:#d73a49">git</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="更新scoop及软件">更新scoop及软件<a href="#更新scoop及软件" class="hash-link" aria-label="更新scoop及软件的直接链接" title="更新scoop及软件的直接链接">​</a></h3><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">scoop update </span><span class="token comment" style="color:#999988;font-style:italic">#更新 scoop 自己</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">scoop update </span><span class="token function" style="color:#d73a49">git</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">#更新 git</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="安装aria2加速下载">安装aria2加速下载<a href="#安装aria2加速下载" class="hash-link" aria-label="安装aria2加速下载的直接链接" title="安装aria2加速下载的直接链接">​</a></h3><p>scoop安装aria2后，scoop会自动调用aria2进行多线程下载以加速下载：</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">scoop </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> aria2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 关闭每次运行时的告警提示</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">scoop config aria2-warning-enabled </span><span class="token boolean" style="color:#36acaa">false</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="安装常用工具">安装常用工具<a href="#安装常用工具" class="hash-link" aria-label="安装常用工具的直接链接" title="安装常用工具的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="基础工具">基础工具<a href="#基础工具" class="hash-link" aria-label="基础工具的直接链接" title="基础工具的直接链接">​</a></h3><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">scoop search </span><span class="token function" style="color:#d73a49">git</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="语言环境">语言环境<a href="#语言环境" class="hash-link" aria-label="语言环境的直接链接" title="语言环境的直接链接">​</a></h3><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">scoop search php</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">scoop search go</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">scoop search nodejs</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="其他工具">其他工具<a href="#其他工具" class="hash-link" aria-label="其他工具的直接链接" title="其他工具的直接链接">​</a></h3><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">scoop </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">composer</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">scoop </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">yarn</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>tool</category>
            <category>windows</category>
            <category>scoop</category>
        </item>
        <item>
            <title><![CDATA[安装并配置 docusaurus v2站点]]></title>
            <link>https://inhere.github.io/blog/install-and-config-docusaurus-v2.md</link>
            <guid>https://inhere.github.io/blog/install-and-config-docusaurus-v2.md</guid>
            <pubDate>Sat, 09 Jul 2022 17:13:00 GMT</pubDate>
            <description><![CDATA[简单记录一下如何安装和使用 Docusaurus 来构建自己的博客和文档站点。]]></description>
            <content:encoded><![CDATA[<p>简单记录一下如何安装和使用 Docusaurus 来构建自己的博客和文档站点。</p><blockquote><p>Docusaurus 的官方文档 <a href="https://docusaurus.io/zh-CN/docs" target="_blank" rel="noopener noreferrer">https://docusaurus.io/zh-CN/docs</a></p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="生成新站点">生成新站点<a href="#生成新站点" class="hash-link" aria-label="生成新站点的直接链接" title="生成新站点的直接链接">​</a></h2><p>使用 <code>classic</code> 模板生成一个新的 Docusaurus 站点 <code>my-website</code>。</p><p>运行命令后，经典模板将自动添加到您的项目中</p><div class="tabs-container tabList_AXDX"><ul role="tablist" aria-orientation="horizontal" class="tabs"><li role="tab" tabindex="0" aria-selected="true" class="tabs__item tabItem_bAX3 tabs__item--active">npm</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_bAX3">Yarn</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_bAX3">pnpm</li></ul><div class="margin-top--md"><div role="tabpanel" class="tabItem_eDPh"><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">npm</span><span class="token plain"> init docusaurus@latest my-website classic</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div><div role="tabpanel" class="tabItem_eDPh" hidden=""><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">yarn</span><span class="token plain"> create docusaurus@latest my-website classic</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div><div role="tabpanel" class="tabItem_eDPh" hidden=""><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">pnpm</span><span class="token plain"> create docusaurus@latest my-website classic</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></div><p>进入生成的站点目录</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token builtin class-name">cd</span><span class="token plain"> my-website</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>启动并运行开发服务器:</p><div class="tabs-container tabList_AXDX"><ul role="tablist" aria-orientation="horizontal" class="tabs"><li role="tab" tabindex="0" aria-selected="true" class="tabs__item tabItem_bAX3 tabs__item--active">npm</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_bAX3">Yarn</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_bAX3">pnpm</li></ul><div class="margin-top--md"><div role="tabpanel" class="tabItem_eDPh"><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">npm</span><span class="token plain"> run start</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div><div role="tabpanel" class="tabItem_eDPh" hidden=""><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">yarn</span><span class="token plain"> run start</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div><div role="tabpanel" class="tabItem_eDPh" hidden=""><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">pnpm</span><span class="token plain"> run start</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></div><p>打开页面 <code>docs/intro.md</code> 并编辑一些行,可以看到该站点会自动重新加载并显示最新的更改。</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="配置站点">配置站点<a href="#配置站点" class="hash-link" aria-label="配置站点的直接链接" title="配置站点的直接链接">​</a></h2><p>基础配置</p><div class="language-js codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_KVh2">docusaurus.config.js</div><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-js codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> config </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">title</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Inhere's Site"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">tagline</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Inhere's site, blogs and project docs"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">url</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'https://inhere.github.io'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">baseUrl</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'/'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">trailingSlash</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">organizationName</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'inhere'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Usually your GitHub org/user name.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">projectName</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'inhere.github.io'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Usually your repo name.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">deploymentBranch</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'gh-pages'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>文档和博客配置：</p><div class="language-js codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_KVh2">docusaurus.config.js</div><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-js codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">presets</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string" style="color:#e3116c">'classic'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">/** @type {import('@docusaurus/preset-classic').Options} */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token literal-property property" style="color:#36acaa">docs</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token literal-property property" style="color:#36acaa">sidebarPath</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> require</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">resolve</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'./sidebars.js'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token comment" style="color:#999988;font-style:italic">// Please change this to your repo.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token comment" style="color:#999988;font-style:italic">// Remove this to remove the "edit this page" links.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token literal-property property" style="color:#36acaa">editUrl</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'https://github.com/inhere/inhere.github.io/tree/main/'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token literal-property property" style="color:#36acaa">blog</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token literal-property property" style="color:#36acaa">showReadingTime</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token literal-property property" style="color:#36acaa">postsPerPage</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">6</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token comment" style="color:#999988;font-style:italic">// routeBasePath: '/', // 把博客放在站点根部</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token literal-property property" style="color:#36acaa">blogSidebarCount</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">6</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 默认 5</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token comment" style="color:#999988;font-style:italic">// Remove this to remove the "edit this page" links.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token literal-property property" style="color:#36acaa">editUrl</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'https://github.com/inhere/inhere.github.io/tree/main/'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="theme-admonition theme-admonition-info alert alert--info admonition_fVrm"><div class="admonitionHeading_CfVA"><span class="admonitionIcon_Hsjw"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>信息</div><div class="admonitionContent_CXYE"><p>完整配置请看 <a href="https://github.com/inhere/inhere.github.io/blob/main/docusaurus.config.js" target="_blank" rel="noopener noreferrer">https://github.com/inhere/inhere.github.io/blob/main/docusaurus.config.js</a></p></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="配置多语言">配置多语言<a href="#配置多语言" class="hash-link" aria-label="配置多语言的直接链接" title="配置多语言的直接链接">​</a></h3><div class="language-js codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_KVh2">docusaurus.config.js</div><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-js codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token literal-property property" style="color:#36acaa">i18n</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">defaultLocale</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'zh-CN'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">locales</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"zh-CN"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'en'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">localeConfigs</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">en</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token literal-property property" style="color:#36acaa">htmlLang</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'en-GB'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这里我是以 <code>zh-CN</code> 为主，生成 <code>en</code> 翻译文档</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">npm</span><span class="token plain"> run write-translations -- --locale en</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="githab-pages">GitHab Pages<a href="#githab-pages" class="hash-link" aria-label="GitHab Pages的直接链接" title="GitHab Pages的直接链接">​</a></h2><p>参考官方文档添加 GitHab Actions 如下的配置文件，这样在每次推送到仓库时就会触发自动构建，
并且会自动部署构建的静态文件到 <code>gh-pages</code> 分支。</p><div class="language-text codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">.github/workflows/deploy.yml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.github/workflows/test-deploy.yml</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="添加常用插件">添加常用插件<a href="#添加常用插件" class="hash-link" aria-label="添加常用插件的直接链接" title="添加常用插件的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="npm2yarn">npm2yarn<a href="#npm2yarn" class="hash-link" aria-label="npm2yarn的直接链接" title="npm2yarn的直接链接">​</a></h3><p>可以同时显示 npm 和 Yarn 的 CLI 命令。
然后要使用它，只需在代码块中添加 <code>npm2yarn</code> 键：</p><div class="tabs-container tabList_AXDX"><ul role="tablist" aria-orientation="horizontal" class="tabs"><li role="tab" tabindex="0" aria-selected="true" class="tabs__item tabItem_bAX3 tabs__item--active">npm</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_bAX3">Yarn</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_bAX3">pnpm</li></ul><div class="margin-top--md"><div role="tabpanel" class="tabItem_eDPh"><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">npm</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> @docusaurus/remark-plugin-npm2yarn</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div><div role="tabpanel" class="tabItem_eDPh" hidden=""><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">yarn</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> @docusaurus/remark-plugin-npm2yarn</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div><div role="tabpanel" class="tabItem_eDPh" hidden=""><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">pnpm</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> @docusaurus/remark-plugin-npm2yarn</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></div><p>配置插件：</p><div class="language-js codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_KVh2">docusaurus.config.js</div><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-js codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">module</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">presets</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string" style="color:#e3116c">'@docusaurus/preset-classic'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token literal-property property" style="color:#36acaa">docs</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token literal-property property" style="color:#36acaa">remarkPlugins</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">[</span><span class="token function" style="color:#d73a49">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'@docusaurus/remark-plugin-npm2yarn'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token literal-property property" style="color:#36acaa">sync</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token literal-property property" style="color:#36acaa">pages</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token literal-property property" style="color:#36acaa">remarkPlugins</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token function" style="color:#d73a49">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'@docusaurus/remark-plugin-npm2yarn'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token literal-property property" style="color:#36acaa">blog</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="docusaurus-search-local">docusaurus-search-local<a href="#docusaurus-search-local" class="hash-link" aria-label="docusaurus-search-local的直接链接" title="docusaurus-search-local的直接链接">​</a></h3><p>用于 Docusaurus v2 的支持离线本地搜索的插件</p><blockquote><p>插件仓库 <a href="https://github.com/easyops-cn/docusaurus-search-local" target="_blank" rel="noopener noreferrer">https://github.com/easyops-cn/docusaurus-search-local</a></p></blockquote><p>安装插件：</p><div class="tabs-container tabList_AXDX"><ul role="tablist" aria-orientation="horizontal" class="tabs"><li role="tab" tabindex="0" aria-selected="true" class="tabs__item tabItem_bAX3 tabs__item--active">npm</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_bAX3">Yarn</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_bAX3">pnpm</li></ul><div class="margin-top--md"><div role="tabpanel" class="tabItem_eDPh"><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">npm</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> --save @easyops-cn/docusaurus-search-local</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div><div role="tabpanel" class="tabItem_eDPh" hidden=""><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">yarn</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> @easyops-cn/docusaurus-search-local</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div><div role="tabpanel" class="tabItem_eDPh" hidden=""><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">pnpm</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> @easyops-cn/docusaurus-search-local</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></div><p>配置插件：</p><div class="language-js codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_KVh2">docusaurus.config.js</div><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-js codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">module</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// ... Your other configurations.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">themes</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// ... Your other themes.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      require</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">resolve</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"@easyops-cn/docusaurus-search-local"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// ... Your options.</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// `hashed` is recommended as long-term-cache of index file is possible.</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token literal-property property" style="color:#36acaa">hashed</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// For Docs using Chinese, The is recommended to set to:</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token literal-property property" style="color:#36acaa">language</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"en"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"zh"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>类似插件：</p><ul><li><a href="https://github.com/praveenn77/docusaurus-lunr-search" target="_blank" rel="noopener noreferrer">https://github.com/praveenn77/docusaurus-lunr-search</a></li><li><a href="https://github.com/cmfcmf/docusaurus-search-local" target="_blank" rel="noopener noreferrer">https://github.com/cmfcmf/docusaurus-search-local</a></li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="openapi-docs">openapi-docs<a href="#openapi-docs" class="hash-link" aria-label="openapi-docs的直接链接" title="openapi-docs的直接链接">​</a></h3><blockquote><p>GitHub <a href="https://github.com/PaloAltoNetworks/docusaurus-openapi-docs" target="_blank" rel="noopener noreferrer">https://github.com/PaloAltoNetworks/docusaurus-openapi-docs</a></p></blockquote><p>Installation</p><p>Plugin:</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">yarn</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> docusaurus-plugin-openapi-docs</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Theme:</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">yarn</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> docusaurus-theme-openapi-docs</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="一些使用说明">一些使用说明<a href="#一些使用说明" class="hash-link" aria-label="一些使用说明的直接链接" title="一些使用说明的直接链接">​</a></h2><p>一些有用的使用说明</p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="强调提示">强调提示<a href="#强调提示" class="hash-link" aria-label="强调提示的直接链接" title="强调提示的直接链接">​</a></h3><div class="language-markdown codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-markdown codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">:::note</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">一些包含 </span><span class="token italic punctuation" style="color:#393A34">_</span><span class="token italic content">Markdown</span><span class="token italic punctuation" style="color:#393A34">_</span><span class="token plain"> </span><span class="token code-snippet code keyword" style="color:#00009f">`语法`</span><span class="token plain"> 的 </span><span class="token bold punctuation" style="color:#393A34">**</span><span class="token bold content">内容</span><span class="token bold punctuation" style="color:#393A34">**</span><span class="token plain">。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">:::</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">:::tip</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">一些包含 </span><span class="token italic punctuation" style="color:#393A34">_</span><span class="token italic content">Markdown</span><span class="token italic punctuation" style="color:#393A34">_</span><span class="token plain"> </span><span class="token code-snippet code keyword" style="color:#00009f">`语法`</span><span class="token plain"> 的 </span><span class="token bold punctuation" style="color:#393A34">**</span><span class="token bold content">内容</span><span class="token bold punctuation" style="color:#393A34">**</span><span class="token plain">。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">:::</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">:::info</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">一些包含 </span><span class="token italic punctuation" style="color:#393A34">_</span><span class="token italic content">Markdown</span><span class="token italic punctuation" style="color:#393A34">_</span><span class="token plain"> </span><span class="token code-snippet code keyword" style="color:#00009f">`语法`</span><span class="token plain"> 的 </span><span class="token bold punctuation" style="color:#393A34">**</span><span class="token bold content">内容</span><span class="token bold punctuation" style="color:#393A34">**</span><span class="token plain">。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">:::</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">:::caution</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">一些包含 </span><span class="token italic punctuation" style="color:#393A34">_</span><span class="token italic content">Markdown</span><span class="token italic punctuation" style="color:#393A34">_</span><span class="token plain"> </span><span class="token code-snippet code keyword" style="color:#00009f">`语法`</span><span class="token plain"> 的 </span><span class="token bold punctuation" style="color:#393A34">**</span><span class="token bold content">内容</span><span class="token bold punctuation" style="color:#393A34">**</span><span class="token plain">。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">:::</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">:::danger</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">一些包含 </span><span class="token italic punctuation" style="color:#393A34">_</span><span class="token italic content">Markdown</span><span class="token italic punctuation" style="color:#393A34">_</span><span class="token plain"> </span><span class="token code-snippet code keyword" style="color:#00009f">`语法`</span><span class="token plain"> 的 </span><span class="token bold punctuation" style="color:#393A34">**</span><span class="token bold content">内容</span><span class="token bold punctuation" style="color:#393A34">**</span><span class="token plain">。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">:::</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>效果如下：</p><div class="theme-admonition theme-admonition-info alert alert--info admonition_fVrm"><div class="admonitionHeading_CfVA"><span class="admonitionIcon_Hsjw"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>信息</div><div class="admonitionContent_CXYE"><p>一些包含 <em>Markdown</em> <code>语法</code> 的 <strong>内容</strong>。</p></div></div><div class="theme-admonition theme-admonition-caution alert alert--warning admonition_fVrm"><div class="admonitionHeading_CfVA"><span class="admonitionIcon_Hsjw"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>警告</div><div class="admonitionContent_CXYE"><p>一些包含 <em>Markdown</em> <code>语法</code> 的 <strong>内容</strong>。</p></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="代码行高亮">代码行高亮<a href="#代码行高亮" class="hash-link" aria-label="代码行高亮的直接链接" title="代码行高亮的直接链接">​</a></h3><p>你可以用 <code>highlight-next-line</code>、<code>highlight-start</code>、<code>highlight-end</code> 等注释来选择要高亮的行。</p><p>效果如下：</p><div class="language-js codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-js codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#d73a49">HighlightSomeText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">highlight</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">highlight</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'这行被高亮了！'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'这里不会'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#d73a49">HighlightMoreText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">highlight</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">highlight</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'这块被高亮了！'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'这里不会'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>原文档 <a href="https://docusaurus.io/zh-CN/docs/markdown-features/code-blocks#line-highlighting" target="_blank" rel="noopener noreferrer">https://docusaurus.io/zh-CN/docs/markdown-features/code-blocks#line-highlighting</a></p></blockquote>]]></content:encoded>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[cflag - 包装Go FlagSet构建简单且漂亮的命令行应用程序]]></title>
            <link>https://inhere.github.io/blog/gookit-goutil-cflag-intro</link>
            <guid>https://inhere.github.io/blog/gookit-goutil-cflag-intro</guid>
            <pubDate>Sat, 09 Jul 2022 16:00:00 GMT</pubDate>
            <description><![CDATA[cflag - 包装和扩展 Go flag.FlagSet 以构建简单且漂亮的命令行应用程序。]]></description>
            <content:encoded><![CDATA[<p><code>cflag</code> - 包装和扩展 Go <code>flag.FlagSet</code> 以构建简单且漂亮的命令行应用程序。</p><p><img loading="lazy" src="https://raw.githubusercontent.com/gookit/goutil/master/cflag/_example/cmd-help.png" alt="cmd-help" class="img_Ytbv"></p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="使用-flag-包">使用 flag 包<a href="#使用-flag-包" class="hash-link" aria-label="使用 flag 包的直接链接" title="使用 flag 包的直接链接">​</a></h2><p>Go <code>flag</code> 是Go内置的包，使用  <code>flag</code> 包构建一个命令应用非常简单。</p><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_KVh2">cflag/_example/rawflag.go</div><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">package</span><span class="token plain"> main</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"flag"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"os"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"github.com/gookit/goutil/cliutil"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"github.com/gookit/goutil/dump"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> opts1 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    age  </span><span class="token builtin">int</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    name </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    str1 </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    lOpt </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// go run ./_example/rawflag.go</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// go run ./cflag/_example/rawflag.go -h</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> flag</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewFlagSet</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"mycmd"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> flag</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ContinueOnError</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">IntVar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">opts1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">age</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"age"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"this is a int option"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">StringVar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">opts1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"name"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"this is a string option and required"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">StringVar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">opts1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">str1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"str1"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"def-val"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"this is a string option with default value"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">StringVar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">opts1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">lOpt</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"long-opt"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"this is a string option with shorts"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Parse</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Args</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> flag</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ErrHelp </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            cliutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Errorln</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Error:"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// after parse, do something</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">handleFunc1</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">handleFunc1</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cliutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Infoln</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"after parse, do something"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    dump</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">P</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">opts1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="显示帮助">显示帮助<a href="#显示帮助" class="hash-link" aria-label="显示帮助的直接链接" title="显示帮助的直接链接">​</a></h3><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">go run ./cflag/_example/rawflag.go -h</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><img loading="lazy" src="https://raw.githubusercontent.com/gookit/goutil/master/cflag/_example/rawflag-help.png" alt="rawflag-help" class="img_Ytbv"></p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="不足的点">不足的点<a href="#不足的点" class="hash-link" aria-label="不足的点的直接链接" title="不足的点的直接链接">​</a></h3><p>它是Go内置的包，使用也非常简单。但是有一些不足的点：</p><ul><li>不支持给选项添加短选项</li><li>不支持解析后续参数信息</li><li>不能检查选项是否为空</li><li>渲染的帮助信息非常简陋</li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="使用-cflag-包">使用 cflag 包<a href="#使用-cflag-包" class="hash-link" aria-label="使用 cflag 包的直接链接" title="使用 cflag 包的直接链接">​</a></h2><p><code>cflag</code> - 包装和扩展 Go <code>flag.FlagSet</code> 以构建简单且漂亮的命令行应用程序</p><ul><li>使用跟 Go <code>flag</code> 一样简单</li><li>支持自动渲染漂亮的帮助信息</li><li>允许为标志选项添加短选项,并且允许多个</li><li>允许绑定命名参数</li><li>允许设置参数或选项为必须</li><li>允许设置参数或选项的验证器</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="安装">安装<a href="#安装" class="hash-link" aria-label="安装的直接链接" title="安装的直接链接">​</a></h3><div class="language-shell codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-shell codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">go get github.com/gookit/goutil/cflag</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="使用示例">使用示例<a href="#使用示例" class="hash-link" aria-label="使用示例的直接链接" title="使用示例的直接链接">​</a></h3><p>跟 Go <code>flag</code> 一样的绑定选项信息。同时额外新增了一些信息，比如 版本，描述等</p><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_KVh2">cflag/_example/cmd.go</div><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">package</span><span class="token plain"> main</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"os"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"github.com/gookit/goutil/cflag"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"github.com/gookit/goutil/cliutil"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> opts </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    age  </span><span class="token builtin">int</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    name </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    str1 </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    lOpt </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    bol  </span><span class="token builtin">bool</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// go run ./_example/cmd.go</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// go run ./cflag/_example/cmd.go -h</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// go run ./cflag/_example/cmd.go --name inhere -a 12 --lo val ab cd</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> cflag</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">New</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">cflag</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CFlags</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Desc </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"this is a demo command"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Version </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"0.5.1"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">IntVar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">opts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">age</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"age"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"this is a int option;;a"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">StringVar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">opts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"name"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"this is a string option and required;true"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">StringVar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">opts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">str1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"str1"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"def-val"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"this is a string option with default value;;s"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">StringVar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">opts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">lOpt</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"long-opt"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"this is a string option with shorts;;lo"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">AddArg</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"arg1"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"this is arg1"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">AddArg</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"arg2"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"this is arg2"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// add handle func</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Func </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> handleFunc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">MustParse</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Args</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">handleFunc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">cflag</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CFlags</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cliutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Magentaln</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"hello, this is command:"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Name</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cliutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Infoln</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"after parse, do something ..."</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cliutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Yellowln</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"option values:"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cliutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Infoln</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"opts.age ="</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> opts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">age</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cliutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Infoln</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"opts.name ="</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> opts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cliutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Infoln</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"opts.str1 ="</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> opts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">str1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cliutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Infoln</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"opts.lOpt ="</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> opts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">lOpt</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    cliutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Yellowln</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"argument values:"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    cliutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Infoln</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"arg1 ="</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Arg</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"arg1"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    cliutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Infoln</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"arg2 ="</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Arg</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"arg2"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cliutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Infoln</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"\nremain args ="</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">RemainArgs</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="设置必须和短选项">设置必须和短选项<a href="#设置必须和短选项" class="hash-link" aria-label="设置必须和短选项的直接链接" title="设置必须和短选项的直接链接">​</a></h3><p>可以设置选项为 <code>required</code> 必填项，并且支持设置 <strong>短选项</strong> 名称。</p><blockquote><p>TIPs: 通过扩展解析了选项的 <code>usage</code> 来实现 <code>required</code> 和 <code>shorts</code></p></blockquote><h4 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="usage-格式"><code>usage</code> 格式<a href="#usage-格式" class="hash-link" aria-label="usage-格式的直接链接" title="usage-格式的直接链接">​</a></h4><ul><li>默认：<code>desc</code></li><li>格式1: <code>desc;required</code></li><li>格式2: <code>desc;required;shorts</code></li><li><code>required</code>: 一个布尔字符串。标记选项是必需的<ul><li>True: <code>true,on,yes</code></li><li>False: <code>false,off,no,''</code></li></ul></li><li><code>shorts</code>: 选项的快捷方式名称，允许多值，用逗号 <code>,</code> 分隔</li></ul><p><strong>示例</strong>:</p><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// set option 'name' is required</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">StringVar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">opts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"name"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"this is a string option and required;true"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// set option 'str1' shorts: s</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">StringVar</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">opts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">str1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"str1"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"def-val"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"this is a string option with default value;;s"</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="绑定和获取参数">绑定和获取参数<a href="#绑定和获取参数" class="hash-link" aria-label="绑定和获取参数的直接链接" title="绑定和获取参数的直接链接">​</a></h3><p><strong>绑定参数信息</strong></p><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">    c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">AddArg</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"arg1"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"this is arg1"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">AddArg</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"arg2"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"this is arg2"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>获取参数信息</strong></p><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">    cliutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Infoln</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"arg1 ="</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Arg</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"arg1"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cliutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Infoln</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"arg2 ="</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Arg</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"arg2"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="显示帮助信息">显示帮助信息<a href="#显示帮助信息" class="hash-link" aria-label="显示帮助信息的直接链接" title="显示帮助信息的直接链接">​</a></h3><div class="language-shell codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-shell codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">go run ./cflag/_example/cmd.go -h</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>Output</strong>:</p><p><img loading="lazy" src="https://raw.githubusercontent.com/gookit/goutil/master/cflag/_example/cmd-help.png" alt="cmd-help" class="img_Ytbv"></p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="运行命令">运行命令<a href="#运行命令" class="hash-link" aria-label="运行命令的直接链接" title="运行命令的直接链接">​</a></h3><div class="language-shell codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-shell codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">go run ./cflag/_example/cmd.go --name inhere -a </span><span class="token number" style="color:#36acaa">12</span><span class="token plain"> --lo val ab </span><span class="token builtin class-name">cd</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">go run ./cflag/_example/cmd.go --name inhere -a </span><span class="token number" style="color:#36acaa">12</span><span class="token plain"> --lo val ab </span><span class="token builtin class-name">cd</span><span class="token plain"> de </span><span class="token function" style="color:#d73a49">fg</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>Output</strong>:</p><p><img loading="lazy" src="https://raw.githubusercontent.com/gookit/goutil/master/cflag/_example/cmd-run.png" alt="cmd-run" class="img_Ytbv"></p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="required-检查"><code>required</code> 检查<a href="#required-检查" class="hash-link" aria-label="required-检查的直接链接" title="required-检查的直接链接">​</a></h3><div class="language-shell codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-shell codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">go run ./cflag/_example/cmd.go -a </span><span class="token number" style="color:#36acaa">22</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">go run ./cflag/_example/cmd.go --name inhere</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>Output</strong>:</p><p><img loading="lazy" src="https://raw.githubusercontent.com/gookit/goutil/master/cflag/_example/cmd-required.png" alt="cmd-required.png" class="img_Ytbv"></p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="github">GitHub<a href="#github" class="hash-link" aria-label="GitHub的直接链接" title="GitHub的直接链接">​</a></h2><ul><li><a href="https://github.com/gookit/goutil/tree/master/cflag" target="_blank" rel="noopener noreferrer">gookit/goutil/cflag</a></li></ul>]]></content:encoded>
            <category>golang</category>
            <category>gookit</category>
            <category>flag</category>
            <category>cli</category>
            <category>console</category>
            <category>command-line</category>
        </item>
        <item>
            <title><![CDATA[gitw - Git 命令包装器，生成 git 变更记录日志]]></title>
            <link>https://inhere.github.io/blog/gookit-gitw-intro</link>
            <guid>https://inhere.github.io/blog/gookit-gitw-intro</guid>
            <pubDate>Wed, 06 Jul 2022 21:00:00 GMT</pubDate>
            <description><![CDATA[gitw - Git 命令包装器，生成 git 变更记录日志，获取 repo 信息和一些 git 命令工具。]]></description>
            <content:encoded><![CDATA[<p><code>gitw</code> - Git 命令包装器，生成 git 变更记录日志，获取 repo 信息和一些 git 命令工具。</p><ul><li>包装本地 <code>git</code> 命令</li><li>快速运行 <code>git</code> 命令</li><li>快速查询存储库信息<ul><li>获取 remote, branch 详细信息</li></ul></li><li>通过 <code>git log</code> 快速生成版本变更日志<ul><li>允许自定义生成配置</li><li>允许自定义生成过滤、样式等</li><li>可以直接在 GitHub Actions 中使用</li></ul></li></ul><blockquote><p>Github <a href="https://github.com/gookit/gitw" target="_blank" rel="noopener noreferrer">https://github.com/gookit/gitw</a></p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="生成变更日志">生成变更日志<a href="#生成变更日志" class="hash-link" aria-label="生成变更日志的直接链接" title="生成变更日志的直接链接">​</a></h2><p>可以通过 <code>gitw/chlog</code> 包快速生成变更日志。</p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="安装">安装<a href="#安装" class="hash-link" aria-label="安装的直接链接" title="安装的直接链接">​</a></h3><div class="language-shell codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-shell codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">go </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> github.com/gookit/gitw/cmd/chlog@latest</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="使用">使用<a href="#使用" class="hash-link" aria-label="使用的直接链接" title="使用的直接链接">​</a></h3><p><strong>生成变更日志:</strong>:</p><div class="language-shell codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-shell codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">chlog prev last</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">chlog last </span><span class="token function" style="color:#d73a49">head</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">chlog -c .github/changelog.yml last </span><span class="token function" style="color:#d73a49">head</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>Outputs</strong>:</p><p><img loading="lazy" src="https://raw.githubusercontent.com/gookit/gitw/main/_examples/images/chlog-demo.png" alt="chlog-demo" class="img_Ytbv"></p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="仓库信息">仓库信息<a href="#仓库信息" class="hash-link" aria-label="仓库信息的直接链接" title="仓库信息的直接链接">​</a></h2><p>可以通过 gitw 在本地快速获取 git 存储库信息。</p><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">repo </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> gitw</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewRepo</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"/path/to/my-repo"</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="branch-信息">Branch 信息<a href="#branch-信息" class="hash-link" aria-label="Branch 信息的直接链接" title="Branch 信息的直接链接">​</a></h3><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">brInfo </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> repo</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">CurBranchInfo</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">dump</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">brInfo</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>Output</strong>:</p><p><img loading="lazy" src="https://raw.githubusercontent.com/gookit/gitw/main/_examples/images/one-branch-info.png" alt="one-remote-info" class="img_Ytbv"></p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="更多">更多<a href="#更多" class="hash-link" aria-label="更多的直接链接" title="更多的直接链接">​</a></h2><p>更多使用说明请看README和godoc</p><blockquote><p>Github <a href="https://github.com/gookit/gitw" target="_blank" rel="noopener noreferrer">https://github.com/gookit/gitw</a></p></blockquote>]]></content:encoded>
            <category>golang</category>
            <category>gookit</category>
            <category>git</category>
        </item>
        <item>
            <title><![CDATA[slog - 一个易于使用的，易扩展、可配置的日志库]]></title>
            <link>https://inhere.github.io/blog/gookit-slog-intro</link>
            <guid>https://inhere.github.io/blog/gookit-slog-intro</guid>
            <pubDate>Thu, 16 Jun 2022 21:00:00 GMT</pubDate>
            <description><![CDATA[gookit/slog 📑 一个易于使用的，轻量级、可配置、可扩展的日志库。支持多个级别，输出到多文件；内置文件日志处理、自动切割、清理、压缩等增强功能]]></description>
            <content:encoded><![CDATA[<p><code>gookit/slog</code> 📑 一个易于使用的，轻量级、可配置、可扩展的日志库。支持多个级别，输出到多文件；内置文件日志处理、自动切割、清理、压缩等增强功能</p><p><img loading="lazy" src="https://raw.githubusercontent.com/gookit/slog/master/_example/images/console-log-all-level.png" alt="image" class="img_Ytbv"></p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="功能特色">功能特色<a href="#功能特色" class="hash-link" aria-label="功能特色的直接链接" title="功能特色的直接链接">​</a></h2><ul><li>简单，无需配置，开箱即用</li><li>支持常用的日志级别处理<ul><li>如： <code>trace</code> <code>debug</code> <code>info</code> <code>notice</code> <code>warn</code> <code>error</code> <code>fatal</code> <code>panic</code></li></ul></li><li>可以任意扩展自己需要的 <code>Handler</code> <code>Formatter</code></li><li>支持同时添加多个 <code>Handler</code> 日志处理，输出日志到不同的地方</li><li>支持自定义构建 <code>Handler</code> 处理器<ul><li>内置的 <code>handler.Config</code> <code>handler.Builder</code>,可以方便快捷的构建想要的日志处理器</li></ul></li><li>支持自定义 <code>Formatter</code> 格式化处理<ul><li>内置了 <code>json</code> <code>text</code> 两个日志记录格式化 <code>Formatter</code></li></ul></li><li>已经内置了常用的日志处理器<ul><li><code>console</code> 输出日志到控制台，支持色彩输出</li><li><code>writer</code> 输出日志到指定的 <code>io.Writer</code></li><li><code>file</code> 输出日志到指定文件，可选启用 <code>buffer</code> 缓冲写入</li><li><code>simple</code> 输出日志到指定文件，无缓冲直接写入文件</li><li><code>rotate_file</code> 输出日志到指定文件，并且同时支持按时间、按大小分割文件，默认启用 <code>buffer</code> 缓冲写入</li><li>更多内置实现请查看 ./handler 文件夹</li></ul></li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="输出日志到文件">输出日志到文件<a href="#输出日志到文件" class="hash-link" aria-label="输出日志到文件的直接链接" title="输出日志到文件的直接链接">​</a></h3><ul><li>支持启用 <code>buffer</code> 缓冲日志写入</li><li>支持按时间、按大小自动分割文件</li><li>支持配置通过 <code>gzip</code> 压缩日志文件</li><li>支持清理旧日志文件 配置: <code>BackupNum</code> <code>BackupTime</code></li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="git-仓库">Git 仓库<a href="#git-仓库" class="hash-link" aria-label="Git 仓库的直接链接" title="Git 仓库的直接链接">​</a></h2><ul><li>Github: <a href="https://github.com/gookit/slog" target="_blank" rel="noopener noreferrer">https://github.com/gookit/slog</a></li><li>Gitee: <a href="https://gitee.com/gookit/slog" target="_blank" rel="noopener noreferrer">https://gitee.com/gookit/slog</a></li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="安装">安装<a href="#安装" class="hash-link" aria-label="安装的直接链接" title="安装的直接链接">​</a></h2><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">go get github.com/gookit/slog</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="快速开始">快速开始<a href="#快速开始" class="hash-link" aria-label="快速开始的直接链接" title="快速开始的直接链接">​</a></h2><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">package</span><span class="token plain"> main</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"github.com/gookit/slog"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    slog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Trace</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"this is a log message"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    slog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Debug</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"this is a log message"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    slog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"this is a log message"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    slog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Notice</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"this is a log message"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    slog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Warn</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"this is a log message"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    slog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"this is a log message"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    slog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Fatal</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"this is a log message"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>控制台日志效果:</strong></p><p><img loading="lazy" src="https://raw.githubusercontent.com/gookit/slog/master/_example/images/console-log-all-level.png" alt="image" class="img_Ytbv"></p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="记录到文件">记录到文件<a href="#记录到文件" class="hash-link" aria-label="记录到文件的直接链接" title="记录到文件的直接链接">​</a></h2><p>使用 <code>slog</code> 输出日志到文件非常方便，并且支持多文件，按时间分割等</p><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">package</span><span class="token plain"> main</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"github.com/gookit/slog"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"github.com/gookit/slog/handler"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"github.com/gookit/slog/rotatefile"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">defer</span><span class="token plain"> slog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">MustFlush</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// DangerLevels 包含: slog.PanicLevel, slog.ErrorLevel, slog.WarnLevel</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    h1 </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> handler</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">MustRotateFile</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"/tmp/logs/app_error.log"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> rotatefile</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">EveryHour</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        handler</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">WithLogLevels</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">slog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DangerLevels</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// NormalLevels 包含: slog.InfoLevel, slog.NoticeLevel, slog.DebugLevel, slog.TraceLevel</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    h2 </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> handler</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">MustRotateFile</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"/tmp/logs/app_info.log"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> rotatefile</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">EveryHour</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        handler</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">WithLogLevels</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">slog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">NormalLevels</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    slog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">PushHandler</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">h1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    slog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">PushHandler</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">h2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// add logs</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    slog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"info message text"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    slog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"error message text"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>查看日志目录:</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">ls</span><span class="token plain"> /tmp/logs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">app_error.log</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">app_info.log</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="自定义创建logger">自定义创建logger<a href="#自定义创建logger" class="hash-link" aria-label="自定义创建logger的直接链接" title="自定义创建logger的直接链接">​</a></h2><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="bufwrite-包">bufwrite 包<a href="#bufwrite-包" class="hash-link" aria-label="bufwrite 包的直接链接" title="bufwrite 包的直接链接">​</a></h2><p><code>github.com/gookit/slog/bufwrite</code></p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="rotatefile-包">rotatefile 包<a href="#rotatefile-包" class="hash-link" aria-label="rotatefile 包的直接链接" title="rotatefile 包的直接链接">​</a></h2><p><code>github.com/gookit/slog/rotatefile</code></p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="更多使用">更多使用<a href="#更多使用" class="hash-link" aria-label="更多使用的直接链接" title="更多使用的直接链接">​</a></h2><blockquote><p>更多使用说明请看 README <a href="https://github.com/gookit/slog/blob/master/README.zh-CN.md" target="_blank" rel="noopener noreferrer">https://github.com/gookit/slog/blob/master/README.zh-CN.md</a></p></blockquote>]]></content:encoded>
            <category>golang</category>
            <category>gookit</category>
            <category>log</category>
            <category>logger</category>
        </item>
        <item>
            <title><![CDATA[pflag - 更好的PHP命令行选项解析库]]></title>
            <link>https://inhere.github.io/blog/pflag-better-php-command-line-parse-library</link>
            <guid>https://inhere.github.io/blog/pflag-better-php-command-line-parse-library</guid>
            <pubDate>Mon, 11 Oct 2021 15:11:00 GMT</pubDate>
            <description><![CDATA[php-toolkit/pflag 是一个PHP编写的，通用的命令行标志(选项和参数)解析库。]]></description>
            <content:encoded><![CDATA[<p><code>php-toolkit/pflag</code> 是一个PHP编写的，通用的命令行标志(选项和参数)解析库。</p><p><img loading="lazy" src="https://github.com/php-toolkit/pflag/blob/main/example/images/flags-demo.png?raw=true" alt="flags-demo" class="img_Ytbv"></p><blockquote><p>Github 仓库: <a href="https://github.com/php-toolkit/pflag" target="_blank" rel="noopener noreferrer">php-toolkit/pflag</a></p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="功能说明">功能说明<a href="#功能说明" class="hash-link" aria-label="功能说明的直接链接" title="功能说明的直接链接">​</a></h2><ul><li>通用的命令行选项和参数解析器</li><li>支持设置值数据类型(<code>int,string,bool,array</code>)，将自动格式化输入值</li><li>支持为选项/参数设置默认值</li><li>支持为一个选项设置多个短名称</li><li>支持从环境变量读取标志值</li><li>支持设置选项/参数为必须的(<code>required</code>)</li><li>支持设置验证器以检查输入值</li><li>支持自动渲染漂亮的帮助信息。</li></ul><p><strong>命令行选项</strong>:</p><ul><li>选项以 <code>-</code> 或者 <code>--</code> 开头的，且首字符必须是字母</li><li>以 <code>--</code> 开头的为长选项. eg: <code>--long</code> <code>--long value</code></li><li>以 <code>-</code> 开头的为短选项 <code>-s -a value</code></li><li>支持定义数组选项<ul><li>eg: <code>--tag php --tag go</code> 将会得到 <code>$tag = [php, go]</code></li></ul></li></ul><p><strong>命令行参数</strong>:</p><ul><li>不能满足选项的都认作参数</li><li>支持绑定命名参数</li><li>支持定义数组参数</li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="安装">安装<a href="#安装" class="hash-link" aria-label="安装的直接链接" title="安装的直接链接">​</a></h2><p><strong>composer 安装</strong></p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">composer</span><span class="token plain"> require toolkit/pflag</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><hr><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="flags-使用">Flags 使用<a href="#flags-使用" class="hash-link" aria-label="Flags 使用的直接链接" title="Flags 使用的直接链接">​</a></h2><p>Flags - 是一个命令行标志（选项和参数）解析器和管理器。</p><blockquote><p>示例代码请参见 <a href="https://github.com/php-toolkit/pflag/blob/main/example/flags-demo.php" target="_blank" rel="noopener noreferrer">example/flags-demo.php</a></p></blockquote><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="创建解析器">创建解析器<a href="#创建解析器" class="hash-link" aria-label="创建解析器的直接链接" title="创建解析器的直接链接">​</a></h3><p>创建和初始化解析器</p><div class="language-php codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-php codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">use Toolkit\PFlag\Flags;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">require dirname(__DIR__) . '/test/bootstrap.php';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$flags = $_SERVER['argv'];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// NOTICE: must shift first element.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$scriptFile = array_shift($flags);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$fs = Flags::new();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// （可选的）可以添加一些自定义设置</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$fs-&gt;setScriptFile($scriptFile);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/** @see Flags::$settings */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$fs-&gt;setSettings([</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    'descNlOnOptLen' =&gt; 26</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">]);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// ...</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="定义选项">定义选项<a href="#定义选项" class="hash-link" aria-label="定义选项的直接链接" title="定义选项的直接链接">​</a></h3><p>定义选项 - 定义好支持的选项设置，解析时将会根据定义来解析输入</p><p>添加选项定义的示例:</p><div class="language-php codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-php codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">use Toolkit\PFlag\Flag\Option;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">use Toolkit\PFlag\FlagType;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">use Toolkit\PFlag\Validator\EnumValidator;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// add options</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// - quick add</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$fs-&gt;addOpt('age', 'a', 'this is a int option', FlagType::INT);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// - 使用字符串规则快速添加选项定义</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$fs-&gt;addOptByRule('name,n', 'string;this is a string option;true');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// -- 一次添加多个选项</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$fs-&gt;addOptsByRules([</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    'tag,t' =&gt; 'strings;array option, allow set multi times',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    'f'     =&gt; 'bool;this is an bool option',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">]);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// - 使用数组定义</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/** @see Flags::DEFINE_ITEM for array rule */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$fs-&gt;addOptByRule('name-is-very-lang', [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    'type'   =&gt; FlagType::STRING,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    'desc'   =&gt; 'option name is to lang, desc will print on newline',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    'shorts' =&gt; ['d','e','f'],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // TIP: add validator limit input value.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    'validator' =&gt; EnumValidator::new(['one', 'two', 'three']),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">]);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// - 使用 Option 对象</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$opt = Option::new('str1', "this is  string option, \ndesc has multi line, \nhaha...");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$opt-&gt;setDefault('defVal');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$fs-&gt;addOption($opt);</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="定义参数">定义参数<a href="#定义参数" class="hash-link" aria-label="定义参数的直接链接" title="定义参数的直接链接">​</a></h3><p>定义参数 - 定义好支持的选项设置，解析时将会根据定义来解析输入</p><p>添加参数定义的示例:</p><div class="language-php codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-php codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">use Toolkit\PFlag\Flag\Argument;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">use Toolkit\PFlag\FlagType;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// add arguments</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// - quick add</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$fs-&gt;addArg('strArg1', 'the is string arg and is required', 'string', true);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// - 使用字符串规则快速添加定义</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$fs-&gt;addArgByRule('intArg2', 'int;this is a int arg and with default value;no;89');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// - 使用 Argument 对象</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$arg = Argument::new('arrArg');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// OR $arg-&gt;setType(FlagType::ARRAY);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$arg-&gt;setType(FlagType::STRINGS);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$arg-&gt;setDesc("this is an array arg,\n allow multi value,\n must define at last");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$fs-&gt;addArgument($arg);</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="解析命令行输入">解析命令行输入<a href="#解析命令行输入" class="hash-link" aria-label="解析命令行输入的直接链接" title="解析命令行输入的直接链接">​</a></h3><p>最后调用 <code>parse()</code> 解析命令行输入数据</p><div class="language-php codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-php codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">// ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if (!$fs-&gt;parse($flags)) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // on render help</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    return;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vdump($fs-&gt;getOpts(), $fs-&gt;getArgs());</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>显示帮助</strong></p><p>当输入 <code>-h</code> 或 <code>--help</code> 会自动渲染帮助信息。</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ php example/flags-demo.php --help</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Output:</p><p><img loading="lazy" src="https://github.com/php-toolkit/pflag/blob/main/example/images/flags-demo.png?raw=true" alt="flags-demo" class="img_Ytbv"></p><p><strong>运行示例:</strong></p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ php example/flags-demo.php --name inhere --age </span><span class="token number" style="color:#36acaa">99</span><span class="token plain"> --tag go -t php -t java -d one -f arg0 </span><span class="token number" style="color:#36acaa">80</span><span class="token plain"> arr0 arr1</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>输出结果:</p><div class="language-text codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain"># 选项数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">array(6) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ["str1"]=&gt; string(6) "defVal"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ["name"]=&gt; string(6) "inhere"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ["age"]=&gt; int(99)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ["tag"]=&gt; array(3) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    [0]=&gt; string(2) "go"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    [1]=&gt; string(3) "php"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    [2]=&gt; string(4) "java"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ["name-is-very-lang"]=&gt; string(3) "one"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ["f"]=&gt; bool(true)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 参数数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">array(3) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  [0]=&gt; string(4) "arg0"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  [1]=&gt; int(80)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  [2]=&gt; array(2) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    [0]=&gt; string(4) "arr0"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    [1]=&gt; string(4) "arr1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><hr><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="获取输入值">获取输入值<a href="#获取输入值" class="hash-link" aria-label="获取输入值的直接链接" title="获取输入值的直接链接">​</a></h2><p>获取flag值很简单，使用方法 <code>getOpt(string $name)</code> <code>getArg($nameOrIndex)</code> 即可.</p><blockquote><p>TIP: 将通过定义的数据类型自动格式化输入值</p></blockquote><p><strong>选项数据</strong></p><div class="language-php codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-php codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$force = $fs-&gt;getOpt('f'); // bool(true)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$age  = $fs-&gt;getOpt('age'); // int(99)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$name = $fs-&gt;getOpt('name'); // string(inhere)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$tags = $fs-&gt;getOpt('tags'); // array{"php", "go", "java"}</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>参数数据</strong></p><div class="language-php codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-php codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$arg0 = $fs-&gt;getArg(0); // string(arg0)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// get an array arg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$arrArg = $fs-&gt;getArg(1); // array{"arr0", "arr1"}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// get value by name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$arrArg = $fs-&gt;getArg('arrArg'); // array{"arr0", "arr1"}</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><hr><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="扩展规则定义">扩展：规则定义<a href="#扩展规则定义" class="hash-link" aria-label="扩展：规则定义的直接链接" title="扩展：规则定义的直接链接">​</a></h2><p>选项参数规则。使用规则可以快速定义一个选项或参数。</p><ul><li>string 字符串规则以分号 <code>;</code> 分割每个部分 (完整规则：<code>type;desc;required;default;shorts</code>).</li><li>array 规则按 <code>SFlags::DEFINE_ITEM</code> 设置定义</li><li>支持的类型常量请看 <code>FlagType::*</code></li></ul><div class="language-php codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-php codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">use Toolkit\PFlag\FlagType;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$rules = [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     // v: 只有值，作为名称并使用默认类型 FlagType::STRING</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     // k-v: 键是名称，值可以是字符串|数组</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     'long,s',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     // name =&gt; rule</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     'long,a,b' =&gt; 'int;an int option', // long is option name, a and b is shorts.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     'f'      =&gt; FlagType::BOOL,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     'str1'   =&gt; ['type' =&gt; 'int', 'desc' =&gt; 'an string option'],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     'tags'   =&gt; 'array; an array option', // can also: ints, strings</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     'name'   =&gt; 'type;the description message;required;default', // with desc, default, required</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">]</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>对于选项</strong></p><ul><li>选项允许设置短名称 <code>shorts</code></li></ul><blockquote><p>TIP: 例如 <code>long,a,b</code> - <code>long</code> 是选项名称. 剩余的 <code>a,b</code> 都是它的短选项名.</p></blockquote><p><strong>对于参数</strong></p><ul><li>参数没有别名或者短名称</li><li>数组参数只允许定义在最后</li></ul><p><strong>数组定义项</strong></p><p>常量 <code>Flags::DEFINE_ITEM</code>:</p><div class="language-php codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-php codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">public const DEFINE_ITEM = [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    'name'      =&gt; '',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    'desc'      =&gt; '',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    'type'      =&gt; FlagType::STRING,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    'helpType'  =&gt; '', // use for render help</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 'index'    =&gt; 0, // only for argument</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    'required'  =&gt; false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    'default'   =&gt; null,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    'shorts'    =&gt; [], // only for option</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // value validator</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    'validator' =&gt; null,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 'category' =&gt; null</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">];</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><hr><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="自定义设置">自定义设置<a href="#自定义设置" class="hash-link" aria-label="自定义设置的直接链接" title="自定义设置的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="解析设置">解析设置<a href="#解析设置" class="hash-link" aria-label="解析设置的直接链接" title="解析设置的直接链接">​</a></h3><div class="language-php codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-php codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">    // -------------------- 选项解析设置 --------------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * Stop parse option on found first argument.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * - Useful for support multi commands. eg: `top --opt ... sub --opt ...`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @var bool</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    protected $stopOnFistArg = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * Skip on found undefined option.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * - FALSE will throw FlagException error.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * - TRUE  will skip it and collect as raw arg, then continue parse next.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @var bool</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    protected $skipOnUndefined = false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // -------------------- 参数解析设置 --------------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * Whether auto bind remaining args after option parsed</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @var bool</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    protected $autoBindArgs = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * Strict match args number.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * if exist unbind args, will throw FlagException</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @var bool</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    protected $strictMatchArgs = false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="渲染帮助设置">渲染帮助设置<a href="#渲染帮助设置" class="hash-link" aria-label="渲染帮助设置的直接链接" title="渲染帮助设置的直接链接">​</a></h3><p>support some settings for render help</p><div class="language-php codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-php codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // -------------------- settings for built-in render help --------------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * 自动渲染帮助信息当输入 '-h', '--help' 选项时</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @var bool</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    protected $autoRenderHelp = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * 在渲染的帮助信息上显示数据类型</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * if False:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * -o, --opt    Option desc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * if True:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * -o, --opt STRING   Option desc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @var bool</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    protected $showTypeOnHelp = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * 将在打印帮助消息之前调用它</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @var callable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private $beforePrintHelp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>自定义帮助消息渲染:</p><div class="language-php codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-php codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$fs-&gt;setHelpRenderer(function (\Toolkit\PFlag\FlagsParser $fs) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // render help messages</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">});</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><hr><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="单元测试">单元测试<a href="#单元测试" class="hash-link" aria-label="单元测试的直接链接" title="单元测试的直接链接">​</a></h2><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">phpunit --debug</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>test with coverage:</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">phpdbg -qrr </span><span class="token variable" style="color:#36acaa">$(</span><span class="token variable function" style="color:#d73a49">which</span><span class="token variable" style="color:#36acaa"> phpunit</span><span class="token variable" style="color:#36acaa">)</span><span class="token plain"> --coverage-text</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="使用pflag的项目">使用pflag的项目<a href="#使用pflag的项目" class="hash-link" aria-label="使用pflag的项目的直接链接" title="使用pflag的项目的直接链接">​</a></h2><p>这些项目使用了 <a href="https://github.com/php-toolkit/pflag" target="_blank" rel="noopener noreferrer">https://github.com/php-toolkit/pflag</a> :</p><ul><li><a href="https://github.com/inhere/console" target="_blank" rel="noopener noreferrer">inhere/console</a> Full-featured php command line application library.</li><li><a href="https://github.com/inhere/kite" target="_blank" rel="noopener noreferrer">kite</a> Kite is a tool for help development.</li><li>更多的请看 <a href="https://packagist.org/packages/toolkit/pflag" target="_blank" rel="noopener noreferrer">Packagist</a></li></ul><blockquote><p>Github 仓库: <a href="https://github.com/php-toolkit/pflag" target="_blank" rel="noopener noreferrer">php-toolkit/pflag</a></p></blockquote>]]></content:encoded>
            <category>php</category>
            <category>cli</category>
            <category>command-line</category>
            <category>parser</category>
        </item>
        <item>
            <title><![CDATA[学习编写bash命令自动补全]]></title>
            <link>https://inhere.github.io/blog/2021/08/09/learn-bash-completion</link>
            <guid>https://inhere.github.io/blog/2021/08/09/learn-bash-completion</guid>
            <pubDate>Mon, 09 Aug 2021 11:24:00 GMT</pubDate>
            <description><![CDATA[简单学习编写bash命令自动补全]]></description>
            <content:encoded><![CDATA[<p>简单学习编写bash命令自动补全</p><blockquote><p>下面的示例使用 <code>__my_completion</code> 作为命令行应用 <code>myapp</code>(eg: git) 的补全函数</p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="相关函数说明">相关函数说明<a href="#相关函数说明" class="hash-link" aria-label="相关函数说明的直接链接" title="相关函数说明的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="complete-函数">complete 函数<a href="#complete-函数" class="hash-link" aria-label="complete 函数的直接链接" title="complete 函数的直接链接">​</a></h3><p><code>complete</code> 指定命令的补全函数</p><p>自定义补全时调用complete命令来完成，complete通过选项提供了多种补全的途径和方式，这些选项是按照先后次序起作用的：<code>-A -G -W -F -C -X -P -S -o</code></p><p>一些选项说明:</p><ul><li><code>-o STRING</code> 额外设置补全选项，可以设置多次；选项值可以为：<ul><li><code>bashdefault</code> 如果没有生成补全条目，就使用bash默认的其它补全</li><li><code>default</code>	如果没有生成补全条目，就使用“readline”默认的文件名补全。</li><li><code>dirnames</code>	如果没有生成补全条目，就进行目录名补全。</li><li><code>filenames</code>	告诉“readline”生成文件名，以便进行与文件名相关的处理，例如在目录名后面加上斜杠，引用特殊字符，去掉行尾的空格，目的是用于shell函数。</li><li><code>noquote</code>	告诉“readline”不引用文件名，默认会进行引用。</li><li><code>nospace</code>	告诉“readline”在补全的名称后不添加空格，默认添加空格。</li><li><code>plusdirs</code>	生成补全条目之后，还会进行目录名补全并把结果添加到其它动作得到的结果中。</li></ul></li><li><code>-A STRING</code> action，指定动作，这个有固定的几个可选。选项值可以为：<ul><li><code>alias</code>	别名，同选项  <code>-a</code>。</li><li><code>arrayvar</code>	数组变量名。</li><li><code>binding</code>	“readline”键绑定名。</li><li><code>builtin</code>	shell内建命令名，同选项 <code>-b</code>。</li><li><code>command</code>	命令名，同选项 <code>-c</code>。</li><li><code>directory</code>	目录名，同选项 <code>-d</code>。</li><li><code>disabled</code>	不可用的shell内建命令名。</li><li><code>enabled</code>	可用的shell内建命令名。</li><li><code>export</code>	导出的shell变量名，同选项<code>-e</code>。</li><li><code>file</code>	文件名，同选项 <code>-f</code>。</li><li><code>function</code>	shell函数名。</li><li><code>group</code>	组名，同选项 <code>-g</code>。</li><li><code>helptopic</code>	内建命令help支持的帮助主题。</li><li><code>hostname</code>	主机名，从shell环境变量HOSTFILE中获取。</li><li><code>job</code>	作业名，同选项 <code>-j</code>。</li><li><code>keyword</code>	shell保留字，同选项 <code>-k</code>。</li><li><code>running</code>	正在运行的作业名。</li><li><code>service</code>	服务名，同选项 <code>-s</code>。</li><li><code>setopt</code>	内建命令set的选项 <code>-o</code> 可用的参数。</li><li><code>shopt</code>	内建命令shopt可接受的选项名。</li><li><code>signal</code>	信号名。</li><li><code>stopped</code>	暂停的作业名。</li><li><code>user</code>	用户名，同选项 <code>-u</code>。</li><li><code>variable</code>	所有的shell变量名，同选项 <code>-v</code>。</li></ul></li><li><code>-C command</code>	在子shell中执行命令，并把其结果作为补全条目。</li><li><code>-F function</code> 指定function生成可选单词。<ul><li>在函数定义中，一些shell变量可以使用：<code>COMP_LINE</code>, <code>COMP_POINT</code>, <code>COMP_KEY</code>, <code>COMP_TYPE</code>。</li><li>函数参数定义是：<code>$1</code> 为当前要补全参数的命令，<code>$2</code> 为当前要补全的单词，<code>$3</code> 为当前要补全单词的前面一个单词。</li><li>这些都可以在自定义函数中使用。最终单词列表要放到 <code>COMPREPLY</code> 这个数组中，shell补全机制是从这个数组中取单词的。</li></ul></li><li><code>-G globpat</code>	使用文件名扩展模式globpat进行扩展以生成可能的补全条目。</li><li><code>-P prefix</code>	在所有的选项应用到补全结果后，在结果前添加前缀prefix。</li><li><code>-S suffix</code>	在所有的选项应用到补全结果后，在结果后添加后缀suffix。</li><li><code>-W wordlist</code>	使用特殊变量 <code>IFS</code> 中的字符拆分单词列表wordlist，并扩展拆分后的每个单词，结果中与待补全单词匹配的条目就是补全条目。</li><li><code>-X filterpat</code>	filterpat是进行文件名扩展时使用的模式，它作用于通过前面的选项和参数生成的补全列表，并把每个与过滤模式匹配的条目删除，模式中前导的叹号表示否定，这时会删除与过滤模式不匹配的条目。</li></ul><blockquote><p>TIP: <code>IFS</code> 内部字段分隔符。
用于迭代字符串，例如：<code>data="a,b,c"</code> 设置 <code>local IFS=","</code> , 使用 <code>for item in $data</code> 迭代字符串，内部item 即是单个的 <code>a</code> <code>b</code> <code>c</code></p></blockquote><p><strong> -F 补充说明：</strong></p><ul><li><p><code>COMPREPLY</code> 变量的内容总是会显示，补全函数需要自己处理其中的内容。</p></li><li><p>如果 <code>COMPREPLY</code> 变量中只有一个元素，那么这个词会自动补全到命令之后。返回多个候选则不会触发这个功能。</p></li><li><p><code>COMP_WORDS</code>：当前命令行中已经输入的词数组。</p></li><li><p><code>COMP_CWORD</code>：当前光标所处词位于 <code>COMP_WORDS</code> 数组中的索引值。既当按下 tab 键时光标所处词的索引。</p></li><li><p><code>COMP_LINE</code>：当前命令行。</p></li></ul><p>获取命令后面的词，我们可以使用 <code>COMP_WORDS[1]</code> 的值</p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="compgen-函数">compgen 函数<a href="#compgen-函数" class="hash-link" aria-label="compgen 函数的直接链接" title="compgen 函数的直接链接">​</a></h3><p><code>compgen</code> 是一个用于生成补全列表的内置命令，支持complete命令的大部分参数（例如-W参数指定补全词列表，-d参数补全目录），并能够 <strong>基于用户已经输入的内容进行过滤</strong></p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ compgen --help</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">compgen: compgen </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-abcdefgjksuv</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-o option</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-A action</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-G globpat</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-W wordlist</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-F function</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-C command</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-X filterpat</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-P prefix</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-S suffix</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">word</span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><table><thead><tr><th>选项</th><th>选项值</th><th>说明</th></tr></thead><tbody><tr><td><code>-F</code></td><td>function</td><td>执行shell 函数，函数中生成COMPREPLY作为候选的补全结果</td></tr><tr><td><code>-C</code></td><td>command</td><td>将 command 命令的执行结果作为候选的补全 结果</td></tr><tr><td><code>-G</code></td><td>pattern</td><td>将匹配 pattern的文件名作为候选的补全结果</td></tr><tr><td><code>-W</code></td><td>wordlist</td><td>分割 wordlist 中的单词，作为候选的补全结果</td></tr><tr><td><code>-p</code></td><td><code>[name]</code></td><td>列出当前所有的补全命令</td></tr><tr><td><code>-r</code></td><td><code>[name]</code></td><td>删除某个补全命令</td></tr></tbody></table><p>测试使用：</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ compgen -W </span><span class="token string" style="color:#e3116c">"one two three"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">one</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">two</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">three</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">inhere@Inhere-win10 MINGW64 /f/work </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">main</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ compgen -W </span><span class="token string" style="color:#e3116c">"one two three"</span><span class="token plain"> o</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">one</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">inhere@Inhere-win10 MINGW64 /f/work </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">main</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ compgen -W </span><span class="token string" style="color:#e3116c">"one two three"</span><span class="token plain"> t</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">two</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">three</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="帮助调试">帮助调试<a href="#帮助调试" class="hash-link" aria-label="帮助调试的直接链接" title="帮助调试的直接链接">​</a></h3><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># 打印全部已定义的函数名称</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">declare</span><span class="token plain"> -F</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 查看指定函数的定义</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">declare</span><span class="token plain"> -f __my_completion</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="分割单词列表作为补全数据">分割单词列表作为补全数据<a href="#分割单词列表作为补全数据" class="hash-link" aria-label="分割单词列表作为补全数据的直接链接" title="分割单词列表作为补全数据的直接链接">​</a></h2><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token shebang important">#!/usr/bin/env bash</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function-name function" style="color:#d73a49">__my_completion</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token assign-left variable" style="color:#36acaa">cur_name</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">${COMP_WORDS</span><span class="token string variable punctuation" style="color:#393A34">[</span><span class="token string variable" style="color:#36acaa">COMP_CWORD</span><span class="token string variable punctuation" style="color:#393A34">]</span><span class="token string variable" style="color:#36acaa">}</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># 候选命令</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token assign-left variable" style="color:#36acaa">commands</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"one two three"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token assign-left variable" style="color:#36acaa">COMPREPLY</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">(</span><span class="token variable" style="color:#36acaa">$(</span><span class="token variable" style="color:#36acaa">compgen -W </span><span class="token variable string" style="color:#e3116c">"</span><span class="token variable string variable" style="color:#36acaa">$commands</span><span class="token variable string" style="color:#e3116c">"</span><span class="token variable" style="color:#36acaa"> -- </span><span class="token variable string" style="color:#e3116c">"</span><span class="token variable string variable" style="color:#36acaa">$cur_name</span><span class="token variable string" style="color:#e3116c">"</span><span class="token variable" style="color:#36acaa">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">complete -F __my_completion myapp</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="使用echo返回作为补全数据">使用echo返回作为补全数据<a href="#使用echo返回作为补全数据" class="hash-link" aria-label="使用echo返回作为补全数据的直接链接" title="使用echo返回作为补全数据的直接链接">​</a></h2><p>简单的使用echo返回作为补全数据</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function-name function" style="color:#d73a49">__my_completion</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># 候选命令</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token assign-left variable" style="color:#36acaa">commands</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"one two three"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">echo</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$commands</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># for use echo</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">complete -o dirnames -C </span><span class="token string" style="color:#e3116c">'__my_completion'</span><span class="token plain"> myapp</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="使用外部函数的结果补全">使用外部函数的结果补全<a href="#使用外部函数的结果补全" class="hash-link" aria-label="使用外部函数的结果补全的直接链接" title="使用外部函数的结果补全的直接链接">​</a></h2><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function-name function" style="color:#d73a49">__my_completion</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># 输入的关键词</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">local</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">term</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">${COMP_WORDS</span><span class="token string variable punctuation" style="color:#393A34">[</span><span class="token string variable" style="color:#36acaa">COMP_CWORD</span><span class="token string variable punctuation" style="color:#393A34">]</span><span class="token string variable" style="color:#36acaa">}</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># 使用外部命令来匹配关键词并返回结果</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">local</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">commands</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">$(</span><span class="token variable" style="color:#36acaa">kite jump hint </span><span class="token variable string" style="color:#e3116c">"</span><span class="token variable string variable" style="color:#36acaa">$term</span><span class="token variable string" style="color:#e3116c">"</span><span class="token variable" style="color:#36acaa"> --no-name</span><span class="token variable" style="color:#36acaa">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">#    echo commands:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">#    echo $commands --- ${commands[@]}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token assign-left variable" style="color:#36acaa">COMPREPLY</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">(</span><span class="token variable" style="color:#36acaa">$commands</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># for use echo</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">complete -o dirnames -F </span><span class="token string" style="color:#e3116c">'__my_completion'</span><span class="token plain"> myapp</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>TIP: 编写好之后，可以使用 <code>source ./my_complete.sh</code> 临时加载到bash; 要保持一直生效需要配置到 <code>.bashrc</code></p></blockquote><blockquote><p>参考文章链接：</p><ul><li><a href="https://blog.csdn.net/qq_38883889/article/details/106543271" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/qq_38883889/article/details/106543271</a></li><li><a href="https://blog.csdn.net/junyidcf/article/details/54178196" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/junyidcf/article/details/54178196</a></li><li><a href="https://www.infoq.cn/article/bash-programmable-completion-tutorial" target="_blank" rel="noopener noreferrer">https://www.infoq.cn/article/bash-programmable-completion-tutorial</a></li></ul></blockquote>]]></content:encoded>
            <category>shell</category>
            <category>bash</category>
            <category>linux</category>
            <category>completion</category>
        </item>
        <item>
            <title><![CDATA[简单快速的配置自己的bash环境]]></title>
            <link>https://inhere.github.io/blog/2021/08/08/quick-config-bashrc</link>
            <guid>https://inhere.github.io/blog/2021/08/08/quick-config-bashrc</guid>
            <pubDate>Sun, 08 Aug 2021 11:26:00 GMT</pubDate>
            <description><![CDATA[简单快速的配置自己的bash环境]]></description>
            <content:encoded><![CDATA[<p>简单快速的配置自己的bash环境</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="自动加载指定目录的脚本">自动加载指定目录的脚本<a href="#自动加载指定目录的脚本" class="hash-link" aria-label="自动加载指定目录的脚本的直接链接" title="自动加载指定目录的脚本的直接链接">​</a></h2><p>快速的配置bashrc支持自动加载指定目录的bash脚本</p><p>想要将bash脚本放置到 <code>~/.bash-scripts</code></p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">mkdir</span><span class="token plain"> ~/.bash-scripts</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>使用vim打开 <code>~/.bashrc</code>:</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">vim</span><span class="token plain"> ~/.bashrc</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>添加如下内容:</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># use for custom config an .bashrc, support auto load *.bash files</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## auto load bash files</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token for-or-select variable" style="color:#36acaa">file</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> .bash-scripts/*.bash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">do</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># shellcheck disable=SC1090</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">test</span><span class="token plain"> -f </span><span class="token variable" style="color:#36acaa">$file</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token builtin class-name">.</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$file</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">done</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## load custom aliases file.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">local</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">customAliasFile</span><span class="token operator" style="color:#393A34">=~</span><span class="token plain">/.my-aliases.sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># shellcheck disable=SC1090</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">test</span><span class="token plain"> -f </span><span class="token variable" style="color:#36acaa">$customAliasFile</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token builtin class-name">.</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$customAliasFile</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="配置常用别名和函数">配置常用别名和函数<a href="#配置常用别名和函数" class="hash-link" aria-label="配置常用别名和函数的直接链接" title="配置常用别名和函数的直接链接">​</a></h2><p>我将自己的常用别名和函数 放置到 <code>~/.my-aliases.sh</code></p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">##</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## aliases</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">##</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">alias</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">ls</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"ls --color=auto"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">alias</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">ll</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"ls -al"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">alias</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">gst</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"git status"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">##</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## reload bash</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">##</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function-name function" style="color:#d73a49">reload_bash</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">source</span><span class="token plain"> ~/.bashrc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">##</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## proxy setting</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">##</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function-name function" style="color:#d73a49">proxy_off</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">unset</span><span class="token plain"> http_proxy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">unset</span><span class="token plain"> https_proxy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">echo</span><span class="token plain"> -e </span><span class="token string" style="color:#e3116c">"proxy closed"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function-name function" style="color:#d73a49">proxy_on</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">no_proxy</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"localhost,127.0.0.1,localaddress,.localdomain.com"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">http_proxy</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"http://127.0.0.1:10801"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">https_proxy</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">$http_proxy</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">echo</span><span class="token plain"> -e </span><span class="token string" style="color:#e3116c">"proxy opened"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>shell</category>
            <category>bash</category>
            <category>linux</category>
        </item>
        <item>
            <title><![CDATA[MDX Blog Post]]></title>
            <link>https://inhere.github.io/blog/mdx-blog-post</link>
            <guid>https://inhere.github.io/blog/mdx-blog-post</guid>
            <pubDate>Sun, 01 Aug 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Blog posts support Docusaurus Markdown features, such as MDX.]]></description>
            <content:encoded><![CDATA[<p>Blog posts support <a href="https://docusaurus.io/docs/markdown-features" target="_blank" rel="noopener noreferrer">Docusaurus Markdown features</a>, such as <a href="https://mdxjs.com/" target="_blank" rel="noopener noreferrer">MDX</a>.</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_fVrm"><div class="admonitionHeading_CfVA"><span class="admonitionIcon_Hsjw"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>提示</div><div class="admonitionContent_CXYE"><p>Use the power of React to create interactive blog posts.</p><div class="language-js codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-js codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">button onClick</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">alert</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'button clicked!'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token maybe-class-name">Click</span><span class="token plain"> me</span><span class="token operator" style="color:#393A34">!</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">button</span><span class="token operator" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><button>Click me!</button></div></div>]]></content:encoded>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[ZSH自动补全脚本编写]]></title>
            <link>https://inhere.github.io/blog/2021/07/28/zsh-completions-howto</link>
            <guid>https://inhere.github.io/blog/2021/07/28/zsh-completions-howto</guid>
            <pubDate>Wed, 28 Jul 2021 22:04:00 GMT</pubDate>
            <description><![CDATA[告诉 zsh 使用哪个函数来完成命令]]></description>
            <content:encoded><![CDATA[<p>告诉 zsh 使用哪个函数来完成命令</p><p>命令的完成函数存储在名称以下划线 <code>_</code> 开头的文件中，这些文件应放置在 <code>$fpath</code> 变量中列出的目录中。
可以通过在 <code>~/.zshrc</code> 文件中添加这样的行来向 <code>$fpath</code> 添加目录：</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token assign-left variable" style="color:#36acaa">fpath</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">~/newdir </span><span class="token variable" style="color:#36acaa">$fpath</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>完成函数文件的第一行看起来像这样：</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># compdef foobar</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这告诉 zsh 该文件包含用于完成 foobar 命令的代码。这是第一行最常使用的格式，但如果需要，您也可以使用相同的文件来完成多个不同的功能。
请参阅<a href="http://zsh.sourceforge.net/Doc/Release/Completion-System.html#Autoloaded-files" target="_blank" rel="noopener noreferrer">此处</a>了解更多详情。</p><p>你也可以直接使用 <code>compdef</code> 命令（例如在你的 <code>~/.zshrc</code> 文件中）告诉 zsh 使用哪个函数来完成这样的命令：</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> compdef _function foobar</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>或者对几个命令使用相同的完成：</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> compdef _function foobar goocar hoodar</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>或者如果你想提供参数：</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> compdef </span><span class="token string" style="color:#e3116c">' _function arg1 arg2 '</span><span class="token plain"> foobar</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>请参<a href="http://zsh.sourceforge.net/Doc/Release/Completion-System.html#Functions-4" target="_blank" rel="noopener noreferrer">阅此</a>处了解更多详情。</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="编写自己的完成函数">编写自己的完成函数<a href="#编写自己的完成函数" class="hash-link" aria-label="编写自己的完成函数的直接链接" title="编写自己的完成函数的直接链接">​</a></h2><p>一个很好的入门方法是查看一些已经定义的完成函数。在我的 linux 安装中，这些可以在 <code>/usr/share/zsh/functions/Completion/Unix</code> 和 <code>/usr/share/zsh/functions/Completion/Linux</code> 和其他一些子目录中找到。</p><p>您会注意到 <code>_arguments</code> 函数在这些文件中被大量使用。这是一个实用函数，可以轻松编写简单的完成函数。<code>_arguments</code> 函数是 <code>compadd</code> 内置函数的包装器。<code>compadd</code> 内置函数是用于向命令行添加完成词并控制其行为的核心函数。
但是，大多数情况下您不需要使用 <code>compadd</code>，因为有许多实用函数，例如 <code>_arguments</code> 和 <code>_describe</code>，它们更易于使用。</p><p>对于非常基本的完成，<code>_describe</code> 函数应该足够了</p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="实用功能">实用功能<a href="#实用功能" class="hash-link" aria-label="实用功能的直接链接" title="实用功能的直接链接">​</a></h3><p>以下是一些可能有用的实用函数的列表。实用功能的完整列表以及完整的解释可在此处获得。下一节将给出如何使用这些函数的示例。</p><p><strong>整体完成的主要实用功能</strong></p><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td><code>_alternative</code></td><td>可用于从其他实用程序函数或 shell 代码生成完成候选。</td></tr><tr><td><code>_arguments</code></td><td>用于指定如何完成带有 unix 样式选项的命令的单个选项和参数。</td></tr><tr><td><code>_describe</code></td><td>用于创建由带有描述（但没有动作 <code>ACTION</code>）的单词组成的简单完成。比 <code>_arguments</code> 更容易使用</td></tr><tr><td><code>_gnu_generic</code></td><td>可用于完成理解 <code>--help</code> 选项的命令的选项。</td></tr><tr><td><code>_regex_arguments</code></td><td>创建一个函数，用于将命令行参数与正则表达式匹配，然后执行操作/完成。</td></tr></tbody></table><p><strong>用于执行单个单词的复杂完成的函数</strong></p><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td><code>_values</code></td><td>用于完成任意关键字（值）及其参数，或此类组合的逗号分隔列表。</td></tr><tr><td><code>_combination</code></td><td>用于完成值的组合，例如主机名和用户名对。</td></tr><tr><td><code>_multi_parts</code></td><td>用于分别完成单词的多个部分，其中每个部分由一些字符分隔，例如用于完成部分文件路径：<code>/u/i/sy -&gt; /usr/include/sys</code></td></tr><tr><td><code>_sep_parts</code></td><td>与 _multi_parts 类似，但允许在完成的不同部分使用不同的分隔符。</td></tr><tr><td><code>_sequence</code></td><td>用作另一个完成函数的包装器，以完成由该其他函数生成的分隔匹配列表。</td></tr></tbody></table><p><strong>用于完成特定类型对象的函数</strong></p><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td><code>_path_files</code></td><td>用于完成文件路径。采取多种选择来控制行为。</td></tr><tr><td><code>_files</code></td><td>使用除 <code>-g</code> 和 <code>-/</code> 之外的所有选项调用 <code>_path_files</code>。这些选项取决于文件模式样式设置。</td></tr><tr><td><code>_net_interfaces</code></td><td>用于补全网络接口名称</td></tr><tr><td><code>_users</code></td><td>用于填写用户名</td></tr><tr><td><code>_groups</code></td><td>用于完成组名</td></tr><tr><td><code>_options</code></td><td>用于补全 shell 选项的名称。</td></tr><tr><td><code>_parameters</code></td><td>用于完成 shell 参数/变量的名称（可以限制为匹配模式的那些）</td></tr></tbody></table><p><strong>处理缓存完成的函数</strong></p><p>如果您有大量完成，您可以将它们保存在缓存文件中，以便快速加载完成。</p><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td><code>_cache_invalid</code></td><td>指示与给定缓存标识符对应的完成缓存是否需要重建</td></tr><tr><td><code>_retrieve_cache</code></td><td>从缓存文件中检索完成信息</td></tr><tr><td><code>_store_cache</code></td><td>在缓存文件中存储与给定缓存标识符相对应的完成</td></tr></tbody></table><p><strong>其他功能</strong></p><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td><code>_message</code></td><td>用于在无法生成完成的地方显示帮助消息。</td></tr><tr><td><code>_regex_words</code></td><td>可用于为 <code>_regex_arguments</code> 命令生成参数。这比手动编写参数更容易。</td></tr><tr><td><code>_guard</code></td><td>可用于 <code>_arguments</code> 的规范的 <code>ACTION</code> 和类似函数来检查正在完成的单词。</td></tr></tbody></table><p><strong>动作 Action</strong></p><p>许多实用函数，例如 <code>_arguments</code> <code>_regex_arguments</code> <code>_alternative</code> 和 <code>_values</code> 可能在选项/参数规范的末尾包含一个动作。此动作指示如何完成相应的参数。动作 <code>Action</code> 可以采用以下形式之一：</p><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td><code>()</code></td><td>需要参数，但不会生成匹配项。</td></tr><tr><td><code>(ITEM1 ITEM2)</code></td><td>可能匹配项列表</td></tr><tr><td><code>((ITEM1\:'DESC1' ITEM2\:'DESC2'))</code></td><td>可能的匹配列表，附带描述信息。注意：Action 中的引号不能和其所在的参数格式字符串的引号相同</td></tr><tr><td><code>-&gt;STRING</code></td><td>将<code>$state</code>设置为字符串并继续（<code>$state</code>可在实用功能调用后在案例陈述中检查）</td></tr><tr><td><code>FUNCTION</code></td><td>用于生成匹配或执行某些其他操作的函数名称. 例如 <code>_files</code> 或 <code>_message</code></td></tr><tr><td><code>{EVAL-STRING}</code></td><td>将字符串评估为 shell 代码以生成匹配项。这可用于调用带有参数的实用程序函数，例如 <code>_values</code> 或 <code>_describe</code></td></tr><tr><td><code>=ACTION</code></td><td>在完成命令行中插入一个虚拟词而且不会改变补全位置节点</td></tr></tbody></table><p>并非所有操作类型都可用于使用它们的所有实用功能。例如，-&gt;string 类型在_regex_arguments或_alternative功能中不可用。</p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="使用-_describe-编写简单的完成函数">使用 _describe 编写简单的完成函数<a href="#使用-_describe-编写简单的完成函数" class="hash-link" aria-label="使用 _describe 编写简单的完成函数的直接链接" title="使用 _describe 编写简单的完成函数的直接链接">​</a></h3><p><code>_describe</code> 函数可用于简单的补全，其中选项/参数的顺序和位置并不重要。您只需要创建一个数组参数来保存选项及其描述，然后将参数名称作为参数传递给 <code>_describe</code>。下面的示例创建完成候选 c 和 d，以及描述（注意这应该放在 <code>$fpath</code> 中列出的某个目录中名为 <code>_cmd</code> 的文件中）。</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">#compdef cmd</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">local</span><span class="token plain"> -a subcmds</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">subcmds</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'c:description for c command'</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'d:description for d command'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">_describe </span><span class="token string" style="color:#e3116c">'command'</span><span class="token plain"> subcmds</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>您可以使用以下由双连字符分隔的多个不同列表，但请注意，这混合了单个标题下的匹配项，并且不打算与不同类型的完成候选者一起使用：</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token builtin class-name">local</span><span class="token plain"> -a subcmds topics</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">subcmds</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'c:description for c command'</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'d:description for d command'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">topics</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'e:description for e help topic'</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'f:description for f help topic'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">_describe </span><span class="token string" style="color:#e3116c">'command'</span><span class="token plain"> subcmds -- topics</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>如果两个候选人有相同的描述，<code>_describe</code> 将它们收集在同一行中，并确保描述在列中整齐对齐。<code>_describe</code> 函数可以在 <code>ACTION</code> 中用作 <code>_alternative</code>、<code>_arguments</code> 或 <code>_regex_arguments</code> 规范的一部分。在这种情况下，您必须将它的参数放在大括号中，例如 <code>'TAG:DESCRIPTION:{_describe 'values' options}'</code></p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="使用-_alternative-编写完成函数">使用 _alternative 编写完成函数<a href="#使用-_alternative-编写完成函数" class="hash-link" aria-label="使用 _alternative 编写完成函数的直接链接" title="使用 _alternative 编写完成函数的直接链接">​</a></h3><p>与 <code>_describe</code> 一样，此函数执行简单的补全，其中选项/参数的顺序和位置并不重要。然而，与 _describe 不同的是，可以调用其他函数而不是固定匹配来生成完成候选。此外，_alternative 允许混合不同类型的完成候选。</p><p>作为参数，它采用 <code>'TAG:DESCRIPTION:ACTION'</code> 形式的规范列表，其中 TAG 是标识完成匹配类型的特殊标签，DESCRIPTION 用作标题来共同描述完成候选组，而 ACTION是前面列出的动作类型之一（除了 <code>-&gt;STRING</code> 和 <code>=ACTION</code> 形式）。例如：</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">_alternative </span><span class="token string" style="color:#e3116c">'arguments:custom arg:(a b c)'</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'files:filename:_files'</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>第一个规范添加完成候选 a、b 和 c，第二个规范调用 <code>_files</code> 函数来完成文件路径。</p><p>我们可以用 <code>\</code> 将规范分成几行，并为每个自定义参数添加描述，如下所示：</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">_alternative </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string" style="color:#e3116c">'args:custom arg:((a\:"description a" b\:"description b" c\:"description c"))'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string" style="color:#e3116c">'files:filename:_files'</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>如果我们想将参数传递给 <code>_files</code>，它们可以简单地包含在内，如下所示：</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">_alternative </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string" style="color:#e3116c">'args:custom arg:((a\:"description a" b\:"description b" c\:"description c"))'</span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string" style="color:#e3116c">'files:filename:_files -/'</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>要使用参数扩展来创建我们的完成列表，我们必须使用双引号来引用规范，例如：</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">_alternative </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string" style="color:#e3116c">"dirs:user directory:(</span><span class="token string variable" style="color:#36acaa">$userdirs</span><span class="token string" style="color:#e3116c">)"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string" style="color:#e3116c">"pids:process ID:(</span><span class="token string variable" style="color:#36acaa">$(</span><span class="token string variable function" style="color:#d73a49">ps</span><span class="token string variable" style="color:#36acaa"> -A o </span><span class="token string variable assign-left variable" style="color:#36acaa">pid</span><span class="token string variable operator" style="color:#393A34">=</span><span class="token string variable" style="color:#36acaa">)</span><span class="token string" style="color:#e3116c">)"</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>在这种情况下，第一个规范添加存储在 <code>$userdirs</code> 变量中的单词，第二个规范评估 <code>'ps -A o pid='</code> 以获取用作完成候选的 pid 列表。在实践中，我们会为此使用现有的 <code>_pids</code> 函数。</p><p>我们可以使用其他实用函数，例如 ACTION 中的 <code>_values</code> 来执行更复杂的完成，例如：</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">_alternative </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string" style="color:#e3116c">"directories:user directory:(</span><span class="token string variable" style="color:#36acaa">$userdirs</span><span class="token string" style="color:#e3116c">)"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string" style="color:#e3116c">'options:comma-separated opt: _values -s , letter a b c'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这将完成 <code>$userdirs</code> 中的项目，以及包含 <code>a, b &amp;/or c</code> 的逗号分隔列表。注意 <code>_values</code> 之前的初始空格的使用。这是必需的，因为 <code>_values</code> 不理解用于描述的标准 compadd 选项。</p><p>与 <code>_describe</code> 一样，<code>_alternative</code> 函数本身可以作为 <code>_arguments</code> 或 <code>_regex_arguments</code> 规范的一部分在 <code>ACTION</code> 中使用。</p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="使用-_arguments-编写完成函数">使用 _arguments 编写完成函数<a href="#使用-_arguments-编写完成函数" class="hash-link" aria-label="使用 _arguments 编写完成函数的直接链接" title="使用 _arguments 编写完成函数的直接链接">​</a></h3><p>通过对 _arguments 函数的一次调用，您可以创建相当复杂的完成函数。它旨在处理带有各种选项和一些普通参数的典型命令。与 _alternative 函数一样，_arguments 将规范字符串列表作为参数。这些规范字符串指定选项和任何相应的选项参数（例如 -f 文件名）或命令参数。</p><p>基本选项规范采用 <code>'-OPT[DESCRIPTION]'</code> 的形式，例如：</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># sort output: 排序输出</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># long output: 长输出</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">_arguments </span><span class="token string" style="color:#e3116c">'-s[sort output]'</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'--l[long output]'</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'-l[long output]'</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>可以在 <code>'-OPT[DESCRIPTION]:MESSAGE:ACTION'</code> 形式的选项描述之后指定选项的参数，其中 MESSAGE 是要显示的消息，而 ACTION 可以是上面 ACTIONS 部分中提到的任何形式。例如：</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">_arguments </span><span class="token string" style="color:#e3116c">'-f[input file]:filename:_files'</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>命令参数规范采用 <code>'N:MESSAGE:ACTION'</code> 形式，其中 <code>N</code> 表示它是第 <code>N</code> 个命令参数，而 <code>MESSAGE &amp; ACTION</code> 和以前一样。如果省略 N，则它仅表示下一个命令参数（在任何已指定的参数之后）。如果在开头（在 <code>N</code> 之后）使用 <em>双冒号</em>，则该参数是可选的。例如：</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">_arguments </span><span class="token string" style="color:#e3116c">'-s[sort output]'</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1:first arg:_net_interfaces'</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'::optional arg:_files'</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">':next arg:(a b c)'</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这里第一个 arg 是网络接口，下一个可选 <code>arg</code> 是文件名，最后一个 <code>arg</code> 可以是 a、b 或 c，并且 <code>-s</code> 选项可以在任何位置完成。</p><p><code>_arguments</code> 函数允许使用上面 <code>ACTION</code> 部分中列出的全套 ACTION 表单。这意味着您可以使用操作来选择 <code>case</code> 语句分支，如下所示：</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">_arguments </span><span class="token string" style="color:#e3116c">'-m[music file]:filename:-&gt;files'</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'-f[flags]:flag:-&gt;flags'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$state</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    files</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin class-name">local</span><span class="token plain"> -a music_files</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token assign-left variable" style="color:#36acaa">music_files</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> Music/**/*.</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">mp3,wav,flac,ogg</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        _multi_parts / music_files</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">;</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    flags</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        _values -s , </span><span class="token string" style="color:#e3116c">'flags'</span><span class="token plain"> a b c d e</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">;</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">esac</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>在这种情况下，音乐文件(music_files)的路径使用 <code>_multi_parts</code> 函数逐步降序完成，标志使用 <code>_values</code> 函数作为逗号分隔的列表完成。</p><p>我这里刚刚给你介绍了 <code>_arguments</code> 规范的基础知识，你还可以指定互斥选项、重复选项&amp;参数、以+开头的选项而不是-等，更多细节参见<a href="http://zsh.sourceforge.net/Doc/Release/Completion-System.html#Completion-System" target="_blank" rel="noopener noreferrer">官方文档</a>。
另请查看本文档末尾提到的教程，以及<a href="https://github.com/vapniks/zsh-completions/tree/master/src" target="_blank" rel="noopener noreferrer">src 目录</a>中的完成功能。</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="测试与调试">测试与调试<a href="#测试与调试" class="hash-link" aria-label="测试与调试的直接链接" title="测试与调试的直接链接">​</a></h2><p>要重新加载完成功能：</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> unfunction _func</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> autoload -U _func</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>可以调用以下函数来获取有用的信息。如果默认键绑定不起作用，您可以尝试按 <code>Alt+x</code>，然后输入命令名称。</p><table><thead><tr><th>功能</th><th>默认键绑定</th><th>描述</th></tr></thead><tbody><tr><td><code>_complete_help</code></td><td><code>Ctrl+xh</code></td><td>显示有关在当前光标位置完成时使用的上下文名称、标签和完成函数的信息</td></tr><tr><td><code>_complete_help</code></td><td><code>Alt+2 Ctrl+xh</code></td><td>如上所述，但显示更多信息</td></tr><tr><td><code>_complete_debug</code></td><td><code>Ctrl+x ?</code></td><td>执行普通完成，但在临时文件中捕获完成系统执行的 shell 命令的跟踪</td></tr></tbody></table><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="陷阱注意事项">陷阱（注意事项）<a href="#陷阱注意事项" class="hash-link" aria-label="陷阱（注意事项）的直接链接" title="陷阱（注意事项）的直接链接">​</a></h2><p>请记住在包含完成函数的文件的开头包含 <code>#compdef</code> 行。</p><p>注意对 <code>_arguments</code> 或 <code>_regex_arguments</code> 的规范使用正确的引用类型：如果规范中存在需要扩展的参数，请使用双引号，否则使用单引号，并确保在项目描述周围使用不同的引号。</p><p>检查您在 <code>_arguments</code> 、<code>_alternative</code> 、 <code>_regex_arguments</code> 等规范的正确位置是否有正确数量的 <code>:</code>。</p><p>记住在使用 <code>_regex_arguments</code> 时包含一个初始模式来匹配命令词（它不需要匹配操作）。</p><p>请记住在 <code>_regex_arguments</code> 的任何 <code>PATTERN</code> 参数的末尾放置一个空字符 <code>$'\0'</code></p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="提示">提示<a href="#提示" class="hash-link" aria-label="提示的直接链接" title="提示的直接链接">​</a></h2><p>有时你会遇到这样的情况，在子命令之后只有一个选项，当在子命令之后按下 tab 时，zsh 会自动完成这个。相反，如果您希望在完成之前将其与其描述一起列出，您可以向 <code>ACTION</code> 添加另一个空选项（即 <code>\:</code>），如下所示 <code>':TAG:DESCRIPTION:((opt1\:”description for opt1” \:))'</code> 请注意这一点仅适用于在其规范参数（<code>_arguments</code>、<code>_regex_arguments</code> 等）中使用 <code>ACTION</code> 的实用程序函数</p><blockquote><p>本文翻译自 <a href="https://github.com/zsh-users/zsh-completions/blob/master/zsh-completions-howto.org" target="_blank" rel="noopener noreferrer">zsh-users/zsh-completions</a></p></blockquote><blockquote><p>TIP: 更完整的翻译文章参看 <a href="http://chuquan.me/2020/10/02/zsh-completion-tutorial/" target="_blank" rel="noopener noreferrer">http://chuquan.me/2020/10/02/zsh-completion-tutorial/</a></p></blockquote>]]></content:encoded>
            <category>shell</category>
            <category>zsh</category>
            <category>linux</category>
        </item>
        <item>
            <title><![CDATA[在shell脚本里简单快速的使用颜色]]></title>
            <link>https://inhere.github.io/blog/simple-use-color-in-shell</link>
            <guid>https://inhere.github.io/blog/simple-use-color-in-shell</guid>
            <pubDate>Fri, 08 Nov 2019 22:04:00 GMT</pubDate>
            <description><![CDATA[在shell脚本里简单快速的使用颜色的代码实现]]></description>
            <content:encoded><![CDATA[<p>在shell脚本里简单快速的使用颜色的代码实现</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="脚本代码">脚本代码<a href="#脚本代码" class="hash-link" aria-label="脚本代码的直接链接" title="脚本代码的直接链接">​</a></h2><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token shebang important">#!/usr/bin/env bash</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># some common functions</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># file: scripts/common-func.sh</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Usage:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># user_confirm</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># user_confirm "custom question"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function-name function" style="color:#d73a49">user_confirm</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">local</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">yes</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">local</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">msg</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"Confirm continue"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># override default message</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$1</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">msg</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">$1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># read user input</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">read</span><span class="token plain"> -p </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$msg</span><span class="token string" style="color:#e3116c">? [y/n]"</span><span class="token plain"> yn</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">${yn}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">Yy</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">* </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin class-name">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">fi</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Usage:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># colored_text "message text"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># colored_text "message text" "red"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># colored_text "message text" "blue"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function-name function" style="color:#d73a49">colored_text</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token assign-left variable" style="color:#36acaa">NOC</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'\033[0m'</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># No Color</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token assign-left variable" style="color:#36acaa">RED</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'\033[0;31m'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token assign-left variable" style="color:#36acaa">BLUE</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'\033[0;34m'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token assign-left variable" style="color:#36acaa">CYAN</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'\033[0;36m'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token assign-left variable" style="color:#36acaa">GREEN</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'\033[0;32m'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token assign-left variable" style="color:#36acaa">YELLOW</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'\033[0;33m'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#    [[ "$2" = "" ]] &amp;&amp; $2="green"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$2</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"red"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin class-name">echo</span><span class="token plain"> -e </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">${RED}</span><span class="token string variable" style="color:#36acaa">$1</span><span class="token string variable" style="color:#36acaa">${NOC}</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">elif</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$2</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"blue"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin class-name">echo</span><span class="token plain"> -e </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">${BLUE}</span><span class="token string variable" style="color:#36acaa">$1</span><span class="token string variable" style="color:#36acaa">${NOC}</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">elif</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$2</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"cyan"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin class-name">echo</span><span class="token plain"> -e </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">${CYAN}</span><span class="token string variable" style="color:#36acaa">$1</span><span class="token string variable" style="color:#36acaa">${NOC}</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">elif</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$2</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"yellow"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin class-name">echo</span><span class="token plain"> -e </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">${YELLOW}</span><span class="token string variable" style="color:#36acaa">$1</span><span class="token string variable" style="color:#36acaa">${NOC}</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># default green</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin class-name">echo</span><span class="token plain"> -e </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">${GREEN}</span><span class="token string variable" style="color:#36acaa">$1</span><span class="token string variable" style="color:#36acaa">${NOC}</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">fi</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># quick use color print text</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function-name function" style="color:#d73a49">red_text</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    colored_text </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$1</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"> red</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function-name function" style="color:#d73a49">blue_text</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    colored_text </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$1</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"> blue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function-name function" style="color:#d73a49">cyan_text</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    colored_text </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$1</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"> cyan</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function-name function" style="color:#d73a49">green_text</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    colored_text </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$1</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"> green</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function-name function" style="color:#d73a49">yellow_text</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    colored_text </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$1</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"> yellow</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="在其他脚本引入">在其他脚本引入<a href="#在其他脚本引入" class="hash-link" aria-label="在其他脚本引入的直接链接" title="在其他脚本引入的直接链接">​</a></h2><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># import common functions</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">source</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$(</span><span class="token string variable function" style="color:#d73a49">dirname</span><span class="token string variable" style="color:#36acaa"> $0</span><span class="token string variable" style="color:#36acaa">)</span><span class="token string" style="color:#e3116c">/scripts/common-func.sh"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">colored_text </span><span class="token string" style="color:#e3116c">"Will test components:"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># do something ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cyan_text </span><span class="token string" style="color:#e3116c">"</span><span class="token string entity" style="color:#36acaa">\n</span><span class="token string" style="color:#e3116c">Test Completed!"</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>shell</category>
            <category>bash</category>
            <category>linux</category>
            <category>cli-color</category>
        </item>
        <item>
            <title><![CDATA[Long Blog Post]]></title>
            <link>https://inhere.github.io/blog/long-blog-post</link>
            <guid>https://inhere.github.io/blog/long-blog-post</guid>
            <pubDate>Wed, 29 May 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[This is the summary of a very long blog post,]]></description>
            <content:encoded><![CDATA[<p>This is the summary of a very long blog post,</p><p>Use a <code>&lt;!--</code> <code>truncate</code> <code>--&gt;</code> comment to limit blog post size in the list view.</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>]]></content:encoded>
            <category>hello</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[First Blog Post]]></title>
            <link>https://inhere.github.io/blog/first-blog-post</link>
            <guid>https://inhere.github.io/blog/first-blog-post</guid>
            <pubDate>Tue, 28 May 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet]]></description>
            <content:encoded><![CDATA[<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>]]></content:encoded>
            <category>hola</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[给http.Handler包装中间件]]></title>
            <link>https://inhere.github.io/blog/wrap-middleware-for-http-handler-in-golang</link>
            <guid>https://inhere.github.io/blog/wrap-middleware-for-http-handler-in-golang</guid>
            <pubDate>Fri, 10 Aug 2018 22:00:00 GMT</pubDate>
            <description><![CDATA[Golang 下给 http.Handler 包装中间件]]></description>
            <content:encoded><![CDATA[<p>Golang 下给 http.Handler 包装中间件</p><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">package</span><span class="token plain"> main</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"net/http"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    handler </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">HandlerFunc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">w http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ResponseWriter</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> r </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Request</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        w</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Write</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token function" style="color:#d73a49">byte</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"-O-"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    mdl1 </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">h http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Handler</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Handler </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">HandlerFunc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">w http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ResponseWriter</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> r </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Request</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            w</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Write</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token function" style="color:#d73a49">byte</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"a"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            h</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ServeHTTP</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">w</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> r</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            w</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Write</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token function" style="color:#d73a49">byte</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"A"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    mdl2 </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">h http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Handler</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Handler </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">HandlerFunc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">w http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ResponseWriter</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> r </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Request</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            w</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Write</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token function" style="color:#d73a49">byte</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"b"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            h</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ServeHTTP</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">w</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> r</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            w</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Write</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token function" style="color:#d73a49">byte</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"B"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    wrapped </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">WrapHttpHandlers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">handler</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> mdl1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> mdl2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ListenAndServe</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">":8080"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> wrapped</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Output:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// ab-O-BA</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// WrapHttpHandlers apply some pre http handlers for the main handler.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">WrapHttpHandlers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">mainHandler http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Handler</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> middleware </span><span class="token operator" style="color:#393A34">...</span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">h http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Handler</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Handler</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Handler </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> wrapped http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Handler</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    max </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">len</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">middleware</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    lst </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">make</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> max</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">range</span><span class="token plain"> lst </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        current </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> max </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            wrapped </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> middleware</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">current</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">mainHandler</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            wrapped </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> middleware</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">current</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">wrapped</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> wrapped</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>golang</category>
            <category>http</category>
        </item>
        <item>
            <title><![CDATA[Go 捕获 os.Stdout 的输出]]></title>
            <link>https://inhere.github.io/blog/rewrite-os-stdout-in-golang</link>
            <guid>https://inhere.github.io/blog/rewrite-os-stdout-in-golang</guid>
            <pubDate>Wed, 08 Aug 2018 21:00:00 GMT</pubDate>
            <description><![CDATA[Go 里面有时候我们想捕获，或者丢弃通过fmt.Print系列方法打印到Stdout的数据]]></description>
            <content:encoded><![CDATA[<p>Go 里面有时候我们想捕获，或者丢弃通过<code>fmt.Print</code>系列方法打印到Stdout的数据</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="丢弃输出">丢弃输出<a href="#丢弃输出" class="hash-link" aria-label="丢弃输出的直接链接" title="丢弃输出的直接链接">​</a></h2><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">package</span><span class="token plain"> main</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"os"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"fmt"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> oldStdout </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">File</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">discardStdout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Hello, playground"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">restoreStdout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Hello, playground 2"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Output:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Hello, playground 2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// usage:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// discardStdout()</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// fmt.Println("Hello, playground")</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// restoreStdout()</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">discardStdout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// save old os.Stdout</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    oldStdout </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Stdout</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    stdout</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">OpenFile</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DevNull</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">O_WRONLY</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Stdout </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> stdout</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> err</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">restoreStdout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> oldStdout </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// close now</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Stdout</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Close</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// restore</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Stdout </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> oldStdout</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        oldStdout </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>运行示例，将只会输出： <code>Hello, playground 2</code></p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="捕获输出">捕获输出<a href="#捕获输出" class="hash-link" aria-label="捕获输出的直接链接" title="捕获输出的直接链接">​</a></h2><ul><li>来自 stackoverflow 的回答</li></ul><blockquote><p>from: <a href="https://stackoverflow.com/questions/10473800/in-go-how-do-i-capture-stdout-of-a-function-into-a-string" target="_blank" rel="noopener noreferrer">stackoverflow</a></p></blockquote><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">package</span><span class="token plain"> main</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"os"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"fmt"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"io/ioutil"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    rescueStdout </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Stdout</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    r</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> w</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Pipe</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Stdout </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> w</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Hello, playground"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// this gets captured</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    w</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Close</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Notice: must close before read</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    out</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> ioutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ReadAll</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">r</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Stdout </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> rescueStdout</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Captured: %s"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> out</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// prints: Captured: Hello, playground</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>稍加调整以方便重复使用：</p><div class="language-go codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-go codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">package</span><span class="token plain"> main</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"os"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"io/ioutil"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"fmt"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> oldStdout</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> newReader </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">File</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">rewriteStdout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Hello, playground"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    msg </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">restoreStdout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">msg</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// usage:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// rewriteStdout()</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// fmt.Println("Hello, playground")</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// msg := restoreStdout()</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">rewriteStdout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    oldStdout </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Stdout</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    r</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> w</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Pipe</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    newReader </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> r</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Stdout </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> w</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">restoreStdout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> newReader </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Notice: must close writer before read data</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// close now writer</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Stdout</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Close</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// restore</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Stdout </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> oldStdout</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    oldStdout </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// read data</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    out</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> ioutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ReadAll</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">newReader</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// close reader</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    newReader</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Close</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    newReader </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">out</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>注意： 要读取 <code>newReader</code> 里的数据，必须先关闭 writer. 不然会一直阻塞。</p></blockquote>]]></content:encoded>
            <category>golang</category>
        </item>
        <item>
            <title><![CDATA[php中正则表达式的模式修饰符]]></title>
            <link>https://inhere.github.io/blog/regex-pattern-mode-in-php</link>
            <guid>https://inhere.github.io/blog/regex-pattern-mode-in-php</guid>
            <pubDate>Wed, 03 Jan 2018 21:04:00 GMT</pubDate>
            <description><![CDATA[PHP正则表达式模式中可用的模式修饰符 — 模式修饰符]]></description>
            <content:encoded><![CDATA[<p>PHP正则表达式模式中可用的模式修饰符 — 模式修饰符</p><div class="language-php codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-php codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$pattern = '/\{\*.*?\*\}/sm'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                          |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                      模式修饰符</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>下面列出了当前可用的 PCRE 修饰符。括号中提到的名字是 PCRE 内部这些修饰符的名称。 模式修饰符中的空格，换行符会被忽略，其他字符会导致错误。</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="i-pcre_caseless">i (PCRE_CASELESS)<a href="#i-pcre_caseless" class="hash-link" aria-label="i (PCRE_CASELESS)的直接链接" title="i (PCRE_CASELESS)的直接链接">​</a></h2><p>如果设置了这个修饰符，模式中的字母会进行<strong>大小写不敏感匹配</strong>。</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="m-pcre_multiline">m (PCRE_MULTILINE)<a href="#m-pcre_multiline" class="hash-link" aria-label="m (PCRE_MULTILINE)的直接链接" title="m (PCRE_MULTILINE)的直接链接">​</a></h2><p>默认情况下，PCRE 认为目标字符串是由单行字符组成的(然而实际上它可能会包含多行)，
"行首"元字符 (<code>^</code>) 仅匹配字符串的开始位置， 而"行末"元字符 (<code>$</code>) 仅匹配字符串末尾， 或者最后的换行符(除非设置了 <code>D</code> 修饰符)。这个行为和 perl 相同。</p><p>当这个修饰符设置之后，“行首”和“行末”就会匹配目标字符串中 <strong>任意换行符之前或之后</strong>，另外， 还分别匹配目标字符串的 <strong>最开始和最末尾</strong>位置。</p><blockquote><p>这等同于 perl 的 <code>/m</code> 修饰符。如果目标字符串 中没有 <code>\n</code> 字符，或者模式中没有出现 <code>^</code> 或 <code>$</code>，设置这个修饰符不产生任何影响。</p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="s-pcre_dotall">s (PCRE_DOTALL)<a href="#s-pcre_dotall" class="hash-link" aria-label="s (PCRE_DOTALL)的直接链接" title="s (PCRE_DOTALL)的直接链接">​</a></h2><p>如果设置了这个修饰符，模式中的点号(<code>.</code>)元字符匹配所有字符，<strong>包含换行符</strong>。
如果没有这个修饰符，点号(<code>.</code>)不匹配换行符。</p><blockquote><p>这个修饰符等同于 perl 中的 <code>/s</code> 修饰符。 一个取反字符类比如 <code>[^a]</code> 总是匹配换行符，而不依赖于这个修饰符的设置。</p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="x-pcre_extended">x (PCRE_EXTENDED)<a href="#x-pcre_extended" class="hash-link" aria-label="x (PCRE_EXTENDED)的直接链接" title="x (PCRE_EXTENDED)的直接链接">​</a></h2><p>如果设置了这个修饰符，模式中的没有经过转义的或不在字符类中的空白数据字符总会被忽略，
并且位于一个未转义的字符类外部的 <code>#</code> 字符和下一个换行符之间的字符也被忽略。 </p><blockquote><p>这个修饰符 等同于 perl 中的 <code>/x</code> 修饰符，使被编译模式中可以包含注释。 </p></blockquote><p><strong>注意：</strong></p><blockquote><p>这仅用于数据字符。 空白字符 还是不能在模式的特殊字符序列中出现，比如序列 <code>(?(</code> 引入了一个条件子组 (译注: 这种语法定义的 特殊字符序列中如果出现空白字符会导致编译错误。 比如<code>(?(</code>就会导致错误)。</p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="e-preg_replace_eval">e (PREG_REPLACE_EVAL)<a href="#e-preg_replace_eval" class="hash-link" aria-label="e (PREG_REPLACE_EVAL)的直接链接" title="e (PREG_REPLACE_EVAL)的直接链接">​</a></h2><blockquote><p>Warning: This feature was DEPRECATED in PHP 5.5.0, and REMOVED as of PHP 7.0.0.</p></blockquote><p>如果设置了这个被弃用的修饰符， <code>preg_replace()</code> 在进行了对替换字符串的 后向引用替换之后, 将替换后的字符串作为php 代码评估执行(eval 函数方式)，并使用执行结果 作为实际参与替换的字符串。单引号、双引号、反斜线(<!-- -->)<!-- -->和 NULL 字符在 后向引用替换时会被用反斜线转义.</p><p>请确保 replacement 参数由合法 php 代码字符串组成，否则 php 将会 在<code>preg_replace()</code> 调用的行上产生一个解释错误。</p><p>不建议使用此修饰符，它很容易产生安全漏洞：</p><blockquote><p>Notice: 仅 <code>preg_replace()</code> 使用此修饰符，其他 PCRE 函数忽略此修饰符。</p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="a-pcre_anchored">A (PCRE_ANCHORED)<a href="#a-pcre_anchored" class="hash-link" aria-label="A (PCRE_ANCHORED)的直接链接" title="A (PCRE_ANCHORED)的直接链接">​</a></h2><p>如果设置了这个修饰符，模式被强制为"锚定"模式，也就是说约束匹配使其仅从 目标字符串的开始位置搜索。
这个效果同样可以使用适当的模式构造出来，并且 这也是 perl 种实现这种模式的唯一途径。</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="d-pcre_dollar_endonly">D (PCRE_DOLLAR_ENDONLY)<a href="#d-pcre_dollar_endonly" class="hash-link" aria-label="D (PCRE_DOLLAR_ENDONLY)的直接链接" title="D (PCRE_DOLLAR_ENDONLY)的直接链接">​</a></h2><p>如果这个修饰符被设置，模式中的元字符美元符号(<code>$</code>)仅仅匹配目标字符串的末尾。
如果这个修饰符 没有设置，当字符串以一个换行符结尾时， 美元符号还会匹配该换行符(但不会匹配之前的任何换行符)。
如果设置了修饰符 <code>m</code>，这个修饰符被忽略. </p><blockquote><p>在 perl 中没有与此修饰符等同的修饰符。</p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="s">S<a href="#s" class="hash-link" aria-label="S的直接链接" title="S的直接链接">​</a></h2><p>当一个模式需要多次使用的时候，为了得到匹配速度的提升，值得花费一些时间 对其进行一些额外的分析。
如果设置了这个修饰符，这个额外的分析就会执行。
当前， 这种对一个模式的分析仅仅适用于非锚定模式的匹配(即没有单独的固定开始字符)。</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="u-pcre_ungreedy">U (PCRE_UNGREEDY)<a href="#u-pcre_ungreedy" class="hash-link" aria-label="U (PCRE_UNGREEDY)的直接链接" title="U (PCRE_UNGREEDY)的直接链接">​</a></h2><p>这个修饰符逆转了量词的"贪婪"模式。 使量词默认为非贪婪的，通过量词后紧跟 <code>?</code> 的方式可以使其成为贪婪的。
这和 perl 是不兼容的。 它同样可以使用 <a href="http://php.net/manual/zh/regexp.reference.internal-options.php" target="_blank" rel="noopener noreferrer">模式内修饰符设置</a> <code>(?U)</code> 进行设置， 或者在量词后以问号标记其非贪婪(比如<code>.*?</code>)。</p><blockquote><p>Note: 在非贪婪模式，通常不能匹配超过 <code>pcre.backtrack_limit</code> 的字符。</p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="x-pcre_extra">X (PCRE_EXTRA)<a href="#x-pcre_extra" class="hash-link" aria-label="X (PCRE_EXTRA)的直接链接" title="X (PCRE_EXTRA)的直接链接">​</a></h2><p>这个修饰符打开了 PCRE 与 perl 不兼容的附件功能。模式中的任意反斜线后就 ingen 一个 没有特殊含义的字符都会导致一个错误，以此保留这些字符以保证向后兼容性。 默认情况下，在 perl 中，反斜线紧跟一个没有特殊含义的字符被认为是该字符的原文。 当前没有其他特性由这个修饰符控制。</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="j-pcre_info_jchanged">J (PCRE_INFO_JCHANGED)<a href="#j-pcre_info_jchanged" class="hash-link" aria-label="J (PCRE_INFO_JCHANGED)的直接链接" title="J (PCRE_INFO_JCHANGED)的直接链接">​</a></h2><p>内部选项设置(<code>?J</code>)修改本地的 PCRE_DUPNAMES 选项。允许子组重名， (译注：只能通过内部选项设置，外部的 <code>/J</code> 设置会产生错误。)</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="u-pcre_utf8">u (PCRE_UTF8)<a href="#u-pcre_utf8" class="hash-link" aria-label="u (PCRE_UTF8)的直接链接" title="u (PCRE_UTF8)的直接链接">​</a></h2><p>此修正符打开一个与 perl 不兼容的附加功能。 模式和目标字符串都被认为是 <code>utf-8</code> 的。
无效的目标字符串会导致 <code>preg_*</code> 函数什么都匹配不到； 无效的模式字符串会导致 E_WARNING 级别的错误。 </p><p>PHP 5.3.4 后，5字节和6字节的 UTF-8 字符序列被考虑为无效（resp. PCRE 7.3 2007-08-28）。 以前就被认为是无效的 UTF-8。</p><blockquote><p>From: <a href="http://php.net/manual/zh/reference.pcre.pattern.modifiers.php" target="_blank" rel="noopener noreferrer">http://php.net/manual/zh/reference.pcre.pattern.modifiers.php</a></p></blockquote>]]></content:encoded>
            <category>php</category>
            <category>regex</category>
        </item>
        <item>
            <title><![CDATA[php 实现一个 Telnet 工具类]]></title>
            <link>https://inhere.github.io/blog/implement-a-telnet-tool-in-php</link>
            <guid>https://inhere.github.io/blog/implement-a-telnet-tool-in-php</guid>
            <pubDate>Fri, 12 May 2017 09:47:00 GMT</pubDate>
            <description><![CDATA[使用php 里的 socket 相关函数，实现一个简单的 Telnet 工具类。]]></description>
            <content:encoded><![CDATA[<p>使用php 里的 socket 相关函数，实现一个简单的 Telnet 工具类。</p><ul><li>支持发送命令，获取结果</li><li>进入交互环境，类似于命令行工具telnet</li><li>持续的监控一个命令 ，类似于命令行的 watch</li></ul><p>可选择使用三种连接方式</p><ul><li>fsockopen - php 内置函数</li><li>socket - 需要 <code>sockets</code> 扩展</li><li>stream - 使用 <code>stream_*</code> 相关函数</li></ul><p>完整代码<a href="https://gist.github.com/inhere/f39d2d1641b2282e54ecefa84a5af8b4#file-telnet-php" target="_blank" rel="noopener noreferrer">源文件</a>：</p><div class="language-php codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-php codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">&lt;?php</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> * Class Telnet</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class Telnet</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    const DRIVER_SOCKET = 'socket';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    const DRIVER_STREAM = 'stream';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    const DRIVER_FSOCK = 'fsock';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @var array</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private static $availableDrivers = [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        'socket' =&gt; 'socket_create',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        'stream' =&gt; 'stream_socket_client',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        'fsock' =&gt; 'fsockopen',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @var resource</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private $sock;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @var string</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private $driver;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @var string</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private $host;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @var int</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private $port;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @var array</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private $config = [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        'driver' =&gt; '', // 'fsock' 'stream' 'socket'. if is empry, will auto select.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 设置阻塞或者非阻塞模式</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        'blocking' =&gt; true,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 10s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        'timeout' =&gt; 10,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // max watch time 180s, when use watch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        'max_watch_time' =&gt; 180,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * Telnet constructor.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param string $host</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param int $port</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param array $config</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public function __construct($host = '127.0.0.1', $port = 80, array $config = [])</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        $this-&gt;host = $host ?: '127.0.0.1';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        $this-&gt;port = $port ?: 80;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        $this-&gt;setConfig($config);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        $this-&gt;init();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        $this-&gt;connect($this-&gt;host, $this-&gt;port);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    protected function init()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        $driver = $this-&gt;config['driver'];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if (!$driver || !isset(self::$availableDrivers[$driver])) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            foreach (self::$availableDrivers as $name =&gt; $funcName) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if (function_exists($funcName)) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    $driver = $name;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    break;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        $this-&gt;driver = $driver;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param string $host</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param string $port</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    protected function connect($host, $port)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        try {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            $this-&gt;doConnect($host, $port, $this-&gt;driver);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } catch (\Exception $e) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            throw new \RuntimeException("Use {$this-&gt;driver} connect to the server {$host}:{$port} failed, ERROR({$e-&gt;getCode()}): {$e-&gt;getMessage()}", -500);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param string $host</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param string $port</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param string $driver</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    protected function doConnect($host, $port, $driver)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        $errNo = $errStr = null;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        switch ($driver) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            case self::DRIVER_SOCKET:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                $this-&gt;sock = socket_create(AF_INET, SOCK_STREAM, SOL_TCP);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if ($this-&gt;sock === false) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    throw new \RuntimeException('socket_create() failed. Reason: ' . socket_strerror(socket_last_error()), -400);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if (socket_connect($this-&gt;sock, $host, $port) === false) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    throw new \RuntimeException('socket_connect() failed. Reason: ' . socket_strerror(socket_last_error()), -450);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if ($this-&gt;config['blocking']) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    socket_set_block($this-&gt;sock);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    socket_set_nonblock($this-&gt;sock);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                socket_set_option($this-&gt;sock, SOL_SOCKET, SO_RCVTIMEO, [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    'sec' =&gt; $this-&gt;config['timeout'],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    'usec' =&gt; null</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ]);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                break;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            case self::DRIVER_STREAM:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                $this-&gt;sock = stream_socket_client(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    "tcp://{$host}:{$port}",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    $errNo,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    $errStr,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    $this-&gt;config['timeout'],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    STREAM_CLIENT_CONNECT | STREAM_CLIENT_PERSISTENT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                break;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            case self::DRIVER_FSOCK:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            default:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                $this-&gt;sock = fsockopen($host, $port, $errNo, $errStr, $this-&gt;config['timeout']);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                break;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if (!$this-&gt;sock) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            throw new \RuntimeException("Connect to the {$host}:{$port} failed, ERROR: $errNo - $errStr", -500);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if ($driver !== self::DRIVER_SOCKET) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            stream_set_blocking($this-&gt;sock, $this-&gt;config['blocking'] ? 1 : 0);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            stream_set_timeout($this-&gt;sock, $this-&gt;config['timeout'], 0);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * watch a command</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param  string  $command</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param  integer $interval (ms)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public function watch($command, $interval = 500)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        $count = 0;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        $activeTime = time();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        $maxTime = (int)$this-&gt;config['max_watch_time'];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        $intervalUs = $interval * 1000;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        echo "watch command: $command, refresh interval: {$interval}ms\n";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        while (true) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            $count++;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            $result = $this-&gt;command($command);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if (0 === strpos($result, 'ERR')) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                echo "$result\n";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                echo "error command: $command. ";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                break;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // clear screen before output</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            echo "\033[2JThe {$count} times watch {$command} result(refresh interval: {$interval}ms):\n{$result}\n";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if ($maxTime &gt; 0 &amp;&amp; time() - $activeTime &gt;= $maxTime) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                echo "watch time end. ";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                break;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            usleep($intervalUs);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        echo "Quit\n";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * into interactive environment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public function interactive()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        echo "welcome! please input command('quit' or 'exit' to Quit).\n ";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        while (true) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            echo "&gt; ";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if ($cmd = trim(fgets(\STDIN))) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                // echo "input command: $cmd\n";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if ($cmd === 'quit' || $cmd === 'exit') {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    echo "Quit. Bye\n";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    break;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                echo $this-&gt;command($cmd) . PHP_EOL;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            usleep(50000);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        $this-&gt;close();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * send command</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param  string $command</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param bool $readResult</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param int $readSize</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @return false|int|string</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public function command($command, $readResult = true, $readSize = 1024)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        $len = $this-&gt;write(trim($command) . "\r\n");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if ($readResult) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return $this-&gt;read($readSize);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return $len;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * write</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param  string $buffer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @return int|false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public function write($buffer)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if ($this-&gt;driver === self::DRIVER_SOCKET) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return socket_write($this-&gt;sock, $buffer, strlen($buffer));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // $buffer = str_replace(chr(255), chr(255) . chr(255), $buffer);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return fwrite($this-&gt;sock, $buffer);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * read</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param  integer $size</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @return string|false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public function read($size = 1024)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if ($this-&gt;driver === self::DRIVER_SOCKET) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return socket_read($this-&gt;sock, $size);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return fread($this-&gt;sock, $size);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public function close()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if ($this-&gt;sock) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if ($this-&gt;driver === self::DRIVER_SOCKET) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                socket_close($this-&gt;sock);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                fclose($this-&gt;sock);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            $this-&gt;sock = null;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @return resource</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public function getSock()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return $this-&gt;sock;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @return array</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public function getConfig()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return $this-&gt;config;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param array $config</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public function setConfig(array $config)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if ($config) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            $this-&gt;config = array_merge($this-&gt;config, $config);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public function __destruct()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        $this-&gt;close();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="简单使用">简单使用<a href="#简单使用" class="hash-link" aria-label="简单使用的直接链接" title="简单使用的直接链接">​</a></h2><p>编写一个简单的入口文件<code>telnet.php</code>：</p><div class="language-php codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-php codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">global $argv;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$opts = getopt('h', ['help']);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if (isset($opts['h']) || isset($opts['help'])) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    $script = array_shift($argv);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    $help = &lt;&lt;&lt;EOF</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Start a telnet client.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Usage:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  php $script HOST [PORT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Options:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -h,--help  Show this help information</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\n</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">EOF;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    exit($help);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$host = isset($argv[1]) ? $argv[1] : '127.0.0.1';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$port = isset($argv[2]) ? $argv[2] : 4730;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo "Connect to the server {$host}:{$port}\n";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$tt = new Telnet($host, $port);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// echo $tt-&gt;command('status');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// $tt-&gt;watch('status');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$tt-&gt;interactive(); // 进入交互环境，类似于命令行工具telnet</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>调用：</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">php telnet.php </span><span class="token number" style="color:#36acaa">127.0</span><span class="token plain">.0.1 </span><span class="token number" style="color:#36acaa">11211</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>php</category>
            <category>socket</category>
            <category>telnet</category>
        </item>
        <item>
            <title><![CDATA[PHP调试的强悍利器之PHPDBG]]></title>
            <link>https://inhere.github.io/blog/debug-tool-phpdbg-usage-in-php</link>
            <guid>https://inhere.github.io/blog/debug-tool-phpdbg-usage-in-php</guid>
            <pubDate>Wed, 12 Apr 2017 08:56:00 GMT</pubDate>
            <description><![CDATA[PHPDBG是一个PHP的SAPI模块，可以在不用修改代码和不影响性能的情况下控制PHP的运行环境。]]></description>
            <content:encoded><![CDATA[<p>PHPDBG是一个PHP的SAPI模块，可以在不用修改代码和不影响性能的情况下控制PHP的运行环境。</p><p>PHPDBG的目标是成为一个轻量级、强大、易用的PHP调试平台。在php5.6和之上版本将 <strong>内部集成</strong>。</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="主要功能">主要功能<a href="#主要功能" class="hash-link" aria-label="主要功能的直接链接" title="主要功能的直接链接">​</a></h2><ul><li>单步调试</li><li>灵活的下断点方式（类方法、函数、文件:行、内存地址、opcode）</li><li>可直接调用php的eval</li><li>可以查看当前执行的代码</li><li>用户空间API（userland/user space）</li><li>方便集成</li><li>支持指定php配置文件</li><li>JIT全局变量</li><li>readline支持（可选），终端操作更方便</li><li>远程debug，使用java GUI</li><li>操作简便（具体看help）</li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="安装">安装<a href="#安装" class="hash-link" aria-label="安装的直接链接" title="安装的直接链接">​</a></h2><p>为了使用phpdgb，你首先需要下载一个php的源码包。然后下载phpdgb的源码包，并放在php源码包的sapi目录下。最后，你就可以执行命令安装了。编译安装示例如下：
假设我们已经下载php的源码包，并放在了/home/php目录下。</p><div class="language-shell codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-shell codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">#cd /home/php/sapi</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#git clone https://github.com/krakjoe/phpdbg</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#cd ../</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#./buildconf --force</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#./config.nice</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#make -j8</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#make install-phpdbg</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>注意：</p><ol><li>如果你的php版本是php5.6或者更高的版本，phpdbg已经集成在php的代码包中，无需单独下载了。</li><li>编译参数中记得要加 ?enable-phpdbg。</li><li>编译时参数，?with-readline 可以选择性添加。如果不添加，phpdbg的history等功能无法使用。</li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="基本使用">基本使用<a href="#基本使用" class="hash-link" aria-label="基本使用的直接链接" title="基本使用的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="1参数介绍">1、参数介绍<a href="#1参数介绍" class="hash-link" aria-label="1、参数介绍的直接链接" title="1、参数介绍的直接链接">​</a></h3><p>phpdbg是php的一个sapi，它可以以命令行的方式调试php。常用参数如下：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">The following switches are implemented (just like cli SAPI):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-n ignore php ini</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-c search for php ini in path</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-z load zend extension</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-d define php ini entry</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">The following switches change the default behaviour of phpdbg:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-v disables quietness</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-s enabled stepping</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-e sets execution context</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-b boring ? disables use of colour on the console</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-I ignore .phpdbginit (default init file)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-i override .phpgdbinit location (implies -I)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-O set oplog output file</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-q do not print banner on startup</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-r jump straight to run</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-E enable step through eval()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Note: passing -rr will cause phpdbg to quit after execution, rather than returning to the console</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="2常用功能">2、常用功能<a href="#2常用功能" class="hash-link" aria-label="2、常用功能的直接链接" title="2、常用功能的直接链接">​</a></h3><p>之前我们介绍过gdb工具。其实phpdbg和gdb功能有些地方非常相似。如，可以设置断点，可以单步执行，等。只是他们调试的语言不一样，gdb侧重于调试c或者c++语言，而phpdbg侧重于调试php语言。下面我们将对phpdbg的一些常用调试功能做下介绍。要调试的代码如下：</p><p>文件test_phpdbg_inc.php源代码如下：</p><div class="language-php codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-php codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">&lt;?php </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">function phpdbg_inc_func()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  echo "phpdbg_inc_func \n"; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">} </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">?&gt;</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>文件test_phpdgb.php的源代码如下：</p><div class="language-php codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-php codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">&lt;?php </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  include(dirname(__FILE__)."/test_phpdbg_inc.php"); </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  class demo{   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public function __construct(){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       echo __METHOD__.":".__LINE__."\n";   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public function func($param){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       $param++;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       echo "method func $param\n";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public function __destruct(){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       echo __METHOD__.":".__LINE__."\n";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  } </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> function func(){   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   $param = "ali";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   $param = $param + "baba";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   echo "function func $param\n";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> $demo = new demo();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> $demo-&gt;func(1);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> func();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> phpdbg_inc_func();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">?&gt;</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="3启动phpdbg">3、启动phpdbg<a href="#3启动phpdbg" class="hash-link" aria-label="3、启动phpdbg的直接链接" title="3、启动phpdbg的直接链接">​</a></h3><p>phpdbg安装成功后，会在安装目录的bin目录下。进入bin目录，直接输入phpdbg即可。如下：</p><div class="language-sh codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-sh codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">#phpdbg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[Welcome to phpdbg, the interactive PHP debugger, v0.4.0]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">To get help using phpdbg type "help" and press enter</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[Please report bugs to &lt;http://github.com/krakjoe/phpdbg/issues&gt;]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">prompt&gt;</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>要想加载要调试的php脚本，只需要执行exec命令即可。如下：</p><div class="language-sh codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-sh codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">#phpdbg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">......</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">prompt&gt; exec ./test_phpdbg.php</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>当然我们也可以在启动phpdbg的时候，指定e参数。如下：</p><div class="language-sh codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-sh codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">#phpdbg -e ./test_phpdbg.php</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="4查看帮助信息">4、查看帮助信息<a href="#4查看帮助信息" class="hash-link" aria-label="4、查看帮助信息的直接链接" title="4、查看帮助信息的直接链接">​</a></h3><p>如果你之前使用过其他的调试工具，你会发现phpdbg和他们比较相似。但是，你使用初期，还是会经常需要获取帮助信息。通过help命令我们可以获取帮助信息。</p><div class="language-sh codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-sh codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">......</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">prompt&gt; help</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">phpdbg is a lightweight, powerful and easy to use debugging platform for PHP5.4+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">It supports the following commands:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Information</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> list   list PHP source</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">......</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="5设置断点">5、设置断点<a href="#5设置断点" class="hash-link" aria-label="5、设置断点的直接链接" title="5、设置断点的直接链接">​</a></h3><p>设置断点的命令和gdb一样。都是<code>break</code>，简写形式为<code>b</code>。不过具体的命令参数还是有所差异的。和gdb的断点命令相同之处，它们都可以“按文件名:行号” 或者 行号的方式设置断点。除此之外，phpdbg还提供了一些针对php特有的设置断点的方式。如，根据opline设置断点，根据opcode设置断点等。
众所周知，php代码最终是解析成opcode，然后由php内核一条条执行。一条php语句，可能会解析成多条opcode。如果可以按opcode设置断点，我们就可以更精确的跟踪程序执行过程。下面我们来看看phapdbg设置断点的具体示例。
按opline设置断点：
这里所说的opline，就是以方法入口作为起点，当前代码的行号。如 <code>test_phpdgb.php</code> 文件中，第18行的代码 <code>$param = $param + “baba”;</code> 的opline就是 2。</p><div class="language-sh codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-sh codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">......</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">prompt&gt; b func#2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">prompt&gt; r</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">demo::__construct:5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">method func 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[Breakpoint #0 resolved at func#2 (opline 0x7f5b230a2e38)]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[Breakpoint #0 resolved at func#2 (opline 0x7f5b230a2e38)]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[Breakpoint #0 resolved at func#2 (opline 0x7f5b230a2e38)]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[Breakpoint #0 in func()#2 at ./test_phpdbg.php:18, hits: 1]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;00018:   $param = $param + "baba";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> 00019:   echo "function func $param\n";;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> 00020: }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">......</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="6查看断点">6、查看断点<a href="#6查看断点" class="hash-link" aria-label="6、查看断点的直接链接" title="6、查看断点的直接链接">​</a></h3><p>和gdb一样，phpdbg也是使用info break命令查看断点。示例如下：</p><div class="language-sh codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-sh codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">....</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">prompt&gt; info break</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">------------------------------------------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">File Breakpoints:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#1   /home/hailong.xhl/test_phpdbg.php:10</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">------------------------------------------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Opline Breakpoints:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#0   7ff3219e1df0    (function breakpoint)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">------------------------------------------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Function opline Breakpoints:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#0   func opline 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">....</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>通过上面的显示，我们可以知道。info break的显示结果中会把断点的类型也给显示出来。<code>#</code> 后面的数字是断点号。我们可以根据断点号删除断点。</p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="7删除断点">7、删除断点<a href="#7删除断点" class="hash-link" aria-label="7、删除断点的直接链接" title="7、删除断点的直接链接">​</a></h3><p>和gdb命令不一样。phpdbg的删除断点不是delete命令，而是<code>break del</code> 命令。示例如下：</p><div class="language-sh codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-sh codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">......</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">prompt&gt; break del 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[Deleted breakpoint #1]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">prompt&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">......</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>break del 后面的数字1就是断点号。</p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="8查看代码">8、查看代码<a href="#8查看代码" class="hash-link" aria-label="8、查看代码的直接链接" title="8、查看代码的直接链接">​</a></h3><p>phpdbg查看代码的命令也是<code>list</code>。但是和gdb相比，使用的方式更多样一些。
显示指定函数的代码：</p><div class="language-sh codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-sh codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">......</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">prompt&gt; l f func</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> 00017:   $param = "ali";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> 00018:   $param = $param + "baba";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> 00019:   echo "function func $param\n";;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> 00020: }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> 00021:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">prompt&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">......</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>单步执行:</p><p>phpdbg的单步执行只有一个命令 <code>step</code>。和gdb的step命令差不多。都是一行一行的执行代码。</p><blockquote><p>注意，phpdbg是没有next命令的。</p></blockquote><div class="language-sh codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-sh codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">....</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">prompt&gt; s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[Breakpoint #0 resolved at func#2 (opline 0x152ba40)]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[L19      0x152ba70 ZEND_ADD_STRING     C2   @0  ./test_phpdbg.php]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;00019:   echo "function func $param\n";;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> 00020: }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> 00021:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">....</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>继续执行:</p><p>和gdb一样，phpdbg的继续执行命令也是<code>continue</code>，简写形式为<code>c</code>。</p><p>执行php代码</p><p>这个是phpdbg的一个特色。可以在调试的过程中使用ev命令执行任意的php代码。如：</p><div class="language-sh codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-sh codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">......</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">prompt&gt; ev $var = "val";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">val</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">prompt&gt; ev var_dump($var);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">string(3) "val"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">......</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>可以通过这种方式，在调试过程中动态的修改变量值，查看执行效果。
以上就是本文的全部内容，轻松玩转调试利器PHPDBG，希望大家喜欢。</p><blockquote><p>转自 <a href="http://www.linuxsight.com/blog/59466" target="_blank" rel="noopener noreferrer">linux视野</a></p></blockquote>]]></content:encoded>
            <category>php</category>
            <category>phpdbg</category>
        </item>
        <item>
            <title><![CDATA[Linux的chattr与lsattr命令使用]]></title>
            <link>https://inhere.github.io/blog/chattr-lsattr-command-in-linux</link>
            <guid>https://inhere.github.io/blog/chattr-lsattr-command-in-linux</guid>
            <pubDate>Tue, 08 Nov 2016 15:13:00 GMT</pubDate>
            <description><![CDATA[有时候你发现 用root权限都不能修改某个文件，大部分原因是曾经用chattr命令锁定该文件了。]]></description>
            <content:encoded><![CDATA[<p>有时候你发现 <strong>用root权限都不能修改某个文件</strong>，大部分原因是曾经用chattr命令锁定该文件了。</p><p><code>chattr</code>命令的作用很大，其中一些功能是由Linux内核版本来支持的，不过现在生产绝大部分跑的linux系统都是2.6以上内核了。</p><p>通过<code>chattr</code>命令修改属性能够提高系统的安全性，但是它并不适合所有的目录。</p><blockquote><p><code>chattr</code>命令不能保护<code>/</code>、<code>/dev</code>、<code>/tmp</code>、<code>/var</code>目录。<code>lsattr</code>命令是显示<code>chattr</code>命令设置的文件属性。</p></blockquote><p>这两个命令是用来查看和改变文件、目录属性的，与 <code>chmod</code> 这个命令相比，<code>chmod</code>只是改变文件的读写、执行权限，更底层的属性控制是由 <code>chattr</code> 来改变的。</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="chattr命令的用法">chattr命令的用法<a href="#chattr命令的用法" class="hash-link" aria-label="chattr命令的用法的直接链接" title="chattr命令的用法的直接链接">​</a></h2><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">chattr </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> -RVf </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> -v version </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> mode </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> files…</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>最关键的是在<!-- -->[mode]<!-- -->部分，<!-- -->[mode]<!-- -->部分是由<code>+-=和[ASacDdIijsTtu]</code>这些字符组合的，这部分是用来控制文件的
属性。</p><ul><li><code>+</code> 在原有参数设定基础上，追加参数。</li><li><code>-</code> 在原有参数设定基础上，移除参数。</li><li><code>=</code> 更新为指定参数设定。</li><li><code>A</code> 文件或目录的 atime (access time)不可被修改(modified), 可以有效预防例如手提电脑磁盘I/O错误的发生。</li><li><code>S</code> 硬盘I/O同步选项，功能类似sync。</li><li><code>a</code> 即 <code>append</code>，设定该参数后，只能向文件中添加数据，而不能删除，多用于服务器日志文件安全，只有root才能设定这个属性。</li><li><code>c</code> 即 <code>compresse</code>，设定文件是否经压缩后再存储。读取时需要经过自动解压操作。</li><li><code>d</code> 即 <code>no dump</code>，设定文件不能成为dump程序的备份目标。</li><li><code>i</code> 设定文件不能被删除、改名、设定链接关系，同时不能写入或新增内容。<code>i </code>参数对于文件 系统的安全设置有很大帮助。</li><li><code>j</code> 即 <code>journal</code>，设定此参数使得当通过mount参数：<code>data=ordered</code> 或者 <code>data=writeback</code> 挂 载的文件系统，文件在写入时会先被记录(在journal中)。如果filesystem被设定参数为 data=journal，则该参数自动失效。</li><li><code>s</code> 保密性地删除文件或目录，即硬盘空间被全部收回。</li><li><code>u</code> 与 <code>s</code> 相反，当设定为<code>u</code>时，数据内容其实还存在磁盘中，可以用于<code>undeletion</code>。</li></ul><p>各参数选项中常用到的是<code>a</code>和<code>i</code>。a选项强制只可添加不可删除，多用于日志系统的安全设定。而i是更为严格的安全设定，只有<code>superuser (root)</code> 或具有<code>CAP_LINUX_IMMUTABLE</code>处理能力（标识）的进程能够施加该选项。</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="应用举例">应用举例<a href="#应用举例" class="hash-link" aria-label="应用举例的直接链接" title="应用举例的直接链接">​</a></h2><p>1、用chattr命令防止系统中某个关键文件被修改：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">chattr +i /etc/resolv.conf</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>然后用<code>mv /etc/resolv.conf</code>等命令操作于该文件，都是得到<code>Operation not permitted</code> 的结果。vim编辑该文件时会提示<code>W10: Warning: Changing a readonly file</code>错误。</p><p>要想修改此文件就要把i属性去掉： </p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">chattr -i /etc/resolv.conf</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">lsattr /etc/resolv.conf</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>会显示如下属性</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">----i-------- /etc/resolv.conf</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>2、让某个文件只能往里面追加数据，但不能删除，适用于各种日志文件：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">chattr +a /var/log/messages</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>转自： <a href="http://www.ha97.com/5172.html" target="_blank" rel="noopener noreferrer">ha97.com</a></p></blockquote>]]></content:encoded>
            <category>linux</category>
            <category>chattr</category>
            <category>lsattr</category>
            <category>tools</category>
        </item>
        <item>
            <title><![CDATA[Shell脚本使用]]></title>
            <link>https://inhere.github.io/blog/shell-script-learn-usage</link>
            <guid>https://inhere.github.io/blog/shell-script-learn-usage</guid>
            <pubDate>Sat, 24 Sep 2016 11:28:00 GMT</pubDate>
            <description><![CDATA[Shell脚本的一些使用记录]]></description>
            <content:encoded><![CDATA[<p>Shell脚本的一些使用记录</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="echo显示带颜色">echo显示带颜色<a href="#echo显示带颜色" class="hash-link" aria-label="echo显示带颜色的直接链接" title="echo显示带颜色的直接链接">​</a></h2><p>echo显示带颜色，需要使用参数-e
格式如下:</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token builtin class-name">echo</span><span class="token plain"> -e </span><span class="token string" style="color:#e3116c">"</span><span class="token string entity" style="color:#36acaa">\033</span><span class="token string" style="color:#e3116c">[字背景颜色;文字颜色m字符串</span><span class="token string entity" style="color:#36acaa">\033</span><span class="token string" style="color:#e3116c">[0m"</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>例如: </p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token builtin class-name">echo</span><span class="token plain"> -e </span><span class="token string" style="color:#e3116c">"</span><span class="token string entity" style="color:#36acaa">\033</span><span class="token string" style="color:#e3116c">[41;37m TonyZhang </span><span class="token string entity" style="color:#36acaa">\033</span><span class="token string" style="color:#e3116c">[0m"</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>其中41的位置代表底色, 37的位置是代表字的颜色</p><p>注：</p><ol><li>字背景颜色和文字颜色之间是英文的 <code>;</code></li><li>文字颜色后面有个m</li><li>字符串前后可以没有空格，如果有的话，输出也是同样有空格</li></ol><p>下面看几个例子：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo -e "\033[30m 黑色字 \033[0m"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo -e "\033[31m 红色字 \033[0m"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo -e "\033[32m 绿色字 \033[0m"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo -e "\033[33m 黄色字 \033[0m"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo -e "\033[34m 蓝色字 \033[0m"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo -e "\033[35m 紫色字 \033[0m"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo -e "\033[36m 天蓝字 \033[0m"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo -e "\033[37m 白色字 \033[0m"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo -e "\033[40;37m 黑底白字 \033[0m"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo -e "\033[41;37m 红底白字 \033[0m"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo -e "\033[42;37m 绿底白字 \033[0m"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo -e "\033[43;37m 黄底白字 \033[0m"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo -e "\033[44;37m 蓝底白字 \033[0m"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo -e "\033[45;37m 紫底白字 \033[0m"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo -e "\033[46;37m 天蓝底白字 \033[0m"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo -e "\033[47;30m 白底黑字 \033[0m"</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>控制选项说明 ：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">\33[0m 关闭所有属性 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\33[1m 设置高亮度 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\33[4m 下划线 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\33[5m 闪烁 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\33[7m 反显 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\33[8m 消隐 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\33[30m -- \33[37m 设置前景色 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\33[40m -- \33[47m 设置背景色 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\33[nA 光标上移n行 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\33[nB 光标下移n行 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\33[nC 光标右移n行 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\33[nD 光标左移n行 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\33[y;xH设置光标位置 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\33[2J 清屏 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\33[K 清除从光标到行尾的内容 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\33[s 保存光标位置 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\33[u 恢复光标位置 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\33[?25l 隐藏光标 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\33[?25h 显示光标 </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>转自：<a href="http://onlyzq.blog.51cto.com/1228/546459" target="_blank" rel="noopener noreferrer">onlyzq 的BLOG - blog.51cto.com</a></p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="shell脚本调试方法">Shell脚本调试方法<a href="#shell脚本调试方法" class="hash-link" aria-label="Shell脚本调试方法的直接链接" title="Shell脚本调试方法的直接链接">​</a></h2><p>Shell提供了一些用于调试脚本的选项：</p><ul><li><code>-n</code>，读一遍脚本中的命令但不执行，用于检查脚本中的语法错误。</li><li><code>-v</code>，一边执行脚本，一边将执行过的脚本命令打印到标准错误输出。</li><li><code>-x</code>，提供跟踪执行信息，将执行的每一条命令和结果依次打印出来。</li></ul><div class="language-shell codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-shell codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">sh</span><span class="token plain">  -n function.sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">sh</span><span class="token plain">  -v function.sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">sh</span><span class="token plain">  -x function.sh</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>shell</category>
            <category>script</category>
        </item>
        <item>
            <title><![CDATA[linux 命令 sed 详解]]></title>
            <link>https://inhere.github.io/blog/sec-command-usage-in-linux</link>
            <guid>https://inhere.github.io/blog/sec-command-usage-in-linux</guid>
            <pubDate>Sat, 17 Sep 2016 11:28:00 GMT</pubDate>
            <description><![CDATA[sed是stream editor的简称，也就是流编辑器。]]></description>
            <content:encoded><![CDATA[<p>sed是stream editor的简称，也就是流编辑器。
它一次处理一行内容，处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），
接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。
接着处理下一行，这样不断重复，直到文件末尾。</p><blockquote><p>TIP: 文件内容并没有改变，除非你使用重定向存储输出或者加了选项 <code>-i</code></p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="使用语法">使用语法<a href="#使用语法" class="hash-link" aria-label="使用语法的直接链接" title="使用语法的直接链接">​</a></h2><p>sed命令的使用规则是这样的：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">sed [option] 'command' input_file</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>其中option是可选的，常用的option有如下几种：</p><ul><li><code>-n</code> 使用安静(silent)模式。在一般sed的用法中，所有来自stdin的内容一般都会被列出到屏幕上。但如果加上<code>-n</code>参数后，则只有经过sed特殊处理的那一行(或者动作)才会被列出来；</li><li><code>-e</code> 直接在指令列模式上进行 sed 的动作编辑；</li><li><code>-f</code> 直接将 sed 的动作写在一个文件内， <code>-f filename</code> 则可以执行filename内的sed命令；</li><li><code>-r</code> 让sed命令支持扩展的正则表达式(默认是基础正则表达式)；</li><li><code>-i</code> 直接修改读取的文件内容，而不是由屏幕输出。</li></ul><p>常用的命令有以下几种：</p><ul><li><code>a</code>  append即追加字符串， a 的后面跟上字符串s(多行字符串可以用<code>\n</code>分隔)，则会在当前选择的行的后面都加上字符串s；</li><li><code>c</code>  取代/替换字符串，c 后面跟上字符串s(多行字符串可以用<code>\n</code>分隔)，则会将当前选中的行替换成字符串s；</li><li><code>d</code>  delete即删除，该命令会将当前选中的行删除；</li><li><code>i</code>  insert即插入字符串，i 后面跟上字符串s(多行字符串可以用<code>\n</code>分隔)，则会在当前选中的行的前面都插入字符串s；</li><li><code>p</code> print即打印，该命令会打印当前选择的行到屏幕上；</li><li><code>s</code> 替换，通常s命令的用法是这样的：<code>1，2s/old/new/g</code>，将old字符串替换成new字符串</li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="命令示例">命令示例<a href="#命令示例" class="hash-link" aria-label="命令示例的直接链接" title="命令示例的直接链接">​</a></h2><p>假设有一个本地文件test.txt，文件内容如下：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">[user@computer ~]$ cat test.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is first line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is second line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">happy everyday</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>本节将使用该文件详细演示每一个命令的用法。</p><blockquote><p>文件内容并没有改变，除非你使用重定向存储输出或者加了选项 <code>-i</code></p></blockquote><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="a-命令">a 命令<a href="#a-命令" class="hash-link" aria-label="a 命令的直接链接" title="a 命令的直接链接">​</a></h3><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">[user@computer ~]$ sed '1a \add one' test.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is first line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">add one</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is second line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">happy everyday</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>本例的作用是在第一行之后增加字符串”add one”，从输出可以看到具体效果。
本例命令部分说明：</p><ul><li>1表示第一行，同样的第二行写成2，第一行到第三行写成<code>1,3</code>，</li><li>用<code>$</code>表示最后一行，比如<code>2,$</code>表示第二行到最后一行中间所有的行(包含第二行和最后一行)</li></ul><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">[user@computer ~]$ sed '1,$a \add one' test.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is first line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">add one</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is second line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">add one</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">happy everyday</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">add one</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">add one</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>本例表示在第一行和最后一行所有的行后面都加上”add one”字符串，从输出可以看到效果。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">[user@computer ~]$ sed '/first/a \add one' test.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is first line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">add one</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is second line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">happy everyday</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>本例表示在包含”first”字符串的行的后面加上字符串”add one”，从输出可以看到第一行包含first，所以第一行之后增加了”add one”</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">[user@computer ~]$ sed '/^ha.*day$/a \add one' test.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is first line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is second line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">happy everyday</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">add one</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>本例使用正则表达式匹配行</p><ul><li><code>^ha.*day$</code>表示以ha开头，以day结尾的行，则可以匹配到文件的”happy everyday”这样，所以在该行后面增加了”add one”字符串。</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="i-命令">i 命令<a href="#i-命令" class="hash-link" aria-label="i 命令的直接链接" title="i 命令的直接链接">​</a></h3><p>i 命令使用方法和a命令一样的，只不过是在匹配的 <strong>行的前面</strong> 插入字符串，所以直接将上面a命令的示例的a替换成i即可，在此就不啰嗦了。</p><h4 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="mac-下的问题">mac 下的问题<a href="#mac-下的问题" class="hash-link" aria-label="mac 下的问题的直接链接" title="mac 下的问题的直接链接">​</a></h4><p>mac 执行<code>sed -i</code>指令时，总是出现 <code>extra characters at the end of command</code> 错误提示。</p><p>unix与linux在执行sed指令是，是有些区别，改成如下就正确：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain"> sed -i "" "s/192.168.0.2/192.168.0.3/g" *.rptdesign</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>就是在<code>-i</code>指令后面多加一个<code>""</code>空格即可。</p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="c-命令">c 命令<a href="#c-命令" class="hash-link" aria-label="c 命令的直接链接" title="c 命令的直接链接">​</a></h3><p>将最后一行替换成字符串”add one”，从输出可以看到效果。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">[user@computer ~]$ sed '$c \add one' test.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is first line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is second line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is third line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is fourth line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is     fifth line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">happy everyday</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">add one</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>将第四行到最后一行的内容替换成字符串”add one”。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">[user@computer ~]$ sed '4,$c \add one' test.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is first line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is second line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is third line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">add one</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>将以ha开头，以day结尾的行替换成”replace line”。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">[user@computer ~]$ sed '/^ha.*day$/c \replace line' test.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is first line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is second line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">replace line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="d-命令">d 命令<a href="#d-命令" class="hash-link" aria-label="d 命令的直接链接" title="d 命令的直接链接">​</a></h3><p>本例删除以ha开头，以day结尾的行。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">[user@computer ~]$ sed '/^ha.*day$/d' test.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is first line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is second line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>本例删除第四行到最后一行中的内容。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">[user@computer ~]$ sed '4,$d' test.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is first line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is second line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is third line</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="p-命令">p 命令<a href="#p-命令" class="hash-link" aria-label="p 命令的直接链接" title="p 命令的直接链接">​</a></h3><p>在屏幕上打印第四行到最后一行的内容，p命令一般和-n选项一起使用。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">[user@computer ~]$ sed -n '4,$p' test.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is fourth line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is fifth line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">happy everyday</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>本例打印以ha开始，以day结尾的行。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">[user@computer ~]$ sed -n '/^ha.*day$/p' test.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">happy everyday</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="s-命令">s 命令<a href="#s-命令" class="hash-link" aria-label="s 命令的直接链接" title="s 命令的直接链接">​</a></h3><p>实际运用中s命令式最常使用到的。
示例：</p><p>将文件中的所有<code>line</code>替换成<code>text</code>。</p><ul><li>最后的g是global的意思，也就是全局替换，如果不加g，则只会替换本行的第一个line。</li></ul><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">[user@computer ~]$ sed 's/line/text/g' test.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is first text</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is second text</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">happy everyday</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>替换匹配行中的某个字符串</p><p>首先匹配以ha开始，以day结尾的行，本例中匹配到的行是”happy everyday”这样，然后再将该行中的happy替换成very happy。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">[user@computer ~]$ sed '/^ha.*day$/s/happy/very happy/g' test.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is first line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is second line</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">very happy everyday</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>引用替换</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">[user@computer ~]$ sed 's/\(.*\)line$/\1/g' test.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is first</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this is second</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">happy everyday</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这个例子有点复杂，先分解一下。</p><p>首先s命令的模式是<code>s/old/new/g</code>这样的，所以本例的old部分即<code>\(.*\)line$</code>,sed命令中使用<code>\(\)</code>包裹的内容表示正则表达式的第n部分，
序号从1开始计算，本例中只有一个<code>\(\)</code>所以<code>\(.*\)</code>表示正则表达式的第一部分，
这部分匹配任意字符串，所以<code>\(.*\)line$</code>匹配的就是以line结尾的任何行。</p><p>然后将匹配到的行替换成正则表达式的第一部分（本例中相当于删除line部分），使用<code>\1</code>表示匹配到的第一部分，
同样<code>\2</code>表示第二部分，<code>\3</code>表示第三部分，可以依次这样引用。比如下面的例子：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">[user@computer ~]$ sed 's/\(.*\)is\(.*\)line/\1\2/g' test.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this  first</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">this  second</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">happy everyday</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>正则表达式中is两边的部分可以用<code>\1</code>和<code>\2</code>表示，该例子的作用其实就是删除中间部分的is。</p><blockquote><p>转载整理自：<a href="http://qifuguang.me/2015/09/21/sed%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/" target="_blank" rel="noopener noreferrer">sed命令详解</a></p></blockquote>]]></content:encoded>
            <category>linux</category>
            <category>sed</category>
            <category>tools</category>
        </item>
        <item>
            <title><![CDATA[Mysql的锁机制解读]]></title>
            <link>https://inhere.github.io/blog/lock-intro-in-mysql</link>
            <guid>https://inhere.github.io/blog/lock-intro-in-mysql</guid>
            <pubDate>Wed, 07 Sep 2016 21:17:00 GMT</pubDate>
            <description><![CDATA[Mysql的锁机制解读说明]]></description>
            <content:encoded><![CDATA[<p>Mysql的锁机制解读说明</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="基本概念">基本概念<a href="#基本概念" class="hash-link" aria-label="基本概念的直接链接" title="基本概念的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="共享锁">共享锁<a href="#共享锁" class="hash-link" aria-label="共享锁的直接链接" title="共享锁的直接链接">​</a></h3><p>共享锁的代号是<code>S</code>，是Share的缩写，共享锁的锁粒度是行或者元组（多个行）。一个事务获取了共享锁之后，可以对锁定范围内的数据<strong>执行读操作</strong>。 </p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="排它锁">排它锁<a href="#排它锁" class="hash-link" aria-label="排它锁的直接链接" title="排它锁的直接链接">​</a></h3><p>排它锁的代号是<code>X</code>，是eXclusive的缩写，排它锁的粒度与共享锁相同，也是行或者元组。一个事务获取了排它锁之后，可以对锁定范围内的数据<strong>执行写操作</strong>。</p><p>例：假设有两个事务t1和t2</p><p>如果事务t1获取了一个元组的共享锁，事务t2还可以立即获取这个元组的共享锁，但不能立即获取这个元组的排它锁（必须等到t1释放共享锁之后）。
如果事务t1获取了一个元组的排它锁，事务t2不能立即获取这个元组的排共享锁，也不能立即获取这个元组的排它锁（必须等到t1释放排它锁之后）。</p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="意向锁">意向锁<a href="#意向锁" class="hash-link" aria-label="意向锁的直接链接" title="意向锁的直接链接">​</a></h3><p>意向锁是<strong>一种表锁，锁定的粒度是整张表</strong>，分为<strong>意向共享锁(IS)</strong>和<strong>意向排它锁(IX)</strong>两类。</p><p>意向共享锁表示一个事务有意对数据上共享锁或者排它锁。“有意”这两个字表达的意思比较微妙，说的明白点就是指事务想干这个事但还没真去干。
举例说明下意向共享锁，比如一个事务t执行了这样一个语句：<code>select * from table lock in share model</code> ，如果这个语句执行成功，就对表table上了一个意向共享锁。
<code>lock in share model</code> 就是说事务t1在接下来要执行的语句中要获取S锁。如果t1的<code>select * from table lock in share model</code>执行成功，那么接下来t1应该可以畅通无阻的去执行只需要共享锁的语句了。</p><p>意向排它锁的含义同理可知，上例中要获取意向排它锁，可以使用<code>select * from table for update</code> 。</p><p><code>lock in share model</code> 和 <code>for update</code>这两个东西在数据率理论中还有个学名叫<strong>悲观锁</strong>，与悲观锁相对的当然还有乐观锁。大家可以看到各种锁都是成双成对出现的。关于悲观锁和乐观锁的问题暂且不表。 </p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="锁的互斥与兼容关系">锁的互斥与兼容关系<a href="#锁的互斥与兼容关系" class="hash-link" aria-label="锁的互斥与兼容关系的直接链接" title="锁的互斥与兼容关系的直接链接">​</a></h3><p>锁和锁之间的关系，要么是相容的，要么是互斥的。
锁a和锁b相容是指：操作同样一组数据时，如果事务t1获取了锁a,另一个事务t2还可以获取锁b；
锁a和锁b互斥是指：操作同样一组数据时，如果事务t1获取了锁a，另一个事务t2在t1释放锁a之前无法获取锁b。</p><p>上面提到的共享锁、排它锁、意向共享锁、意向排它锁相互之前都是有兼容/互斥关系的，可以用一个兼容性矩阵表示(y表示兼容，n表示不兼容):</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">    X    S    IX    IS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">X  n     n    n     n</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">S  n     y    n     y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">IX n     n    y     y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">IS n     y    y     y  </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>兼容性矩阵为什么是这个样子的？</p><p>X和S的相互关系在上文中解释过了，IX和IS的相互关系全部是兼容，这也很好理解，因为它们都只是“有意”，还处于YY阶段，没有真干，所以是可以兼容的；
剩下的就是X和IX，X和IS, S和IX， S和IS的关系了，我们可以由X和S的关系推导出这四组关系。</p><p>简单的说：X和IX的=X和X的关系。为什么呢？因为事务在获取IX锁后，接下来就有权利获取X锁。如果X和IX兼容的话，就会出现两个事务都获取了X锁的情况，这与我们已知的X与X互斥是矛盾的，所以X与IX只能是互斥关系。</p><p>其余的三组关系同理，可用同样的方式推导出来。</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="mysql有三种锁的级别页级表级行级">MySQL有三种锁的级别：页级、表级、行级。<a href="#mysql有三种锁的级别页级表级行级" class="hash-link" aria-label="MySQL有三种锁的级别：页级、表级、行级。的直接链接" title="MySQL有三种锁的级别：页级、表级、行级。的直接链接">​</a></h2><p>MyISAM和MEMORY存储引擎采用的是<strong>表级锁（table-level locking）</strong>；
BDB存储引擎采用的是<strong>页面锁（page-level locking）</strong>，但也支持表级锁；
InnoDB存储引擎既支持<strong>行级锁（row-level locking）</strong>，也支持表级锁，但默认情况下是采用行级锁。</p><p>MySQL这3种锁的特性可大致归纳如下：</p><ul><li>表级锁：开销小，加锁快；不会出现死锁；锁定粒度大，发生锁冲突的概率最高,并发度最低。</li><li>行级锁：开销大，加锁慢；会出现死锁；锁定粒度最小，发生锁冲突的概率最低,并发度也最高。</li><li>页面锁：开销和加锁时间界于表锁和行锁之间；会出现死锁；锁定粒度界于表锁和行锁之间，并发度一般。</li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="myisam表锁">MyISAM表锁<a href="#myisam表锁" class="hash-link" aria-label="MyISAM表锁的直接链接" title="MyISAM表锁的直接链接">​</a></h2><p>MyISAM存储引擎只支持表锁，是现在用得最多的存储引擎。</p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="1查询表级锁争用情况">1、查询表级锁争用情况<a href="#1查询表级锁争用情况" class="hash-link" aria-label="1、查询表级锁争用情况的直接链接" title="1、查询表级锁争用情况的直接链接">​</a></h3><p>可以通过检查table_locks_waited和table_locks_immediate状态变量来分析系统上的表锁定争夺：
mysql&gt; show status like ‘table%’;
+———————–+———-+
| Variable_name | Value |
+———————–+———-+
| Table_locks_immediate | 76939364 |
| Table_locks_waited | 305089 |
+———————–+———-+
2 rows in set (0.00 sec)Table_locks_waited的值比较高，说明存在着较严重的表级锁争用情况。</p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="2mysql表级锁的锁模式">2、MySQL表级锁的锁模式<a href="#2mysql表级锁的锁模式" class="hash-link" aria-label="2、MySQL表级锁的锁模式的直接链接" title="2、MySQL表级锁的锁模式的直接链接">​</a></h3><p>MySQL的表级锁有两种模式：<strong>表共享读锁（Table Read Lock）</strong>和 <strong>表独占写锁（Table Write Lock）</strong>。</p><blockquote><p>MyISAM在执行查询语句（SELECT）前，会自动给涉及的所有表加读锁，在执行更新操作（UPDATE、DELETE、INSERT等）前，会自动给涉及的表加写锁。</p></blockquote><p>所以对MyISAM表进行操作，会有以下情况：</p><p>a. 对MyISAM表的读操作（加读锁），不会阻塞其他进程对同一表的读请求，但会阻塞对同一表的写请求。只有当读锁释放后，才会执行其它进程的写操作。
b. 对MyISAM表的写操作（加写锁），会阻塞其他进程对同一表的读和写操作，只有当写锁释放后，才会执行其它进程的读写操作。</p><p>下面通过例子来进行验证以上观点。数据表gz_phone里有二百多万数据，字段id,phone,ua,day。现在同时用多个客户端同时对该表进行操作分析。</p><p>a、当我用客户端1进行一个比较长时间的读操作时，分别用客户端2进行读和写操作：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">client1:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt;select count(*) from gz_phone group by ua;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">75508 rows in set (3 min 15.87 sec) client2:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">select id,phone from gz_phone limit 1000,10;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+——+——-+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| id | phone |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+——+——-+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| 1001 | 2222 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| 1002 | 2222 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| 1003 | 2222 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| 1004 | 2222 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| 1005 | 2222 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| 1006 | 2222 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| 1007 | 2222 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| 1008 | 2222 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| 1009 | 2222 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| 1010 | 2222 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+——+——-+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">10 rows in set (0.01 sec)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; update gz_phone set phone=’11111111111′where id=1001;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Query OK, 0 rows affected (2 min 57.88 sec)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Rows matched: 1 Changed: 0 Warnings: 0</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>说明当数据表有一个读锁时，其它进程的查询操作可以马上执行，但更新操作需等待读锁释放后才会执行。</p><p>b、当用客户端1进行一个较长时间的更新操作时，用客户端2,3分别进行读写操作：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">client1:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; update gz_phone set phone=’11111111111′;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Query OK, 1671823 rows affected (3 min 4.03 sec)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Rows matched: 2212070 Changed: 1671823 Warnings: 0 client2:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; select id,phone,ua,day from gz_phone limit 10;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+—-+——-+——————-+————+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| id | phone | ua | day |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+—-+——-+——————-+————+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| 1 | 2222 | SonyEricssonK310c | 2007-12-19 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| 2 | 2222 | SonyEricssonK750c | 2007-12-19 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| 3 | 2222 | MAUI WAP Browser | 2007-12-19 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| 4 | 2222 | Nokia3108 | 2007-12-19 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| 5 | 2222 | LENOVO-I750 | 2007-12-19 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| 6 | 2222 | BIRD_D636 | 2007-12-19 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| 7 | 2222 | SonyEricssonS500c | 2007-12-19 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| 8 | 2222 | SAMSUNG-SGH-E258 | 2007-12-19 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| 9 | 2222 | NokiaN73-1 | 2007-12-19 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| 10 | 2222 | Nokia2610 | 2007-12-19 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+—-+——-+——————-+————+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">10 rows in set (2 min 58.56 sec) client3:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql&gt; update gz_phone set phone=’55555′where id=1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Query OK, 1 row affected (3 min 50.16 sec)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Rows matched: 1 Changed: 1 Warnings: 0</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>说明当数据表有一个写锁时，其它进程的读写操作都需等待读锁释放后才会执行。</p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="3并发插入">3、并发插入<a href="#3并发插入" class="hash-link" aria-label="3、并发插入的直接链接" title="3、并发插入的直接链接">​</a></h3><p>原则上数据表有一个读锁时，其它进程无法对此表进行更新操作，但在一定条件下，MyISAM表也支持查询和插入操作的并发进行。</p><p>MyISAM存储引擎有一个系统变量concurrent_insert，专门用以控制其并发插入的行为，其值分别可以为0、1或2。</p><p>a. 当concurrent_insert设置为0时，不允许并发插入。
b. 当concurrent_insert设置为1时，如果MyISAM表中没有空洞（即表的中间没有被删除的行），MyISAM允许在一个进程读表的同时，另一个进程从表尾插入记录。这也是MySQL的默认设置。
c. 当concurrent_insert设置为2时，无论MyISAM表中有没有空洞，都允许在表尾并发插入记录。</p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="4myisam的锁调度">4、MyISAM的锁调度<a href="#4myisam的锁调度" class="hash-link" aria-label="4、MyISAM的锁调度的直接链接" title="4、MyISAM的锁调度的直接链接">​</a></h3><p>由于MySQL认为写请求一般比读请求要重要，所以如果有读写请求同时进行的话，MYSQL将会优先执行写操作。这样MyISAM表在进行大量的更新操作时（特别是更新的字段中存在索引的情况下），会造成查询操作很难获得读锁，从而导致查询阻塞。</p><p>我们可以通过一些设置来调节MyISAM的调度行为：</p><p>a. 通过指定启动参数<code>low-priority-updates</code>，使MyISAM引擎默认给予读请求以优先的权利。
b. 通过执行命令<code>SET LOW_PRIORITY_UPDATES=1</code>，使该连接发出的更新请求优先级降低。
c. 通过指定 <code>INSERT</code>、<code>UPDATE</code>、<code>DELETE</code> 语句的<code>LOW_PRIORITY</code>属性，降低该语句的优先级。</p><p>上面3种方法都是要么更新优先，要么查询优先的方法。这里要说明的就是，不要盲目的给mysql设置为读优先，因为一些需要长时间运行的查询操作，也会使写进程“饿死”。只有根据你的实际情况，来决定设置哪种操作优先。这些方法还是没有从根本上同时解决查询和更新的问题。</p><p>在一个有大数据量高并发表的mysql里，我们还可采用另一种策略来进行优化，那就是通过mysql主从（读写）分离来实现负载均衡，这样可避免优先哪一种操作从而可能导致另一种操作的堵塞。</p><blockquote><p>转自：<a href="http://blog.csdn.net/andyxm/article/details/44810313" target="_blank" rel="noopener noreferrer">CSDN博客</a></p></blockquote>]]></content:encoded>
            <category>mysql</category>
            <category>lock</category>
        </item>
        <item>
            <title><![CDATA[Linux 命令神器 lsof 入门]]></title>
            <link>https://inhere.github.io/blog/lsof-command-usage-in-linux</link>
            <guid>https://inhere.github.io/blog/lsof-command-usage-in-linux</guid>
            <pubDate>Sat, 20 Aug 2016 14:00:00 GMT</pubDate>
            <description><![CDATA[lsof 是系统管理/安全的尤伯工具。大多数时候用它来从系统获得与网络连接相关的信息，但那只是这个强大而又鲜为人知的应用的第一步。]]></description>
            <content:encoded><![CDATA[<p><code>lsof</code> 是系统管理/安全的尤伯工具。大多数时候用它来从系统获得与网络连接相关的信息，但那只是这个强大而又鲜为人知的应用的第一步。</p><p>将这个工具称之为 <code>lsof</code> 真是名副其实，因为它是指“<strong>列出打开文件（lists openfiles）</strong>”。而有一点要切记，<strong>在Unix中一切（包括网络套接口）都是文件</strong>。</p><p>有趣的是，lsof也是有着最多开关的Linux/Unix命令之一。它有那么多的开关，它有许多选项支持使用<code>-</code>和<code>+</code>前缀。</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">lsof</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">usage: </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-?abhlnNoOPRstUvV</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">+</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">-c c</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">+</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">-d s</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">+D D</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">+</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">-f</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">cgG</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-F </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">f</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-g </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">s</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-i </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">+</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">-L </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">l</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">+</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">-M</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-o </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">o</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-p s</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">+</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">-r </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">t</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-S </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">t</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-T </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">t</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-u s</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">+</span><span class="token operator" style="color:#393A34">|</span><span class="token plain">-w</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">-x </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">fl</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">--</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">names</span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>正如你所见，lsof有着实在是令人惊讶的选项数量。你可以使用它来获得你系统上设备的信息，你能通过它了解到指定的用户在指定的地点正在碰什么东西，或者甚至是一个进程正在使用什么文件或网络连接。</p><p>对于我，lsof替代了netstat和ps的全部工作。它可以带来那些工具所能带来的一切，而且要比那些工具多得多。那么，让我们来看看它的一些基本能力吧：</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="关键选项">关键选项<a href="#关键选项" class="hash-link" aria-label="关键选项的直接链接" title="关键选项的直接链接">​</a></h2><p>理解一些关于lsof如何工作的关键性东西是很重要的。最重要的是，当你给它传递选项时，默认行为是对结果进行“或”运算。因此，如果你正是用-i来拉出一个端口列表，同时又用-p来拉出一个进程列表，那么默认情况下你会获得两者的结果。</p><p>下面的一些其它东西需要牢记：</p><ul><li>默认 : 没有选项，lsof列出活跃进程的所有打开文件</li><li>组合 : 可以将选项组合到一起，如-abc，但要当心哪些选项需要参数</li><li>-a : 结果进行“与”运算（而不是“或”）</li><li>-l : 在输出显示用户ID而不是用户名</li><li>-h : 获得帮助</li><li>-t : 仅获取进程ID</li><li>-U : 获取UNIX套接口地址</li><li>-F : 格式化输出结果，用于其它命令。可以通过多种方式格式化，如-F pcfn（用于进程id、命令名、文件描述符、文件名，并以空终止）</li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="获取网络信息">获取网络信息<a href="#获取网络信息" class="hash-link" aria-label="获取网络信息的直接链接" title="获取网络信息的直接链接">​</a></h2><p>正如我所说的，我主要将lsof用于获取关于系统怎么和网络交互的信息。这里提供了关于此信息的一些主题：</p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="使用-i显示所有连接">使用-i显示所有连接<a href="#使用-i显示所有连接" class="hash-link" aria-label="使用-i显示所有连接的直接链接" title="使用-i显示所有连接的直接链接">​</a></h3><p>有些人喜欢用netstat来获取网络连接，但是我更喜欢使用lsof来进行此项工作。结果以对我来说很直观的方式呈现，我仅仅只需改变我的语法，就可以通过同样的命令来获取更多信息。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain"># lsof -i</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">COMMAND  PID USER   FD   TYPE DEVICE SIZE NODE NAME</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">dhcpcd 6061 root 4u IPv4 4510 UDP *:bootpc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sshd 7703 root 3u IPv6  6499 TCP *:ssh (LISTEN)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sshd 7892 root 3u IPv6  6757 TCP 10.10.1.5:ssh-&gt;192.168.1.5:49901 (ESTABLISHED)</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="使用-i-6仅获取ipv6流量">使用-i 6仅获取IPv6流量<a href="#使用-i-6仅获取ipv6流量" class="hash-link" aria-label="使用-i 6仅获取IPv6流量的直接链接" title="使用-i 6仅获取IPv6流量的直接链接">​</a></h3><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">lsof</span><span class="token plain"> -i </span><span class="token number" style="color:#36acaa">6</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="仅显示tcp连接同理可获得udp连接">仅显示TCP连接（同理可获得UDP连接）<a href="#仅显示tcp连接同理可获得udp连接" class="hash-link" aria-label="仅显示TCP连接（同理可获得UDP连接）的直接链接" title="仅显示TCP连接（同理可获得UDP连接）的直接链接">​</a></h3><p>你也可以通过在-i后提供对应的协议来仅仅显示TCP或者UDP连接信息。</p><h1>lsof -iTCP</h1><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ lsof -iTCP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">COMMAND  PID USER   FD   TYPE DEVICE SIZE NODE NAME</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sshd 7703 root 3u IPv6 6499 TCP *:ssh (LISTEN)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sshd 7892 root 3u IPv6 6757 TCP 10.10.1.5:ssh-&gt;192.168.1.5:49901 (ESTABLISHED)</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="使用-iport来显示与指定端口相关的网络信息">使用-i:port来显示与指定端口相关的网络信息<a href="#使用-iport来显示与指定端口相关的网络信息" class="hash-link" aria-label="使用-i:port来显示与指定端口相关的网络信息的直接链接" title="使用-i:port来显示与指定端口相关的网络信息的直接链接">​</a></h3><p>或者，你也可以通过端口搜索，这对于要找出什么阻止了另外一个应用绑定到指定端口实在是太棒了。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain"># lsof -i:22</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">COMMAND  PID USER   FD   TYPE DEVICE SIZE NODE NAME</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sshd 7703 root 3u  IPv6 6499 TCP *:ssh (LISTEN)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sshd 7892 root 3u  IPv6 6757 TCP 10.10.1.5:ssh-&gt;192.168.1.5:49901 (ESTABLISHED)</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="使用host来显示指定到指定主机的连接">使用@host来显示指定到指定主机的连接<a href="#使用host来显示指定到指定主机的连接" class="hash-link" aria-label="使用@host来显示指定到指定主机的连接的直接链接" title="使用@host来显示指定到指定主机的连接的直接链接">​</a></h3><p>这对于你在检查是否开放连接到网络中或互联网上某个指定主机的连接时十分有用。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain"># lsof -i@172.16.12.5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sshd 7892 root 3u IPv6 6757 TCP 10.10.1.5:ssh-&gt;172.16.12.5:49901 (ESTABLISHED)</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="使用hostport显示基于主机与端口的连接">使用@host:port显示基于主机与端口的连接<a href="#使用hostport显示基于主机与端口的连接" class="hash-link" aria-label="使用@host:port显示基于主机与端口的连接的直接链接" title="使用@host:port显示基于主机与端口的连接的直接链接">​</a></h3><p>你也可以组合主机与端口的显示信息。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain"># lsof -i@172.16.12.5:22</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sshd 7892 root 3u IPv6 6757 TCP 10.10.1.5:ssh-&gt;172.16.12.5:49901 (ESTABLISHED)</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="找出监听端口">找出监听端口<a href="#找出监听端口" class="hash-link" aria-label="找出监听端口的直接链接" title="找出监听端口的直接链接">​</a></h3><p>找出正等候连接的端口。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain"># lsof -i -sTCP:LISTEN</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>你也可以grep “LISTEN”来完成该任务。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain"># lsof -i | grep -i LISTEN</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">iTunes     400 daniel   16u  IPv4 0x4575228  0t0 TCP *:daap (LISTEN)</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="找出已建立的连接">找出已建立的连接<a href="#找出已建立的连接" class="hash-link" aria-label="找出已建立的连接的直接链接" title="找出已建立的连接的直接链接">​</a></h3><p>你也可以显示任何已经连接的连接。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain"># lsof -i -sTCP:ESTABLISHED</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>你也可以通过grep搜索“ESTABLISHED”来完成该任务。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain"># lsof -i | grep -i ESTABLISHED</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">firefox-b 169 daniel  49u IPv4 0t0 TCP 1.2.3.3:1863-&gt;1.2.3.4:http (ESTABLISHED)</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="用户信息">用户信息<a href="#用户信息" class="hash-link" aria-label="用户信息的直接链接" title="用户信息的直接链接">​</a></h2><p>你也可以获取各种用户的信息，以及它们在系统上正干着的事情，包括它们的网络活动、对文件的操作等。</p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="使用-u显示指定用户打开了什么">使用-u显示指定用户打开了什么<a href="#使用-u显示指定用户打开了什么" class="hash-link" aria-label="使用-u显示指定用户打开了什么的直接链接" title="使用-u显示指定用户打开了什么的直接链接">​</a></h3><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain"># lsof -u daniel</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-- snipped --</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Dock 155 daniel  txt REG   14,2   2798436   823208 /usr/lib/libicucore.A.dylib</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Dock 155 daniel  txt REG   14,2   1580212   823126 /usr/lib/libobjc.A.dylib</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Dock 155 daniel  txt REG   14,2   2934184   823498 /usr/lib/libstdc++.6.0.4.dylib</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Dock 155 daniel  txt REG   14,2    132008   823505 /usr/lib/libgcc_s.1.dylib</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Dock 155 daniel  txt REG   14,2    212160   823214 /usr/lib/libauto.dylib</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-- snipped --</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="使用-u-user来显示除指定用户以外的其它所有用户所做的事情">使用-u user来显示除指定用户以外的其它所有用户所做的事情<a href="#使用-u-user来显示除指定用户以外的其它所有用户所做的事情" class="hash-link" aria-label="使用-u user来显示除指定用户以外的其它所有用户所做的事情的直接链接" title="使用-u user来显示除指定用户以外的其它所有用户所做的事情的直接链接">​</a></h3><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain"># lsof -u ^daniel</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-- snipped --</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Dock 155 jim  txt REG   14,2   2798436   823208 /usr/lib/libicucore.A.dylib</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Dock 155 jim  txt REG   14,2   1580212   823126 /usr/lib/libobjc.A.dylib</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Dock 155 jim  txt REG   14,2   2934184   823498 /usr/lib/libstdc++.6.0.4.dylib</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Dock 155 jim  txt REG   14,2    132008   823505 /usr/lib/libgcc_s.1.dylib</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Dock 155 jim  txt REG   14,2    212160   823214 /usr/lib/libauto.dylib</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-- snipped --</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="杀死指定用户所做的一切事情">杀死指定用户所做的一切事情<a href="#杀死指定用户所做的一切事情" class="hash-link" aria-label="杀死指定用户所做的一切事情的直接链接" title="杀死指定用户所做的一切事情的直接链接">​</a></h3><p>可以消灭指定用户运行的所有东西，这真不错。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain"># kill -9 `lsof -t -u daniel`</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="命令和进程">命令和进程<a href="#命令和进程" class="hash-link" aria-label="命令和进程的直接链接" title="命令和进程的直接链接">​</a></h2><p>可以查看指定程序或进程由什么启动，这通常会很有用，而你可以使用lsof通过名称或进程ID过滤来完成这个任务。下面列出了一些选项：</p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="使用-c查看指定的命令正在使用的文件和网络连接">使用<code>-c</code>查看指定的命令正在使用的文件和网络连接<a href="#使用-c查看指定的命令正在使用的文件和网络连接" class="hash-link" aria-label="使用-c查看指定的命令正在使用的文件和网络连接的直接链接" title="使用-c查看指定的命令正在使用的文件和网络连接的直接链接">​</a></h3><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain"># lsof -c syslog-ng</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">COMMAND    PID USER   FD   TYPE     DEVICE    SIZE       NODE NAME</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">syslog-ng 7547 root  cwd    DIR    3,3    4096   2 /</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">syslog-ng 7547 root  rtd    DIR    3,3    4096   2 /</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">syslog-ng 7547 root  txt    REG    3,3  113524  1064970 /usr/sbin/syslog-ng</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-- snipped --</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="使用-p查看指定进程id已打开的内容">使用-p查看指定进程ID已打开的内容<a href="#使用-p查看指定进程id已打开的内容" class="hash-link" aria-label="使用-p查看指定进程ID已打开的内容的直接链接" title="使用-p查看指定进程ID已打开的内容的直接链接">​</a></h3><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain"># lsof -p 10075</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-- snipped --</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sshd    10068 root  mem    REG    3,3   34808 850407 /lib/libnss_files-2.4.so</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sshd    10068 root  mem    REG    3,3   34924 850409 /lib/libnss_nis-2.4.so</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sshd    10068 root  mem    REG    3,3   26596 850405 /lib/libnss_compat-2.4.so</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sshd    10068 root  mem    REG    3,3  200152 509940 /usr/lib/libssl.so.0.9.7</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sshd    10068 root  mem    REG    3,3   46216 510014 /usr/lib/liblber-2.3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sshd    10068 root  mem    REG    3,3   59868 850413 /lib/libresolv-2.4.so</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sshd    10068 root  mem    REG    3,3 1197180 850396 /lib/libc-2.4.so</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sshd    10068 root  mem    REG    3,3   22168 850398 /lib/libcrypt-2.4.so</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sshd    10068 root  mem    REG    3,3   72784 850404 /lib/libnsl-2.4.so</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sshd    10068 root  mem    REG    3,3   70632 850417 /lib/libz.so.1.2.3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sshd    10068 root  mem    REG    3,3    9992 850416 /lib/libutil-2.4.so</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-- snipped --</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="-t选项只返回pid">-t选项只返回PID<a href="#-t选项只返回pid" class="hash-link" aria-label="-t选项只返回PID的直接链接" title="-t选项只返回PID的直接链接">​</a></h3><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain"># lsof -t -c Mail</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">350</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="文件和目录">文件和目录<a href="#文件和目录" class="hash-link" aria-label="文件和目录的直接链接" title="文件和目录的直接链接">​</a></h2><p>通过查看指定文件或目录，你可以看到系统上所有正与其交互的资源——包括用户、进程等。</p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="显示与指定目录交互的所有一切">显示与指定目录交互的所有一切<a href="#显示与指定目录交互的所有一切" class="hash-link" aria-label="显示与指定目录交互的所有一切的直接链接" title="显示与指定目录交互的所有一切的直接链接">​</a></h3><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain"># lsof /var/log/messages/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">COMMAND    PID USER   FD   TYPE DEVICE   SIZE   NODE NAME</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">syslog-ng 7547 root    4w   REG    3,3 217309 834024 /var/log/messages</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="显示与指定文件交互的所有一切">显示与指定文件交互的所有一切<a href="#显示与指定文件交互的所有一切" class="hash-link" aria-label="显示与指定文件交互的所有一切的直接链接" title="显示与指定文件交互的所有一切的直接链接">​</a></h3><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain"># lsof /home/daniel/firewall_whitelist.txt</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="高级用法">高级用法<a href="#高级用法" class="hash-link" aria-label="高级用法的直接链接" title="高级用法的直接链接">​</a></h2><p>与tcpdump类似，当你开始组合查询时，它就显示了它强大的功能。</p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="显示daniel连接到1111所做的一切">显示daniel连接到1.1.1.1所做的一切<a href="#显示daniel连接到1111所做的一切" class="hash-link" aria-label="显示daniel连接到1.1.1.1所做的一切的直接链接" title="显示daniel连接到1.1.1.1所做的一切的直接链接">​</a></h3><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain"># lsof -u daniel -i @1.1.1.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">bkdr   1893 daniel 3u  IPv6 3456 TCP 10.10.1.10:1234-&gt;1.1.1.1:31337 (ESTABLISHED)</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="同时使用-t和-c选项以给进程发送-hup-信号">同时使用-t和-c选项以给进程发送 HUP 信号<a href="#同时使用-t和-c选项以给进程发送-hup-信号" class="hash-link" aria-label="同时使用-t和-c选项以给进程发送 HUP 信号的直接链接" title="同时使用-t和-c选项以给进程发送 HUP 信号的直接链接">​</a></h3><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain"># kill -HUP `lsof -t -c sshd`</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="lsof-l1显示所有打开的链接数小于1的文件">lsof +L1显示所有打开的链接数小于1的文件<a href="#lsof-l1显示所有打开的链接数小于1的文件" class="hash-link" aria-label="lsof +L1显示所有打开的链接数小于1的文件的直接链接" title="lsof +L1显示所有打开的链接数小于1的文件的直接链接">​</a></h3><p>这通常（当不总是）表示某个攻击者正尝试通过删除文件入口来隐藏文件内容。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain"># lsof +L1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(hopefully nothing)</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="显示某个端口范围的打开的连接">显示某个端口范围的打开的连接<a href="#显示某个端口范围的打开的连接" class="hash-link" aria-label="显示某个端口范围的打开的连接的直接链接" title="显示某个端口范围的打开的连接的直接链接">​</a></h3><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain"># lsof -i @fw.google.com:2150=2180</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="结尾">结尾<a href="#结尾" class="hash-link" aria-label="结尾的直接链接" title="结尾的直接链接">​</a></h2><p>本入门教程只是管窥了lsof功能的一斑，要查看完整参考，运行man lsof命令或查看在线版本。希望本文对你有所助益，也随时欢迎你的评论和指正。</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="资源">资源<a href="#资源" class="hash-link" aria-label="资源的直接链接" title="资源的直接链接">​</a></h2><p>lsof手册页：<a href="http://www.netadmintools.com/html/lsof.man.html" target="_blank" rel="noopener noreferrer">http://www.netadmintools.com/html/lsof.man.html</a>
本文由 Daniel Miessler撰写，首次在他<a href="http://danielmiessler.com/study/lsof/" target="_blank" rel="noopener noreferrer">博客</a>上贴出</p><hr><blockquote><p>转自 <a href="https://linux.cn/article-4099-2.html" target="_blank" rel="noopener noreferrer">Linux中国</a> </p></blockquote><p>via: <a href="http://linuxaria.com/howto/linux-terminal-an-lsof-primer" target="_blank" rel="noopener noreferrer">http://linuxaria.com/howto/linux-terminal-an-lsof-primer</a>
作者：<a href="https://plus.google.com/101727609700016666852/posts?rel=author" target="_blank" rel="noopener noreferrer">Daniel Miessler</a>
译者：<a href="https://github.com/GOLinux" target="_blank" rel="noopener noreferrer">GOLinux</a>
校对：<a href="https://github.com/wxy" target="_blank" rel="noopener noreferrer">wxy</a></p><p>本文由 <a href="https://github.com/LCTT/TranslateProject" target="_blank" rel="noopener noreferrer">LCTT</a> 原创翻译</p>]]></content:encoded>
            <category>linux</category>
            <category>lsof</category>
            <category>tools</category>
        </item>
        <item>
            <title><![CDATA[Linux下常用压缩格式的压缩与解压方法]]></title>
            <link>https://inhere.github.io/blog/compress-and-uncompress-command-in-linux</link>
            <guid>https://inhere.github.io/blog/compress-and-uncompress-command-in-linux</guid>
            <pubDate>Tue, 16 Aug 2016 20:25:00 GMT</pubDate>
            <description><![CDATA[Linux下常用压缩格式的压缩与解压方法使用说明]]></description>
            <content:encoded><![CDATA[<p>Linux下常用压缩格式的压缩与解压方法使用说明</p><p>Linux下常用压缩格式的压缩与解压方法 </p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="tar">.tar<a href="#tar" class="hash-link" aria-label=".tar的直接链接" title=".tar的直接链接">​</a></h2><ul><li>解包： <code>tar xvf FileName.tar </code></li><li>打包：<code>tar cvf FileName.tar DirName</code> </li></ul><blockquote><p>（注：tar是打包，不是压缩！） </p></blockquote><hr><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="gz">.gz<a href="#gz" class="hash-link" aria-label=".gz的直接链接" title=".gz的直接链接">​</a></h2><ul><li>解压1：<code>gunzip FileName.gz</code> </li><li>解压2：<code>gzip -d FileName.gz </code></li><li>压缩：<code>gzip FileName </code></li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="targz">.tar.gz<a href="#targz" class="hash-link" aria-label=".tar.gz的直接链接" title=".tar.gz的直接链接">​</a></h2><ul><li>解压：<code>tar zxvf FileName.tar.gz </code></li><li>压缩：<code>tar zcvf FileName.tar.gz DirName </code></li></ul><hr><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="bz2">.bz2<a href="#bz2" class="hash-link" aria-label=".bz2的直接链接" title=".bz2的直接链接">​</a></h2><ul><li>解压1：<code>bzip2 -d FileName.bz2</code> </li><li>解压2：<code>bunzip2 FileName.bz2</code> </li><li>压缩： <code>bzip2 -z FileName</code> </li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="tarbz2">.tar.bz2<a href="#tarbz2" class="hash-link" aria-label=".tar.bz2的直接链接" title=".tar.bz2的直接链接">​</a></h2><ul><li>解压：<code>tar jxvf FileName.tar.bz2</code> </li><li>压缩：<code>tar jcvf FileName.tar.bz2 DirName</code> </li></ul><hr><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="bz">.bz<a href="#bz" class="hash-link" aria-label=".bz的直接链接" title=".bz的直接链接">​</a></h2><ul><li>解压1：<code>bzip2 -d FileName.bz</code> </li><li>解压2：<code>bunzip2 FileName.bz</code> </li><li>压缩：<code>未知</code> </li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="tarbz">.tar.bz<a href="#tarbz" class="hash-link" aria-label=".tar.bz的直接链接" title=".tar.bz的直接链接">​</a></h2><ul><li>解压：<code>tar jxvf FileName.tar.bz</code> </li><li>压缩：<code>未知 </code></li></ul><hr><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="z">.Z<a href="#z" class="hash-link" aria-label=".Z的直接链接" title=".Z的直接链接">​</a></h2><ul><li>解压：<code>uncompress FileName.Z</code> </li><li>压缩：<code>compress FileName </code></li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="tarz">.tar.Z<a href="#tarz" class="hash-link" aria-label=".tar.Z的直接链接" title=".tar.Z的直接链接">​</a></h2><ul><li>解压：<code>tar Zxvf FileName.tar.Z</code> </li><li>压缩：<code>tar Zcvf FileName.tar.Z DirName</code> </li></ul><hr><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="tgz">.tgz<a href="#tgz" class="hash-link" aria-label=".tgz的直接链接" title=".tgz的直接链接">​</a></h2><p>解压：tar zxvf FileName.tgz
压缩：未知 </p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="tartgz">.tar.tgz<a href="#tartgz" class="hash-link" aria-label=".tar.tgz的直接链接" title=".tar.tgz的直接链接">​</a></h2><p>解压：tar zxvf FileName.tar.tgz
压缩：tar zcvf FileName.tar.tgz FileName </p><hr><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="zip">.zip<a href="#zip" class="hash-link" aria-label=".zip的直接链接" title=".zip的直接链接">​</a></h2><p>解压：unzip FileName.zip
压缩：zip FileName.zip DirName </p><hr><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="rar">.rar<a href="#rar" class="hash-link" aria-label=".rar的直接链接" title=".rar的直接链接">​</a></h2><p>解压：rar a FileName.rar
压缩：r ar e FileName.rar </p><blockquote><p>rar请到：<a href="http://www.rarsoft.com/download.htm" target="_blank" rel="noopener noreferrer">http://www.rarsoft.com/download.htm</a> 下载！
解压后请将rar_static拷贝到/usr/bin目录（其他由$PATH环境变量指定的目录也可以）：
<code>$ cp rar_static /usr/bin/rar</code> </p></blockquote><hr><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="lha">.lha<a href="#lha" class="hash-link" aria-label=".lha的直接链接" title=".lha的直接链接">​</a></h2><ul><li><p>解压：<code>lha -e FileName.lha</code> </p></li><li><p>压缩：<code>lha -a FileName.lha FileName </code></p><p>lha请到：<a href="http://www.infor.kanazawa-it.ac.jp/.../lhaunix/%E4%B8%8B%E8%BD%BD%EF%BC%81" target="_blank" rel="noopener noreferrer">http://www.infor.kanazawa-it.ac.jp/.../lhaunix/下载！</a> </p></li></ul><blockquote><p>解压后请将lha拷贝到/usr/bin目录（其他由$PATH环境变量指定的目录也可以）：
<code># cp lha /usr/bin/ </code></p></blockquote><hr><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="rpm">.rpm<a href="#rpm" class="hash-link" aria-label=".rpm的直接链接" title=".rpm的直接链接">​</a></h2><p>解包：<code>rpm2cpio FileName.rpm | cpio -div </code></p><hr><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="sex">sEx<a href="#sex" class="hash-link" aria-label="sEx的直接链接" title="sEx的直接链接">​</a></h2><p>.tar .tgz .tar.gz .tar.Z .tar.bz .tar.bz2 .zip .cpio .rpm .deb .slp .arj .rar .ace .lha .lzh
.lzx .lzs .arc .sda .sfx .lnx .zoo .cab .kar .cpt .pit .sit .sea </p><ul><li>解压：<code>sEx x FileName.*</code> </li><li>压缩：<code>sEx a FileName.* FileName</code> </li></ul><blockquote><p>sEx只是调用相关程序，本身并无压缩、解压功能，请注意！ </p></blockquote><p>sEx请到： <a href="http://sourceforge.net/projects/sex%E4%B8%8B%E8%BD%BD%EF%BC%81" target="_blank" rel="noopener noreferrer">http://sourceforge.net/projects/sex下载！</a> </p><p>解压后请将sEx拷贝到/usr/bin目录（其他由$PATH环境变量指定的目录也可以）：
<code>$ cp sEx /usr/bin/</code> </p><blockquote><p>转自：<a href="http://verytiny.iteye.com/blog/165653" target="_blank" rel="noopener noreferrer">iteye</a></p></blockquote>]]></content:encoded>
            <category>linux</category>
            <category>tar</category>
            <category>tools</category>
        </item>
        <item>
            <title><![CDATA[linux下的find文件查找命令与grep文件内容查找命令]]></title>
            <link>https://inhere.github.io/blog/the-find-and-grep-usage-on-linux</link>
            <guid>https://inhere.github.io/blog/the-find-and-grep-usage-on-linux</guid>
            <pubDate>Thu, 04 Aug 2016 23:34:00 GMT</pubDate>
            <description><![CDATA[linux下的find文件查找命令与grep文件内容查找命令的使用。]]></description>
            <content:encoded><![CDATA[<p>linux下的find文件查找命令与grep文件内容查找命令的使用。</p><p>在使用linux时，经常需要进行文件查找。其中查找的命令主要有find和grep。两个命令是有区的。</p><p>区别：</p><ol><li>find命令是根据文件的属性进行查找，如文件名，文件大小，所有者，所属组，是否为空，访问时间，修改时间等。 </li><li>grep是根据文件的内容进行查找，会对文件的每一行按照给定的模式(patter)进行匹配查找。</li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="find命令">find命令<a href="#find命令" class="hash-link" aria-label="find命令的直接链接" title="find命令的直接链接">​</a></h2><p>基本格式：<code>find  path expression</code></p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="1按照文件名查找">1.按照文件名查找<a href="#1按照文件名查找" class="hash-link" aria-label="1.按照文件名查找的直接链接" title="1.按照文件名查找的直接链接">​</a></h3><table><thead><tr><th>命令示例</th><th>说明</th></tr></thead><tbody><tr><td><code>find / -name httpd.conf</code>　　</td><td>在根目录下查找文件httpd.conf，表示在整个硬盘查找</td></tr><tr><td><code>find /etc -name httpd.conf</code></td><td>　　在/etc目录下文件httpd.conf</td></tr><tr><td><code>find /etc -name '*srm*'</code>　</td><td>　使用通配符<code>*</code>(0或者任意多个)。表示在<code>/etc</code>目录下查找文件名中含有字符串‘srm’的文件</td></tr><tr><td><code>find . -name 'srm*'</code> 　</td><td>　表示当前目录下查找文件名开头是字符串‘srm’的文件</td></tr></tbody></table><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="2按照文件特征查找-">2.按照文件特征查找 　　　　<a href="#2按照文件特征查找-" class="hash-link" aria-label="2.按照文件特征查找 　　　　的直接链接" title="2.按照文件特征查找 　　　　的直接链接">​</a></h3><table><thead><tr><th>命令示例</th><th>说明</th></tr></thead><tbody><tr><td><code>find / -amin -10</code> 　</td><td>　 查找在系统中最后10分钟访问的文件(access time)</td></tr><tr><td><code>find / -atime -2</code>　</td><td>　  查找在系统中最后48小时访问的文件</td></tr><tr><td><code>find / -empty</code> 　</td><td>　 查找在系统中为空的文件或者文件夹</td></tr><tr><td><code>find / -group cat</code> 　</td><td>　 查找在系统中属于 group为cat的文件</td></tr><tr><td><code>find / -mmin -5</code> 　</td><td>　 查找在系统中最后5分钟里修改过的文件(modify time)</td></tr><tr><td><code>find / -mtime -1</code>　</td><td>　查找在系统中最后24小时里修改过的文件</td></tr><tr><td><code>find / -user fred</code>　</td><td>　查找在系统中属于fred这个用户的文件</td></tr><tr><td><code>find / -size +10000c</code>　</td><td>　查找出大于10000000字节的文件(c:字节，w:双字，k:KB，M:MB，G:GB)</td></tr><tr><td><code>find / -size -1000k</code> 　</td><td>　查找出小于1000KB的文件</td></tr></tbody></table><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="3使用混合查找方式查找文件">3.使用混合查找方式查找文件<a href="#3使用混合查找方式查找文件" class="hash-link" aria-label="3.使用混合查找方式查找文件的直接链接" title="3.使用混合查找方式查找文件的直接链接">​</a></h3><p>参数有： <code>！，-and(-a)，-or(-o)</code>。</p><table><thead><tr><th>命令示例</th><th>说明</th></tr></thead><tbody><tr><td><code>find /tmp -size +10000c -and -mtime +2</code></td><td>　在<code>/tmp</code>目录下查找大于10000字节并在最后2分钟内修改的文件</td></tr><tr><td><code>find / -user fred -or -user george</code></td><td>　在<code>/</code>目录下查找用户是fred或者george的文件文件</td></tr><tr><td><code>find /tmp ! -user panda</code></td><td>　在<code>/tmp</code>目录中查找所有不属于panda用户的文件</td></tr></tbody></table><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="二grep命令">二、grep命令<a href="#二grep命令" class="hash-link" aria-label="二、grep命令的直接链接" title="二、grep命令的直接链接">​</a></h2><p> 基本格式：<code>find expression</code></p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="1主要参数">1.主要参数<a href="#1主要参数" class="hash-link" aria-label="1.主要参数的直接链接" title="1.主要参数的直接链接">​</a></h3><p>[options]<!-- -->主要参数：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">－c：只输出匹配行的计数。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">－i：不区分大小写</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">－h：查询多文件时不显示文件名。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">－l：查询多文件时只输出包含匹配字符的文件名。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">－n：显示匹配行及行号。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">－s：不显示不存在或无匹配文本的错误信息。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">－v：显示不包含匹配文本的所有行。</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>pattern正则表达式主要参数：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">\： 忽略正则表达式中特殊字符的原有含义。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">^：匹配正则表达式的开始行。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$: 匹配正则表达式的结束行。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\&lt;：从匹配正则表达 式的行开始。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\&gt;：到匹配正则表达式的行结束。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ ]：单个字符，如[A]即A符合要求 。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ - ]：范围，如[A-Z]，即A、B、C一直到Z都符合要求 。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.：所有的单个字符。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">* ：有字符，长度可以为0。</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="2实例">2.实例　<a href="#2实例" class="hash-link" aria-label="2.实例　的直接链接" title="2.实例　的直接链接">​</a></h3><table><thead><tr><th>命令示例</th><th>说明</th></tr></thead><tbody><tr><td><code>grep 'test' d*</code>　</td><td>　显示所有以d开头的文件中包含 test的行</td></tr><tr><td><code>grep ‘test’ aa bb cc</code> 　　</td><td>显示在aa，bb，cc文件中包含test的行</td></tr><tr><td><code>grep ‘[a-z]\{5\}’ aa</code> 　</td><td>　显示所有包含每行字符串至少有5个连续小写字符的字符串的行</td></tr><tr><td><code>grep magic /usr/src</code>　</td><td>　显示<code>/usr/src</code>目录下的文件(不含子目录)包含magic的行</td></tr><tr><td><code>grep -r magic /usr/src</code>　</td><td>　显示<code>/usr/src</code>目录下的文件(包含子目录)包含magic的行</td></tr><tr><td><code>grep -w pattern files</code></td><td>只匹配<strong>整个单词</strong>，而不是字符串的一部分(如匹配’magic’，而不是’magical’)，</td></tr></tbody></table><p>grep详细使用参见：<code>http://www.cnblogs.com/end/archive/2012/02/21/2360965.html</code></p><blockquote><p>转自：<a href="http://www.cnblogs.com/xudong-bupt/archive/2013/03/23/2976793.html" target="_blank" rel="noopener noreferrer">旭东的博客</a></p></blockquote>]]></content:encoded>
            <category>linux</category>
            <category>find</category>
            <category>grep</category>
            <category>tools</category>
        </item>
        <item>
            <title><![CDATA[git创建和使用补丁patch]]></title>
            <link>https://inhere.github.io/blog/create-and-apply-patch-in-git</link>
            <guid>https://inhere.github.io/blog/create-and-apply-patch-in-git</guid>
            <pubDate>Sun, 31 Jul 2016 15:03:00 GMT</pubDate>
            <description><![CDATA[在git中创建和使用补丁patch记录]]></description>
            <content:encoded><![CDATA[<p>在git中创建和使用补丁patch记录</p><p>git打patch方法</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="git-format-patch--推荐">git format-patch  （推荐）<a href="#git-format-patch--推荐" class="hash-link" aria-label="git format-patch  （推荐）的直接链接" title="git format-patch  （推荐）的直接链接">​</a></h2><p>适用于git的patch，包含diff信息，包含提交人，提交时间等
如果<code>git format-patch</code> 生成的补丁不能打到当前分支，<code>git am</code>会给出提示，并协助你完成打补丁工作</p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="对比分支生成patch">对比分支生成patch<a href="#对比分支生成patch" class="hash-link" aria-label="对比分支生成patch的直接链接" title="对比分支生成patch的直接链接">​</a></h3><p>例：从master checkout 一个新分支修改然后与master对比生成patch。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ git format-patch -M master //-M选项表示这个patch要和那个分支比对</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ git am 001-xxx.patch（不必重新commit）</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="将commit打包成patch">将commit打包成patch<a href="#将commit打包成patch" class="hash-link" aria-label="将commit打包成patch的直接链接" title="将commit打包成patch的直接链接">​</a></h3><div class="language-sh codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-sh codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain"># 修改代码</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ vi drivers/bluetooth/btusb.c</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 把代码添加到git管理仓库</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ git add .</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 提交修改</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ git commit -m "some message"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 查看日志,获取到hash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ git log </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 生成patch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ git format-patch -s 1bbe3c8c19</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>或者也可以</p><div class="language-sh codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-sh codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ git format-patch HEAD^ # 最近的1次commit的patch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ git format-patch HEAD^^ # 最近的2次commit的patch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ git format-patch HEAD^^^ # 最近的3次commit的patch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ git format-patch HEAD^^^^ # 最近的4次commit的patch</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="测试应用patch">测试,应用patch<a href="#测试应用patch" class="hash-link" aria-label="测试,应用patch的直接链接" title="测试,应用patch的直接链接">​</a></h3><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain"># 检查patch文件</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ git apply --stat xxx.patch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#查看是否能应用成功</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ git apply --check xxx.patch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 应用patch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ git am -s &lt; xxx.patch</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="git-diff">git diff<a href="#git-diff" class="hash-link" aria-label="git diff的直接链接" title="git diff的直接链接">​</a></h2><p>生成标准的patch，只包含diff信息</p><blockquote><p><code>git diff</code> 生成的Patch兼容性强，可以用<code>git apply --check</code> 查看补丁是否能够干净顺利地应用到当前分支中。</p></blockquote><p>例：从master checkout一个新分支修改然后与master对比生成patch。 </p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ git diff master &gt; patch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ git apply xxx.patch（需要重新commit）</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>git</category>
            <category>tools</category>
        </item>
        <item>
            <title><![CDATA[vim使用vimgrep在其他文件中或者文件夹中搜索字符串]]></title>
            <link>https://inhere.github.io/blog/use-vimgrep-search-file-contents-in-vim</link>
            <guid>https://inhere.github.io/blog/use-vimgrep-search-file-contents-in-vim</guid>
            <pubDate>Tue, 26 Jul 2016 20:44:00 GMT</pubDate>
            <description><![CDATA[vim中可以使用vimgrep在其他文件中或者文件夹中搜索字符串]]></description>
            <content:encoded><![CDATA[<p>vim中可以使用vimgrep在其他文件中或者文件夹中搜索字符串</p><p>在vim中提供2中方法来在其他文件或者文件夹中搜索字符串，第一种是<code>vimgrep</code>还有一种是<code>grep</code>。</p><blockquote><p>如果只是在当前打开的文件中查找字符串的，使用 <code>:?</code> 后面加上想要搜索的字符串就可以。</p></blockquote><p>这里要解决的是在别的文件中，也许这个文件还没有打开，或者需要在多个文件中操作，比如在当前文件夹下面所有.c的文件中查找，或者在莫个文件夹中查找。这些情况下，我们可以使用imgrep或者grep。这里只介绍vimgrep。
这是个vim的内部命令，因为可以在vim内部直接使用，</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">:vimgrep</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这个命令还可简写为vim</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">:vim</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="用例1">用例1<a href="#用例1" class="hash-link" aria-label="用例1的直接链接" title="用例1的直接链接">​</a></h2><p>在当前文件夹下面所有<code>.c</code>文件中查找字符串 <code>classA</code></p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">:vimgrep /classA/gj ./*.c</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>解释一下：</p><ul><li><p>g: 如果一行中出现多处，只显示一次，没有g就会出现多次</p></li><li><p>j: 只是列出所有匹配的行，没有j那么就会跳去第一个匹配的行</p></li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="用例2">用例2<a href="#用例2" class="hash-link" aria-label="用例2的直接链接" title="用例2的直接链接">​</a></h2><p>在当前文件夹及其子文件夹下面查找字符串classA</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">:vimgrep /classA/gj **/*.*</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="用例3">用例3<a href="#用例3" class="hash-link" aria-label="用例3的直接链接" title="用例3的直接链接">​</a></h2><p>在当前目录中的"includes"目录里的所有文件中,查找字符串"the menu".</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">:vimgrep /the menu/ ./includes/*.*</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>搜索完毕后可以使用<code>copen</code>或者<code>cw</code>命令来打开搜索的结果。使用<code>jk</code>来移动选中行，回车可以跳到对应的文件。</p><p><code>copen</code> 后面可以指定窗口的高度。</p><p>注意当去到搜到到的文件后，当前的窗口会被该文件覆盖，那么怎么回到原来的文件，</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">ctrl+^</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>更多的信息可以使用 <code>:help vimgrep</code> 来查看。</p><blockquote><p>转自：<a href="http://www.xuebuyuan.com/1116549.html" target="_blank" rel="noopener noreferrer"> vim使用vimgrep在其他文件中或者文件夹中搜索字符串 | 学步园</a></p></blockquote>]]></content:encoded>
            <category>vim</category>
            <category>tools</category>
        </item>
        <item>
            <title><![CDATA[linux 终端下上传下载命令 sftp,scp]]></title>
            <link>https://inhere.github.io/blog/use-scp-or-sftp-up-down-files-in-linux</link>
            <guid>https://inhere.github.io/blog/use-scp-or-sftp-up-down-files-in-linux</guid>
            <pubDate>Fri, 15 Jul 2016 17:40:00 GMT</pubDate>
            <description><![CDATA[在linux或者mac 终端下上传下载命令 sftp,scp 的简单使用介绍]]></description>
            <content:encoded><![CDATA[<p>在linux或者mac 终端下上传下载命令 sftp,scp 的简单使用介绍</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="scp">scp<a href="#scp" class="hash-link" aria-label="scp的直接链接" title="scp的直接链接">​</a></h2><p>帮助命令： <code>man scp</code></p><p>scp功能：
下载远程文件或者目录到本地,
如果想上传或者想下载目录，最好的办法是采用tar压缩一下，是最明智的选择.</p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="从远程主机下载东西到本地">从远程主机下载东西到本地<a href="#从远程主机下载东西到本地" class="hash-link" aria-label="从远程主机下载东西到本地的直接链接" title="从远程主机下载东西到本地的直接链接">​</a></h3><ul><li>拷贝文件命令</li></ul><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">scp user@host:/path/file /localpath  # 即 scp 用户名@IP:/文件路径  /本地文件路径</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li>如果拷目录</li></ul><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">scp -r user@host:/dirpath /localpath  # 即 scp -r 用户名@IP:/目录路径  /本地文件路径</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li>一些参数</li></ul><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">-P 设置连接端口</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-v 和大多数 linux 命令中的 -v 意思一样 , 用来显示进度 . 可以用来查看连接 , 认证 , 或是配置错误 .</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-C 使能压缩选项 .</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-4 强行使用 IPV4 地址 .</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-6 强行使用 IPV6 地址 .</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="上传文件或目录到远程主机">上传文件或目录到远程主机<a href="#上传文件或目录到远程主机" class="hash-link" aria-label="上传文件或目录到远程主机的直接链接" title="上传文件或目录到远程主机的直接链接">​</a></h3><ul><li>上传文件 到 远程主机 </li></ul><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">scp localfile user@host:/dirpath  # 即 scp 文件路径  远程主机用户名@ip:/存放文件的路径</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li>上传目录 到 远程主机   </li></ul><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">scp -r localdir user@host:/dirpath # 即 scp -r  本地目录路径   远程主机用户名@ip:/存放文件路径</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><hr><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="sftp">sftp<a href="#sftp" class="hash-link" aria-label="sftp的直接链接" title="sftp的直接链接">​</a></h2><p>sftp是一个交互式文件传输程式。它类似于 ftp, 但它进行加密传输，比FTP有更高的安全性。
下边就简单介绍一下如何远程连接主机，进行文件的上传和下载，以及一些相关操作。</p><p>举例，如远程主机的 IP 是 <code>202.206.64.33</code>或者是域名<code>www.teste.com</code> 户名是  <code>user</code> ,在命令行模下:</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">sftp user@202.206.64.33</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 或者  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sftp user@www.test.com</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 回车提示输入密码。进入提示符</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sftp&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sftp&gt; help  获得帮助</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>如果登陆远程机器不是为了上传下载文件，而是要修改远程主机上的某些文件。可以
<code>ssh  user@202.206.64.33</code> （其实sftp就是ssh 的一个程式。）</p><p>在sftp中get表示下载即得到,put表示上传即放置</p><div class="language-shell codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-shell codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">sftp</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> get 远程主机下文件的路径   将文件保存到本地电脑的路径</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sftp</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> put 本地文件的路径 将文件版保存到远程主机的路径</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 将从远程主机的  /var/www/fuyatao/目录下将 index.php 下载到本地  /home/fuyatao/目录下。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sftp</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> get /var/www/fuyatao/index.php  /home/fuyatao/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 把本地 /home/fuyatao/downloads/目录下的 linuxgl.pdf文件上传至远程主机/var/www/fuyatao/ 目录下</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sftp</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> put /home/fuyatao/downloads/Linuxgl.pdf /var/www/fuyatao/</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>你如果不知道远程主机的目录是什么样，
<code>pwd</code>命令可以帮您查询远程主机的当前路径。查询本机当前工作目录 <code>lpwd</code>.
改变路径可以用cd ，改变本机路径可以用 lcd;
<code>ls rm rmdir mkdir </code>这些命令都可以使用。同理调用本机都是加 l , 即 <code>lls lrm</code>.</p><blockquote><p>要离开sftp，用exit 或quit、 bye 均可。详细情况可以查阅 man  sftp.</p></blockquote><hr><blockquote><p>记住：
在用sftp和ftp的时候，所有文件和目录都要手动输入，tab补全键在这两个命令中没有作用。录入的时候细心！</p></blockquote><blockquote><p>form <a href="http://blog.163.com/chunoo@126/blog/static/814473532010676351769/" target="_blank" rel="noopener noreferrer">blog.163.com</a></p></blockquote>]]></content:encoded>
            <category>linux</category>
            <category>macOS</category>
            <category>sftp</category>
            <category>scp</category>
        </item>
        <item>
            <title><![CDATA[composer.json 中的 scripts 脚本]]></title>
            <link>https://inhere.github.io/blog/scripts-in-php-composer-json</link>
            <guid>https://inhere.github.io/blog/scripts-in-php-composer-json</guid>
            <pubDate>Tue, 17 May 2016 17:21:00 GMT</pubDate>
            <description><![CDATA['scripts'脚本 -- 在 Composer 中，可以是一个 PHP 回调（定义为静态方法）或任何命令行可执行的命令。脚本对于在 Composer 运行过程中，执行一个资源包的自定义代码或包专用命令是非常有用的。]]></description>
            <content:encoded><![CDATA[<p>'scripts'脚本 -- 在 Composer 中，可以是一个 PHP 回调（定义为静态方法）或任何命令行可执行的命令。脚本对于在 Composer 运行过程中，执行一个资源包的自定义代码或包专用命令是非常有用的。 </p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="什么是脚本">什么是脚本？<a href="#什么是脚本" class="hash-link" aria-label="什么是脚本？的直接链接" title="什么是脚本？的直接链接">​</a></h2><p>一个脚本，在 Composer 中，可以是一个 PHP 回调（定义为静态方法）或任何命令行可执行的命令。脚本对于在 Composer 运行过程中，执行一个资源包的自定义代码或包专用命令是非常有用的。</p><blockquote><p><strong>注意：</strong> 只有在根包的 <code>composer.json</code> 中定义的脚本才会被执行。即便根包的外部依赖定义了其自身的脚本，Composer 也不会去执行这些额外的脚本。</p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="事件名称">事件名称<a href="#事件名称" class="hash-link" aria-label="事件名称的直接链接" title="事件名称的直接链接">​</a></h2><p>Composer 在运行过程中将会触发以下事件：</p><table><thead><tr><th>事件名称</th><th>详细说明</th></tr></thead><tbody><tr><td><code>pre-install-cmd</code></td><td>在 install 命令执行前触发。</td></tr><tr><td><code>post-install-cmd</code></td><td>在 install 命令执行后触发。</td></tr><tr><td><code>pre-update-cmd</code></td><td>在 update 命令执行前触发。</td></tr><tr><td><code>post-update-cmd</code></td><td>在 update 命令执行后触发。</td></tr><tr><td><code>pre-status-cmd</code></td><td>在 status 命令执行前触发。</td></tr><tr><td><code>post-status-cmd</code></td><td>在 status 命令执行后触发。</td></tr><tr><td><code>pre-package-install</code></td><td>在资源包安装前触发。</td></tr><tr><td><code>post-package-install</code></td><td>在资源包安装后触发。</td></tr><tr><td><code>pre-package-update</code></td><td>在资源包更新前触发。</td></tr><tr><td><code>post-package-update</code></td><td>在资源包更新后触发。</td></tr><tr><td><code>pre-package-uninstall</code></td><td>在资源包被卸载前触发。</td></tr><tr><td><code>post-package-uninstall</code></td><td>在资源包被卸载后触发。</td></tr><tr><td><code>pre-autoload-dump</code></td><td>在自动加载器被转储前触发，无论是 <code>install/update</code> 还是 <code>dump-autoload</code> 命令都会触发。</td></tr><tr><td><code>post-autoload-dump</code></td><td>在自动加载器被转储后触发，无论是 <code>install/update</code> 还是 <code>dump-autoload</code> 命令都会触发。</td></tr><tr><td><code>post-root-package-install</code></td><td>在 <code>create-project</code> 命令期间，根包安装完成后触发。</td></tr><tr><td><code>post-create-project-cmd</code></td><td>在 create-project 命令执行后触发。</td></tr><tr><td><code>pre-archive-cmd</code></td><td>occurs before the archive command is executed.</td></tr><tr><td><code>post-archive-cmd</code></td><td>occurs after the archive command is executed.</td></tr></tbody></table><blockquote><p><strong>注意：</strong>Composer 不会去执行任何依赖包中定义的 install 或 update 相关脚本。因此你不应该在依赖包中申明 <code>pre-update-cmd</code> 或 <code>pre-install-cmd</code>。如果你需要在执行 install 或 update 命令前使用脚本，请确保它们已被定义在根包中。</p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="定义脚本">定义脚本<a href="#定义脚本" class="hash-link" aria-label="定义脚本的直接链接" title="定义脚本的直接链接">​</a></h2><p>在 <code>composer.json</code> 的根 JSON 对象中应该有一个名为 "scripts" 的属性，它包含有一系列的事件名称，以及对应的事件脚本。一个事件的脚本可以被定义为一个字符串（仅适用于单个脚本）或数组（单个或多个脚本）。</p><p>对于任何给定的事件：</p><ul><li>脚本将按照事件和定义的顺序触发。</li><li>一个脚本数组可以包含 PHP 回调和命令行可执行命令。</li><li>由 PHP 类文件包含的回调，其存放的位置必须确保 Composer 能够正确的载入。</li></ul><p>脚本定义实例：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "scripts": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "post-update-cmd": "MyVendor\\MyClass::postUpdate",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "post-package-install": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "MyVendor\\MyClass::postPackageInstall"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "post-install-cmd": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "MyVendor\\MyClass::warmCache",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "phpunit -c app/"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>使用前面定义的例子，这里的 MyVendor\MyClass 类，就可以被使用来执行 PHP 的回调：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">&lt;?php</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">namespace MyVendor;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">use Composer\Script\Event;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class MyClass</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static function postUpdate(Event $event)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        $composer = $event-&gt;getComposer();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // do stuff</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static function postPackageInstall(Event $event)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        $installedPackage = $event-&gt;getOperation()-&gt;getPackage();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // do stuff</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static function warmCache(Event $event)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // make cache toasty</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>当一个事件被触发，Composer 的内部事件处理程序将接收一个 <code>Composer\Script\Event</code> 对象，这是传递给您的 PHP 回调的第一个参数。这个 Event 对象拥有一些 getter 方法来帮助你取得当前事件的上下文：</p><ul><li>getComposer(): 返回当前的 Composer\Composer 对象实例。</li><li>getName(): 返回事件名称的字符串。</li><li>getIO(): 返回当前的 输入\输出 流，它实现了 Composer\IO\IOInterface 接口，以便在控制台中使用。</li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="手动运行脚本">手动运行脚本<a href="#手动运行脚本" class="hash-link" aria-label="手动运行脚本的直接链接" title="手动运行脚本的直接链接">​</a></h2><p>如果你想手动运行事件脚本，可以使用下面的语法结构：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">composer run-script [--dev] [--no-dev] script</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>例如 <code>composer run-script post-install-cmd</code> 将会运行所有 <code>post-install-cmd</code> 事件下定义的脚本。</p><blockquote><p>转自：<!-- -->[composer脚本]<a href="http://docs.phpcomposer.com/articles/scripts.html" target="_blank" rel="noopener noreferrer">http://docs.phpcomposer.com/articles/scripts.html</a></p></blockquote>]]></content:encoded>
            <category>php</category>
            <category>composer</category>
        </item>
        <item>
            <title><![CDATA[Nginx配置文件中的变量的编写使用]]></title>
            <link>https://inhere.github.io/blog/custom-vars-usage-in-ngnix-config</link>
            <guid>https://inhere.github.io/blog/custom-vars-usage-in-ngnix-config</guid>
            <pubDate>Fri, 13 May 2016 17:21:00 GMT</pubDate>
            <description><![CDATA[Nginx配置文件中的变量的编写使用,包括从常用的rewrite等方面来深入变量的相关定义,需要的朋友可以参考下]]></description>
            <content:encoded><![CDATA[<p>Nginx配置文件中的变量的编写使用,包括从常用的rewrite等方面来深入变量的相关定义,需要的朋友可以参考下 </p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="nginx-用户变量">Nginx 用户变量<a href="#nginx-用户变量" class="hash-link" aria-label="Nginx 用户变量的直接链接" title="Nginx 用户变量的直接链接">​</a></h2><p>nginx 的配置文件使用的就是一门微型的编程语言，许多真实世界里的 Nginx 配置文件其实就是一个一个的小程序。当然，是不是“图灵完全的”暂且不论，至少据我观察，它在设计上受 Perl 和 Bourne shell 这两种语言的影响很大。在这一点上，相比 Apache 和 Lighttpd 等其他 Web 服务器的配置记法，不能不说算是 Nginx 的一大特色了。既然是编程语言，一般也就少不了“变量”这种东西（当然，Haskell 这样奇怪的函数式语言除外了）。
熟悉 Perl、Bourne shell、C/C++ 等命令式编程语言的朋友肯定知道，变量说白了就是存放“值”的容器。而所谓“值”，在许多编程语言里，既可以是 3.14 这样的数值，也可以是 hello world 这样的字符串，甚至可以是像数组、哈希表这样的复杂数据结构。然而，在 Nginx 配置中，变量只能存放一种类型的值，因为也只存在一种类型的值，那就是字符串。
比如我们的 nginx.conf 文件中有下面这一行配置：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">set $a "hello world"; </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>我们使用了标准 ngx_rewrite 模块的 set 配置指令对变量 $a 进行了赋值操作。特别地，我们把字符串 hello world 赋给了它。
我们看到，Nginx 变量名前面有一个 $ 符号，这是记法上的要求。所有的 Nginx 变量在 Nginx 配置文件中引用时都须带上 $ 前缀。这种表示方法和 Perl、PHP 这些语言是相似的。
虽然 $ 这样的变量前缀修饰会让正统的 Java 和 C# 程序员不舒服，但这种表示方法的好处也是显而易见的，那就是可以直接把变量嵌入到字符串常量中以构造出新的字符串：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">set $a hello;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set $b "$a, $a"; </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这里我们通过已有的 Nginx 变量 $a 的值，来构造变量 $b 的值，于是这两条指令顺序执行完之后，$a 的值是 hello，而 $b 的值则是 hello, hello. 这种技术在 Perl 世界里被称为“变量插值”（variable interpolation），它让专门的字符串拼接运算符变得不再那么必要。我们在这里也不妨采用此术语。
我们来看一个比较完整的配置示例：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">server {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  listen 8080;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  location /test {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    set $foo hello;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "foo: $foo";  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">} </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这个例子省略了 nginx.conf 配置文件中最外围的 http 配置块以及 events 配置块。使用 curl 这个 HTTP 客户端在命令行上请求这个 /test 接口，我们可以得到</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ curl 'http://localhost:8080/test'  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">foo: hello </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这里我们使用第三方 ngx_echo 模块的 echo 配置指令将 $foo 变量的值作为当前请求的响应体输出。
我们看到，echo 配置指令的参数也支持“变量插值”。不过，需要说明的是，并非所有的配置指令都支持“变量插值”。事实上，指令参数是否允许“变量插值”，取决于该指令的实现模块。
如果我们想通过 echo 指令直接输出含有“美元符”（$）的字符串，那么有没有办法把特殊的 $ 字符给转义掉呢？答案是否定的（至少到目前最新的 Nginx 稳定版 1.0.10）。不过幸运的是，我们可以绕过这个限制，比如通过不支持“变量插值”的模块配置指令专门构造出取值为 $ 的 Nginx 变量，然后再在 echo 中使用这个变量。看下面这个例子：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">geo $dollar {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  default "$";  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">server {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  listen 8080;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  location /test {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "This is a dollar sign: $dollar";  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">} </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>测试结果如下：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ curl 'http://localhost:8080/test'  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">This is a dollar sign: $ </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这里用到了标准模块 ngx_geo 提供的配置指令 geo 来为变量 $dollar 赋予字符串 "$"，这样我们在下面需要使用美元符的地方，就直接引用我们的 $dollar 变量就可以了。其实 ngx_geo 模块最常规的用法是根据客户端的 IP 地址对指定的 Nginx 变量进行赋值，这里只是借用它以便“无条件地”对我们的 $dollar 变量赋予“美元符”这个值。
在“变量插值”的上下文中，还有一种特殊情况，即当引用的变量名之后紧跟着变量名的构成字符时（比如后跟字母、数字以及下划线），我们就需要使用特别的记法来消除歧义，例如：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">server {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  listen 8080;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  location /test {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    set $first "hello ";  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "${first}world";  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">} </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这里，我们在 echo 配置指令的参数值中引用变量 $first 的时候，后面紧跟着 world 这个单词，所以如果直接写作 "$firstworld" 则 Nginx “变量插值”计算引擎会将之识别为引用了变量 $firstworld. 为了解决这个难题，Nginx 的字符串记法支持使用花括号在 $ 之后把变量名围起来，比如这里的 ${first}. 上面这个例子的输出是：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ curl 'http://localhost:8080/test  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">hello world </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>set 指令（以及前面提到的 geo 指令）不仅有赋值的功能，它还有创建 Nginx 变量的副作用，即当作为赋值对象的变量尚不存在时，它会自动创建该变量。比如在上面这个例子中，如果 $a 这个变量尚未创建，则 set 指令会自动创建 $a 这个用户变量。如果我们不创建就直接使用它的值，则会报错。例如</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">server {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  listen 8080;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  location /bad {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo $foo;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> } </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>此时 Nginx 服务器会拒绝加载配置:</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">[emerg] unknown "foo" variable</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>是的，我们甚至都无法启动服务！</p><p>有趣的是，<strong>Nginx 变量的创建和赋值操作发生在全然不同的时间阶段</strong>。</p><ul><li>Nginx 变量的创建只能发生在 Nginx 配置加载的时候，或者说 Nginx 启动的时候；</li><li>赋值操作则只会发生在请求实际处理的时候。</li></ul><blockquote><p>这意味着不创建而直接使用变量会导致启动失败，同时也意味着我们无法在请求处理时动态地创建新的 Nginx 变量。</p></blockquote><p>Nginx 变量一旦创建，其变量名的可见范围就是整个 Nginx 配置，甚至可以跨越不同虚拟主机的 server 配置块。
我们来看一个例子：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">server {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  listen 8080;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  location /foo {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "foo = [$foo]";  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  location /bar {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    set $foo 32;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "foo = [$foo]";  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">} </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这里我们在 <code>location /bar</code> 中用 set 指令创建了变量 <code>$foo</code>，于是<strong>在整个配置文件中这个变量都是可见的</strong>，因此我们可以在 location /foo 中直接引用这个变量而不用担心 Nginx 会报错。</p><p>下面是在命令行上用 curl 工具访问这两个接口的结果：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ curl 'http://localhost:8080/foo'  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">foo = []  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ curl 'http://localhost:8080/bar'  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">foo = [32]  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ curl 'http://localhost:8080/foo'  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">foo = [] </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>从这个例子我们可以看到，set 指令因为是在 <code>location /bar</code> 中使用的，所以<strong>赋值操作只会在访问 /bar 的请求中执行</strong>。而请求 <code>/foo</code> 接口时，我们总是得到空的 $foo 值，因为<strong>用户变量未赋值就输出的话，得到的便是空字符串</strong>。</p><p>从这个例子我们可以窥见的另一个重要特性是，<strong>Nginx 变量名的可见范围虽然是整个配置，但每个请求都有所有变量的独立副本，或者说都有各变量用来存放值的容器的独立副本，彼此互不干扰</strong>。比如前面我们请求了 <code>/bar</code> 接口后，<code>$foo</code> 变量被赋予了值 32，但它丝毫不会影响后续对 <code>/foo</code> 接口的请求所对应的 $foo 值（<strong>它仍然是空的！</strong>），因为各个请求都有自己独立的 $foo 变量的副本。
对于 Nginx 新手来说，最常见的错误之一，就是将 Nginx 变量理解成某种在请求之间全局共享的东西，或者说“全局变量”。而事实上，Nginx 变量的生命期是不可能跨越请求边界的。</p><p>关于 nginx 变量的另一个常见误区是认为变量容器的生命期，是与 <code>location</code> 配置块绑定的。</p><p>其实不然,我们来看一个涉及“内部跳转”的例子：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">server {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  listen 8080;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  location /foo {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    set $a hello;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo_exec /bar;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  location /bar {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "a = [$a]";  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">} </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这里我们在 location /foo 中，使用第三方模块 <code>ngx_echo</code> 提供的 <code>echo_exec</code> 配置指令，发起到 <code>location /bar</code> 的“内部跳转”。所谓“内部跳转”，就是在处理请求的过程中，于服务器内部，<em>从一个 <code>location</code> 跳转到另一个 <code>location</code> 的过程</em>。这不同于利用 HTTP 状态码 301 和 302 所进行的“外部跳转”，因为后者是由 HTTP 客户端配合进行跳转的，而且在客户端，用户可以通过浏览器地址栏这样的界面，看到请求的 URL 地址发生了变化。内部跳转和 Bourne shell（或 Bash）中的 exec 命令很像，都是“有去无回”。另一个相近的例子是 C 语言中的 goto 语句。
既然是内部跳转，当前正在处理的请求就还是原来那个，只是当前的 <code>location</code> 发生了变化，所以还是原来的那一套 nginx 变量的容器副本。对应到上例，如果我们请求的是 /foo 这个接口，那么整个工作流程是这样的：</p><ul><li>先在 location /foo 中通过 set 指令将 $a 变量的值赋为字符串 hello，</li><li>然后通过 echo_exec 指令发起内部跳转，</li><li>又进入到 <code>location /bar</code> 中，</li><li>再输出 $a 变量的值。</li></ul><p>因为 $a 还是原来的 $a，所以我们可以期望得到 hello 这行输出。测试证实了这一点：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ curl localhost:8080/foo  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">a = [hello] </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>但如果我们从客户端直接访问 <code>/bar</code> 接口，就会得到空的 <code>$a</code> 变量的值，因为它依赖于 <code>location /foo</code> 来对 $a 进行初始化。从上面这个例子我们看到，<strong>一个请求在其处理过程中，即使经历多个不同的 location 配置块，它使用的还是同一套 Nginx 变量的副本</strong>。这里，我们也首次涉及到了“内部跳转”这个概念。
值得一提的是，标准 <code>ngx_rewrite</code> 模块的 rewrite 配置指令其实也可以发起“内部跳转”，例如上面那个例子用 rewrite 配置指令可以改写成下面这样的形式：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">server {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  listen 8080;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  location /foo {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    set $a hello;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    rewrite ^ /bar;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  location /bar {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "a = [$a]";  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>其效果和使用 echo_exec 是完全相同的。后面我们还会专门介绍这个 rewrite 指令的更多用法，比如发起 301 和 302 这样的“外部跳转”。从上面这个例子我们看到，Nginx 变量值容器的生命期是与当前正在处理的请求绑定的，而与 location 无关。前面我们接触到的都是通过 set 指令隐式创建的 Nginx 变量。这些变量我们一般称为“用户自定义变量”，或者更简单一些，“用户变量”。既然有“用户自定义变量”，自然也就有由 Nginx 核心和各个 Nginx 模块提供的“预定义变量”，或者说“内建变量”（builtin variables）。</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="nginx-内建变量">Nginx 内建变量<a href="#nginx-内建变量" class="hash-link" aria-label="Nginx 内建变量的直接链接" title="Nginx 内建变量的直接链接">​</a></h2><p>Nginx 内建变量最常见的用途就是获取关于请求或响应的各种信息。例如由 ngx_http_core 模块提供的内建变量 $uri，可以用来获取当前请求的 URI（经过解码，并且不含请求参数），而 $request_uri 则用来获取请求最原始的 URI （未经解码，并且包含请求参数）。请看下面这个例子：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">location /test {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  echo "uri = $uri";  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  echo "request_uri = $request_uri";  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">} </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这里为了简单起见，连 server 配置块也省略了，和前面所有示例一样，我们监听的依然是 8080 端口。在这个例子里，我们把 $uri 和 $request_uri 的值输出到响应体中去。下面我们用不同的请求来测试一下这个 /test 接口：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ curl 'http://localhost:8080/test'  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">uri = /test  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">request_uri = /test  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ curl 'http://localhost:8080/test?a=3&amp;b=4'  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">uri = /test  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">request_uri = /test?a=3&amp;b=4 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ curl 'http://localhost:8080/test/hello%20world?a=3&amp;b=4'  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">uri = /test/hello world  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">request_uri = /test/hello%20world?a=3&amp;b=4 </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>另一个特别常用的内建变量其实并不是单独一个变量，而是有无限多变种的一群变量，即名字以 arg_ 开头的所有变量，我们估且称之为 $arg_XXX 变量群。一个例子是 $arg_name，这个变量的值是当前请求名为 name 的 URI 参数的值，而且还是未解码的原始形式的值。我们来看一个比较完整的示例：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">location /test {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  echo "name: $arg_name";  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  echo "class: $arg_class";  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">} </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>然后在命令行上使用各种参数组合去请求这个 /test 接口：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ curl 'http://localhost:8080/test'  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">name:  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class:  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ curl 'http://localhost:8080/test?name=Tom&amp;class=3'  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">name: Tom  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class: 3 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ curl 'http://localhost:8080/test?name=hello%20world&amp;class=9'  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">name: hello%20world  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class: 9 </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>其实 $arg_name 不仅可以匹配 name 参数，也可以匹配 NAME 参数，抑或是 Name，等等：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ curl 'http://localhost:8080/test?NAME=Marry'  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">name: Marry  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class:  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ curl 'http://localhost:8080/test?Name=Jimmy'  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">name: Jimmy  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class: </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>Nginx 会在匹配参数名之前，自动把原始请求中的参数名调整为全部小写的形式。</p></blockquote><p>如果你想对 URI 参数值中的 <code>%XX</code> 这样的编码序列进行解码，可以使用第三方 <code>ngx_set_misc</code> 模块提供的 <code>set_unescape_uri</code> 配置指令：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">location /test {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  set_unescape_uri $name $arg_name;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  set_unescape_uri $class $arg_class;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  echo "name: $name";  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  echo "class: $class";  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">} </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>现在我们再看一下效果：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ curl 'http://localhost:8080/test?name=hello%20world&amp;class=9'  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">name: hello world  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class: 9 </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>空格果然被解码出来了！
从这个例子我们同时可以看到，这个 <code>set_unescape_uri</code> 指令也像 set 指令那样，拥有自动创建 Nginx 变量的功能。后面我们还会专门介绍到 ngx_set_misc 模块。像 <code>$arg_XXX</code> 这种类型的变量拥有无穷无尽种可能的名字，所以它们并不对应任何存放值的容器。而且这种变量在 Nginx 核心中是经过特别处理的，第三方 Nginx 模块是不能提供这样充满魔法的内建变量的。</p><blockquote><p>类似 <code>$arg_XXX</code> 的内建变量还有不少，比如用来取 cookie 值的 <code>$cookie_XXX</code> 变量群，用来取请求头的 <code>$http_XXX</code> 变量群，以及用来取响应头的 <code>$sent_http_XXX</code> 变量群。这里就不一一介绍了，感兴趣的读者可以参考 ngx_http_core 模块的官方文档。需要指出的是，许多内建变量都是只读的，比如我们刚才介绍的 <code>$uri</code> 和 <code>$request_uri</code>. 对只读变量进行赋值是应当绝对避免的，因为会有意想不到的后果，比如：</p></blockquote><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">location /bad {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  set $uri /blah;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  echo $uri;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> } </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这个有问题的配置会让 Nginx 在启动的时候报出一条令人匪夷所思的错误：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">[emerg] the duplicate "uri" variable in ... </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>如果你尝试改写另外一些只读的内建变量，比如 $arg_XXX 变量，在某些 Nginx 的版本中甚至可能导致进程崩溃。</p></blockquote><p>也有一些内建变量是支持改写的，其中一个例子是 $args. 这个变量在读取时返回当前请求的 URL 参数串（即请求 URL 中问号后面的部分，如果有的话 ），而在赋值时可以直接修改参数串。我们来看一个例子：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">location /test {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  set $orig_args $args;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  set $args "a=3&amp;b=4";  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  echo "original args: $orig_args";  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  echo "args: $args";  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">} </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这里我们把原始的 URL 参数串先保存在 $orig_args 变量中，然后通过改写 $args 变量来修改当前的 URL 参数串，最后我们用 echo 指令分别输出 $orig_args 和 $args 变量的值。接下来我们这样来测试这个 /test 接口：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ curl 'http://localhost:8080/test'  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">original args:  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">args: a=3&amp;b=4 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ curl 'http://localhost:8080/test?a=0&amp;b=1&amp;c=2'  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">original args: a=0&amp;b=1&amp;c=2 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">args: a=3&amp;b=4 </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>在第一次测试中，我们没有设置任何 URL 参数串，所以输出 <code>$orig_args</code> 变量的值时便得到空。而在第一次和第二次测试中，无论我们是否提供 URL 参数串，参数串都会在 location /test 中被强行改写成 a=3&amp;b=4.
需要特别指出的是，这里的 $args 变量和 $arg_XXX 一样，也不再使用属于自己的存放值的容器。当我们读取 $args 时，nginx 会执行一小段代码，从 Nginx 核心中专门存放当前 URL 参数串的位置去读取数据；而当我们改写 $args 时，Nginx 会执行另一小段代码，对相同位置进行改写。Nginx 的其他部分在需要当前 URL 参数串的时候，都会从那个位置去读数据，所以我们对 $args 的修改会影响到所有部分的功能。我们来看一个例子：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">location /test {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  set $orig_a $arg_a;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  set $args "a=5";  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  echo "original a: $orig_a";  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  echo "a: $arg_a";  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">} </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这里我们先把内建变量 $arg_a 的值，即原始请求的 URL 参数 a 的值，保存在用户变量 $orig_a 中，然后通过对内建变量 $args 进行赋值，把当前请求的参数串改写为 a=5 ，最后再用 echo 指令分别输出 $orig_a 和 $arg_a 变量的值。因为对内建变量 $args 的修改会直接导致当前请求的 URL 参数串发生变化，因此内建变量 $arg_XXX 自然也会随之变化。测试的结果证实了这一点：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ curl 'http://localhost:8080/test?a=3'  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">original a: 3 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">a: 5 </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>我们看到，因为原始请求的 URL 参数串是 a=3, 所以 $arg_a 最初的值为 3, 但随后通过改写 $args 变量，将 URL 参数串又强行修改为 a=5, 所以最终 $arg_a 的值又自动变为了 5.我们再来看一个通过修改 $args 变量影响标准的 HTTP 代理模块 ngx_proxy 的例子：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">server {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  listen 8080;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  location /test {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    set $args "foo=1&amp;bar=2";  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    proxy_pass http://127.0.0.1:8081/args;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">server {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  listen 8081;  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  location /args {  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "args: $args";  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这里我们在 http 配置块中定义了两个虚拟主机。第一个虚拟主机监听 8080 端口，其 /test 接口自己通过改写 $args 变量，将当前请求的 URL 参数串无条件地修改为 foo=1&amp;bar=2. 然后 /test 接口再通过 ngx_proxy 模块的 proxy_pass 指令配置了一个反向代理，指向本机的 8081 端口上的 HTTP 服务 /args. 默认情况下，ngx_proxy 模块在转发 HTTP 请求到远方 HTTP 服务的时候，会自动把当前请求的 URL 参数串也转发到远方。而本机的 8081 端口上的 HTTP 服务正是由我们定义的第二个虚拟主机来提供的。我们在第二个虚拟主机的 location /args 中利用 echo 指令输出当前请求的 URL 参数串，以检查 /test 接口通过 ngx_proxy 模块实际转发过来的 URL 请求参数串。我们来实际访问一下第一个虚拟主机的 /test 接口：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ curl 'http://localhost:8080/test?blah=7'  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">args: foo=1&amp;bar=2 </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>我们看到，虽然请求自己提供了 URL 参数串 blah=7，但在 location /test 中，参数串被强行改写成了 foo=1&amp;bar=2. 接着经由 proxy_pass 指令将我们被改写掉的参数串转发给了第二个虚拟主机上配置的 /args 接口，然后再把 /args 接口的 URL 参数串输出。事实证明，我们对 $args 变量的赋值操作，也成功影响到了 ngx_proxy 模块的行为。
在读取变量时执行的这段特殊代码，在 Nginx 中被称为“取处理程序”（get handler）；而改写变量时执行的这段特殊代码，则被称为“存处理程序”（set handler）。不同的 Nginx 模块一般会为它们的变量准备不同的“存取处理程序”，从而让这些变量的行为充满魔法。其实这种技巧在计算世界并不鲜见。比如在面向对象编程中，类的设计者一般不会把类的成员变量直接暴露给类的用户，而是另行提供两个方法（method），分别用于该成员变量的读操作和写操作，这两个方法常常被称为“存取器”（accessor）。</p><blockquote><p>转自：<a href="http://www.jb51.net/article/77593.htm" target="_blank" rel="noopener noreferrer">浅析Nginx配置文件中的变量的编写使用</a></p></blockquote><p>更多nginx内置变量请看 <a href="/blog/nginx-built-in-vars-refers">nginx内置变量大全</a></p>]]></content:encoded>
            <category>ngnix</category>
        </item>
        <item>
            <title><![CDATA[Nginx内置变量大全]]></title>
            <link>https://inhere.github.io/blog/nginx-built-in-vars-refers</link>
            <guid>https://inhere.github.io/blog/nginx-built-in-vars-refers</guid>
            <pubDate>Fri, 13 May 2016 16:51:00 GMT</pubDate>
            <description><![CDATA[在配置基于nginx服务器的网站时，必然会用到 nginx内置变量 ，下面笔者将它整理成列表，把最新版本的变量列出来，以方便做配置时查询]]></description>
            <content:encoded><![CDATA[<p>在配置基于nginx服务器的网站时，必然会用到 <strong>nginx内置变量</strong> ，下面笔者将它整理成列表，把最新版本的变量列出来，以方便做配置时查询</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="nginx内置变量">nginx内置变量<a href="#nginx内置变量" class="hash-link" aria-label="nginx内置变量的直接链接" title="nginx内置变量的直接链接">​</a></h2><p>内置变量存放在  <code>ngx_http_core_module</code> 模块中，变量的命名方式和apache 服务器变量是一致的。
总而言之，这些变量代表着客户端请求头的内容，例如<code>$http_user_agent</code>, <code>$http_cookie</code>, 等等。下面是nginx支持的所有内置变量：</p><table><thead><tr><th>变量名</th><th>说明</th></tr></thead><tbody><tr><td><code>$arg_{name}</code></td><td>请求中的的参数名，即“?”后面的name=value形式的e.g. <code>?title=test</code> 可用 <code>$arg_title</code>获取到</td></tr><tr><td><code>$args</code></td><td>请求中的参数值</td></tr><tr><td><code>$binary_remote_addr</code></td><td>客户端地址的二进制形式, 固定长度为4个字节</td></tr><tr><td><code>$body_bytes_sent</code></td><td>传输给客户端的字节数，响应头不计算在内；这个变量和Apache的mod_log_config模块中的“%B”参数保持兼容</td></tr><tr><td><code>$bytes_sent</code></td><td>传输给客户端的字节数 (1.3.8, 1.2.5)</td></tr><tr><td><code>$connection</code></td><td>TCP连接的序列号 (1.3.8, 1.2.5)</td></tr><tr><td><code>$connection_requests</code></td><td>TCP连接当前的请求数量 (1.3.8, 1.2.5)</td></tr><tr><td><code>$content_length</code></td><td>“Content-Length” 请求头字段</td></tr><tr><td><code>$content_type</code></td><td>“Content-Type” 请求头字段</td></tr><tr><td><code>$cookie_name</code></td><td>cookie名称</td></tr><tr><td><code>$document_root</code></td><td>当前请求的文档根目录或别名</td></tr><tr><td><code>$document_uri</code></td><td>同 <code>$uri</code></td></tr><tr><td><code>$host</code></td><td>优先级如下：HTTP请求行的主机名&gt;”HOST”请求头字段&gt;符合请求的服务器名</td></tr><tr><td><code>$hostname</code></td><td>主机名</td></tr><tr><td><code>$http_{name}</code></td><td>匹配任意请求头字段；变量名中的后半部分“name”可以替换成任意请求头字段，如在配置文件中需要获取http请求头：“Accept-Language”，那么将“－”替换为下划线，大写字母替换为小写，形如：<code>$http_accept_language</code>即可。</td></tr><tr><td><code>$https</code></td><td>如果开启了SSL安全模式，值为“on”，否则为空字符串。</td></tr><tr><td><code>$is_args</code></td><td>如果请求中有参数，值为“?”，否则为空字符串。</td></tr><tr><td><code>$limit_rate</code></td><td>用于设置响应的速度限制，详见 limit_rate。</td></tr><tr><td><code>$msec</code></td><td>当前的Unix时间戳 (1.3.9, 1.2.6)</td></tr><tr><td><code>$nginx_version</code></td><td>nginx版本</td></tr><tr><td><code>$pid</code></td><td>工作进程的PID</td></tr><tr><td><code>$pipe</code></td><td>如果请求来自管道通信，值为“p”，否则为“.” (1.3.12, 1.2.7)</td></tr><tr><td><code>$proxy_protocol_addr</code></td><td>获取代理访问服务器的客户端地址，如果是直接访问，该值为空字符串。(1.5.12)</td></tr><tr><td><code>$query_string</code></td><td>同 <code>$args</code></td></tr><tr><td><code>$realpath_root</code></td><td>当前请求的文档根目录或别名的真实路径，会将所有符号连接转换为真实路径。</td></tr><tr><td><code>$remote_addr</code></td><td>客户端地址</td></tr><tr><td><code>$remote_port</code></td><td>客户端端口</td></tr><tr><td><code>$remote_user</code></td><td>用于HTTP基础认证服务的用户名</td></tr><tr><td><code>$request</code></td><td>代表客户端的请求地址</td></tr><tr><td><code>$request_body</code></td><td>客户端的请求主体,此变量可在location中使用，将请求主体通过proxy_pass, fastcgi_pass, uwsgi_pass, 和 scgi_pass传递给下一级的代理服务器。</td></tr><tr><td><code>$request_body_file</code></td><td>将客户端请求主体保存在临时文件中。文件处理结束后，此文件需删除。如果需要之一开启此功能，需要设置client_body_in_file_only。如果将次文件传递给后端的代理服务器，需要禁用<code>request body</code>，即设置<code>proxy_pass_request_body off，fastcgi_pass_request_body off, uwsgi_pass_request_body off, or scgi_pass_request_body off</code> 。</td></tr><tr><td><code>$request_completion</code></td><td>如果请求成功，值为”OK”，如果请求未完成或者请求不是一个范围请求的最后一部分，则为空。</td></tr><tr><td><code>$request_filename</code></td><td>当前连接请求的文件路径，由root或alias指令与URI请求生成。</td></tr><tr><td><code>$request_length</code></td><td>请求的长度 (包括请求的地址, http请求头和请求主体) (1.3.12, 1.2.7)</td></tr><tr><td><code>$request_method</code></td><td>HTTP请求方法，通常为“GET”或“POST”</td></tr><tr><td><code>$request_time</code></td><td>处理客户端请求使用的时间 (1.3.9, 1.2.6); 从读取客户端的第一个字节开始计时。</td></tr><tr><td><code>$request_uri</code></td><td>这个变量等于包含一些客户端请求参数的原始URI，它无法修改，请查看<code>$uri</code>更改或重写URI，不包含主机名，例如：<code>/cnphp/test.php?arg=freemouse</code>。</td></tr><tr><td><code>$scheme</code></td><td>请求使用的Web协议, “http” 或 “https”</td></tr><tr><td><code>$sent_http_{name}</code></td><td>可以设置任意http响应头字段； 变量名中的后半部分“name”可以替换成任意响应头字段，如需要设置响应头Content-length，那么将“－”替换为下划线，大写字母替换为小写，形如：<code>$sent_http_content_length 4096</code>即可。</td></tr><tr><td><code>$server_addr</code></td><td>服务器端地址，需要注意的是：为了避免访问linux系统内核，应将ip地址提前设置在配置文件中。</td></tr><tr><td><code>$server_name</code></td><td>服务器名，<a href="http://www.cnphp.info" target="_blank" rel="noopener noreferrer">www.cnphp.info</a></td></tr><tr><td><code>$server_port</code></td><td>服务器端口</td></tr><tr><td><code>$server_protocol</code></td><td>服务器的HTTP版本, 通常为 “HTTP/1.0” 或 “HTTP/1.1”</td></tr><tr><td><code>$status</code></td><td>HTTP响应代码 (1.3.2, 1.2.2)</td></tr><tr><td><code>$tcpinfo_rtt, $tcpinfo_rttvar, $tcpinfo_snd_cwnd, $tcpinfo_rcv_space</code></td><td>客户端TCP连接的具体信息</td></tr><tr><td><code>$time_iso8601</code></td><td>服务器时间的ISO 8610格式 (1.3.12, 1.2.7)</td></tr><tr><td><code>$time_local</code></td><td>服务器时间（LOG Format 格式） (1.3.12, 1.2.7)</td></tr><tr><td><code>$uri</code></td><td>请求中的当前URI(不带请求参数，参数在<code>$args</code>中)，可以不同于浏览器传递的<code>$request_uri</code>的值，它可以通过内部重定向，或者使用index指令进行修改，$uri不包含主机名，如<code>/foo/bar.html</code>。</td></tr></tbody></table><blockquote><p>转自：<a href="http://www.cnphp.info/nginx-embedded-variables-lasted-version.html" target="_blank" rel="noopener noreferrer">最新版 nginx内置变量 大全</a></p></blockquote>]]></content:encoded>
            <category>nginx</category>
        </item>
        <item>
            <title><![CDATA[vim 使用记录]]></title>
            <link>https://inhere.github.io/blog/vim-usage-records</link>
            <guid>https://inhere.github.io/blog/vim-usage-records</guid>
            <pubDate>Mon, 11 Apr 2016 21:51:00 GMT</pubDate>
            <description><![CDATA[vim 使用记录, 常用快捷键和命令]]></description>
            <content:encoded><![CDATA[<p>vim 使用记录, 常用快捷键和命令</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="常用快捷键和命令">常用快捷键和命令<a href="#常用快捷键和命令" class="hash-link" aria-label="常用快捷键和命令的直接链接" title="常用快捷键和命令的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="回到-正常模式normal-mode">回到 正常模式<code>normal-mode</code><a href="#回到-正常模式normal-mode" class="hash-link" aria-label="回到-正常模式normal-mode的直接链接" title="回到-正常模式normal-mode的直接链接">​</a></h3><ol><li>在任何模式下 按 <code>Esc</code></li><li>按 <code>Ctrl+[</code></li></ol><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="常用快捷键">常用快捷键<a href="#常用快捷键" class="hash-link" aria-label="常用快捷键的直接链接" title="常用快捷键的直接链接">​</a></h3><ul><li><p>进入插入模式
<code>i</code> 在光标前开始插入
<code>a</code> 在光标后开始插入
<code>A</code> 在行末开始插入
<code>o</code> 在当前行的下一行新建空白行开始插入
<code>O</code> 在当前行的上一行新建空白行开始插入</p></li><li><p>跳转(在<code>normal-mode</code>下)</p></li></ul><table><thead><tr><th>按键</th><th>说明</th><th>延伸</th></tr></thead><tbody><tr><td><code>0</code></td><td>行头</td><td><code>y0</code> 从光标位置复制到行头 <code>d0</code> 从光标位置删除到行头</td></tr><tr><td><code>^</code></td><td>行头(非空白字符)</td><td><code>y^</code> 和 <code>d^</code> 同上</td></tr><tr><td><code>Shift+4\$</code></td><td>行尾</td><td><code>y\$</code> 从光标位置复制到行尾 <code>d\$</code> 从光标位置删除到行尾</td></tr><tr><td><code>w</code></td><td>(从左至右)前进一个单词</td><td><code>yw</code> 向前复制一个单词 <code>dw</code> 向前删除一个单词</td></tr><tr><td><code>W</code></td><td>前进一个单词(跳过符号，如空格等)</td><td>同上</td></tr><tr><td><code>b</code></td><td>后退一个单词</td><td><code>yb</code> 向后复制一个单词 <code>db</code> 向后删除一个单词</td></tr><tr><td><code>B</code></td><td>后退一个单词(跳过符号，如空格等)</td><td>同上</td></tr></tbody></table><ul><li>操作(在<code>normal-mode</code>下)</li></ul><table><thead><tr><th>按键</th><th>说明</th><th>延伸</th></tr></thead><tbody><tr><td><code>d</code></td><td>删除(选定的范围)</td><td><code>dd</code> 删除当前行， <code>dw</code> 向前删除一个单词，<code>db</code> 向后删除一个单词，</td></tr><tr><td><code>u</code></td><td>撤销上一步的操作</td><td></td></tr><tr><td><code>Ctrl+r</code></td><td>恢复上一步被撤销的操作</td><td></td></tr></tbody></table><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="使用问题记录">使用问题记录<a href="#使用问题记录" class="hash-link" aria-label="使用问题记录的直接链接" title="使用问题记录的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="改动了只读文件如何快速保存">改动了只读文件如何快速保存<a href="#改动了只读文件如何快速保存" class="hash-link" aria-label="改动了只读文件如何快速保存的直接链接" title="改动了只读文件如何快速保存的直接链接">​</a></h3><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">:w !sudo tee %</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="快速读取文件内容插入到当前光标位置">快速读取文件内容插入到当前光标位置<a href="#快速读取文件内容插入到当前光标位置" class="hash-link" aria-label="快速读取文件内容插入到当前光标位置的直接链接" title="快速读取文件内容插入到当前光标位置的直接链接">​</a></h3><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">:r  /etc/network/interface</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这样interface的文件内容就添加到当前文件光标所在位置了。</p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="如何临时回到-shell-环境又如何返回正在编辑的vim">如何临时回到 shell 环境，又如何返回正在编辑的vim<a href="#如何临时回到-shell-环境又如何返回正在编辑的vim" class="hash-link" aria-label="如何临时回到 shell 环境，又如何返回正在编辑的vim的直接链接" title="如何临时回到 shell 环境，又如何返回正在编辑的vim的直接链接">​</a></h3><ul><li><code>:sh</code> 将启动一个子 shell，使用 <code>C-d (即 ctrl+d)</code> 返回 vim</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="如何全选">如何全选<a href="#如何全选" class="hash-link" aria-label="如何全选的直接链接" title="如何全选的直接链接">​</a></h3><ul><li>先使用<code>G (即 Shift+g)</code> 跳到 文件尾， 按 <code>V (即 Ctrl+v)</code> 进入可视模式，再按 两次<code>g</code> 跳到文件头，即全选了所有文本</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="如何关闭vim一个窗口打开的多个文件中的一个">如何关闭vim一个窗口打开的多个文件中的一个？<a href="#如何关闭vim一个窗口打开的多个文件中的一个" class="hash-link" aria-label="如何关闭vim一个窗口打开的多个文件中的一个？的直接链接" title="如何关闭vim一个窗口打开的多个文件中的一个？的直接链接">​</a></h3><ul><li>切换到你想关闭的文件， 按 <code>ZZ (即 Shift+z+z)</code> 即可保存并退出</li><li>切换到你想关闭的文件窗口. 然后命令模式输入 <code>:bd</code> 即 <code>: buffers delete</code></li><li>使用 <code>:ls</code> 浏览所有缓冲区文件，找到要关闭的文件所在的编号，使用 <code>:bd number</code> e.g. <code>:bd 2</code></li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="如何重新载入文件">如何重新载入文件<a href="#如何重新载入文件" class="hash-link" aria-label="如何重新载入文件的直接链接" title="如何重新载入文件的直接链接">​</a></h3><ol><li>重新载入当前文件：<ul><li><code>:e</code></li><li><code>:e!</code>  放弃当前修改，强制重新载入</li></ul></li><li>重新载入所有打开的文件：<ul><li><code>:bufdo e</code> 或者 <code> :bufdo :e!</code></li></ul></li></ol><blockquote><p><code>:bufdo</code>命令表示把后面的命令应用到所有buffer中的文件。</p></blockquote><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="添加和删除注释的快捷方法-">添加和删除注释的快捷方法 ？<a href="#添加和删除注释的快捷方法-" class="hash-link" aria-label="添加和删除注释的快捷方法 ？的直接链接" title="添加和删除注释的快捷方法 ？的直接链接">​</a></h3><ul><li><p>按键操作：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">- 注释：`ctrl+v` （Window 则是 `ctrl+q` ） 进入列编辑模式,向下或向上移动光标,把需要注释的行的开头标记起来,</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>然后按大写的<code>L</code>,再插入注释符,比如<code>#</code> 或 <code>//</code>,再按<code>Esc</code>,就会全部注释了。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">- 删除：先按`v`,进入`visual模式`,横向选中列的个数(如”#”注释符号,需要选中两列),</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>再按<code>Esc</code>,再按<code>ctrl+v</code> 进入列编辑模式,向下或向上移动光标,选中注释部分,然后按<code>d</code>, 就会删除注释符号（e.g. <code>#</code>）。 </p></li></ul><blockquote><p>PS：当然不一定是shell的注释符”#”，也可以是”//”，或者其他任意的字符；vim才不知道什么是注释符呢，都是字符而已。</p></blockquote><ul><li>使用替换命令：(所有替换命令末尾加上c，每个替换都将需要用户确认。 如 <code>:%s/old/new/gc</code>，加上i则忽略大小写(ignore)。)<ul><li><code>:% s/^/\/\//g</code>     在全部内容的行首添加//号注释</li><li><code>:2,50 s/^/\/\//g</code>  在2~50行首添加//号注释</li><li><code>:2,50 s/^\/\///g</code>  在2~50行首删除//号</li><li><code> :.,109s/^/#/g</code>  这里我把光标移动到102行，前面的<code>.</code>代表当前行，表示从当前行到第109行所有开头都用#替换，</li><li><code> :102,109s/^/#/g</code> 也可以这样写 </li><li><code> :.,+7s/^/#/g</code> 再或者 <code>:102,+7s/^/#/g</code> 都是一样的效果。</li></ul></li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="使用帮助">使用帮助？<a href="#使用帮助" class="hash-link" aria-label="使用帮助？的直接链接" title="使用帮助？的直接链接">​</a></h3><blockquote><p><code>:help command</code> 查看指定命令的帮助
<code>Ctrl+]</code> 打开帮助文档中的文本链接， <code>Ctrl+t</code> 可返回之前的文件</p></blockquote><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="不小心在当前面板打开了新的文件覆盖了正在编辑的文件-如何返回之前打开的文件">不小心在当前面板打开了新的文件覆盖了正在编辑的文件. 如何返回之前打开的文件？<a href="#不小心在当前面板打开了新的文件覆盖了正在编辑的文件-如何返回之前打开的文件" class="hash-link" aria-label="不小心在当前面板打开了新的文件覆盖了正在编辑的文件. 如何返回之前打开的文件？的直接链接" title="不小心在当前面板打开了新的文件覆盖了正在编辑的文件. 如何返回之前打开的文件？的直接链接">​</a></h3><ol><li>使用 <code>Ctrl+^ (即 Ctrl+Shift+6)</code> 或者 <code>Ctrl+6</code> 可快速返回之前打开的文件，再按又会回到当前文件</li><li>使用 <code>:ls</code> 浏览所有缓冲区文件，找到要编辑的文件所在的编号，使用 <code>:b number</code> e.g. <code>:b 2</code></li></ol><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="前进和后退功能">前进和后退功能<a href="#前进和后退功能" class="hash-link" aria-label="前进和后退功能的直接链接" title="前进和后退功能的直接链接">​</a></h3><p>可以在文件中曾经浏览过的位置之间来回移动。在 vim 中使用 <code>Ctrl-o</code> 执行后退，使用 <code>Ctrl-i</code> 执行前进。</p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="格式化粘贴">格式化粘贴<a href="#格式化粘贴" class="hash-link" aria-label="格式化粘贴的直接链接" title="格式化粘贴的直接链接">​</a></h3><p>vim粘贴代码无法保持原来的格式，有注释的话还会把余下的行都给加上注释。很不方便。</p><p>在粘贴前： <code>:set paste</code> 再粘贴就不会有这个问题了，粘贴后 <code>:set nopaste</code> 还原设置。</p><blockquote><p>可以在配置里设置快捷键更方便切换</p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="tab-标签页的使用">tab 标签页的使用<a href="#tab-标签页的使用" class="hash-link" aria-label="tab 标签页的使用的直接链接" title="tab 标签页的使用的直接链接">​</a></h2><ul><li>命令：</li></ul><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">:tabnew [++opt选项] ［＋cmd］ 文件  建立对指定文件新的tab</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">:tabc       关闭当前的tab</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">:tabo       关闭所有其他的tab</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">:tabs       查看所有打开的tab</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">:tabp      前一个</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">:tabn      后一个</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">:tabfrist     第一个</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">:tablast     最后一个</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li>标准模式下：
<code>gt</code> , <code>gT</code> 可以直接在tab之间切换。
在前面加上数字也可以切到指定的tab, e.g. <code>2gt</code> 跳到第二个tab
更多可以查看帮助 <code>:help table</code> ， <code>help -p</code></li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="复制剪切">复制剪切<a href="#复制剪切" class="hash-link" aria-label="复制剪切的直接链接" title="复制剪切的直接链接">​</a></h3><p>Vim 有12个粘贴板依次编号为：<code>0、1、2、...、9、a、"、+</code>，其中 <code>+</code> 号为系统粘贴板，<code>”</code> 为临时粘贴板。系统剪切板中的内容可在其他程序中使用。
上面的复制指令都可以配合剪切板进行操作。</p><ul><li><code>"nyw</code> 复制当前单词到 n 号剪切板（双引号开始） </li><li><code>"np</code> 粘贴 n 号剪切板内容到当前位置后 </li><li><code>"+y</code> 复制当前行到系统剪切板</li><li><code>"+ny</code> 复制当前行加下面 n 行到系统剪切板</li><li><code>"+p</code> 粘贴系统剪切板内容到当前位置后</li></ul><blockquote><p>上面的操作若无法复制或剪切到系统剪切板，则可能是没有打开 <code>clipboard</code>。可用 <code>:ve</code>查看是否功能打开。</p></blockquote><ul><li><code>Shift-Insert</code> 也可复制系统剪切板的内容到vim</li></ul><p>另外的实现复制方法(来自<a href="http://blog.csdn.net/hejinjing_tom_com/article/details/25876287" target="_blank" rel="noopener noreferrer">在无clipboard 的vim 中， 如何使用系统剪切板</a>)：</p><ol><li>按住shift 键，鼠标选择。
按住 <code>Shift</code> 键不松手，用 <code>鼠标左键</code> 选择文本，再使用 鼠标右键 可打开系统右键菜单(此时仍然不要松开<code>Shift</code>)，选择<code>复制</code>即可。</li><li>设置选项，关闭mouse, 再用鼠标选择。</li></ol>]]></content:encoded>
            <category>vim</category>
            <category>usage</category>
        </item>
        <item>
            <title><![CDATA[git 使用记录]]></title>
            <link>https://inhere.github.io/blog/git-usage-records</link>
            <guid>https://inhere.github.io/blog/git-usage-records</guid>
            <pubDate>Mon, 11 Apr 2016 16:51:00 GMT</pubDate>
            <description><![CDATA[git 使用一些记录，常用命令和一些特殊选项]]></description>
            <content:encoded><![CDATA[<p><code>git</code> 使用一些记录，常用命令和一些特殊选项</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="pull和merge">pull和merge<a href="#pull和merge" class="hash-link" aria-label="pull和merge的直接链接" title="pull和merge的直接链接">​</a></h2><p>提倡添加选项 <code>--no-ff</code> -- <em>不使用快速合并</em></p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="文件权限修改引起的冲突">文件权限修改引起的冲突<a href="#文件权限修改引起的冲突" class="hash-link" aria-label="文件权限修改引起的冲突的直接链接" title="文件权限修改引起的冲突的直接链接">​</a></h2><p>通常是因为开发环境和运行环境是不同的系统，发布项目到线上时，很多时候需要修改文件的权限。但git把文件权限也列入了版本管理。</p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="解决办法">解决办法：<a href="#解决办法" class="hash-link" aria-label="解决办法：的直接链接" title="解决办法：的直接链接">​</a></h3><p>git中可以加入忽略文件权限的配置，具体如下：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ git config core.filemode false // 仅对当前项目有效</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ git config --global core.filemode false // 将配置应用到全局</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这样就设置了忽略文件权限。查看下配置：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ git config -l</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">alias.co=checkout</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">alias.br=branch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">core.filemode=false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">core.repositoryformatversion=0</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="git打tag">Git打TAG<a href="#git打tag" class="hash-link" aria-label="Git打TAG的直接链接" title="Git打TAG的直接链接">​</a></h2><blockquote><p>打TAG也就是发布版本</p></blockquote><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ git tag -a v1.2 -m "version 1.4"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ git push --tags</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="git打包源码">Git打包源码<a href="#git打包源码" class="hash-link" aria-label="Git打包源码的直接链接" title="Git打包源码的直接链接">​</a></h2><p>对Git管理的源码进行压缩打包，如果使用<code>tar xvzf xxxx.tag.gz xxxxx</code>的话并不是一个很好的选择，因为会将<code>.git/</code>目录下的中间文件全部压缩，如果只想要某一个版本的源码。
Git提供了<code>archive</code> 它会给打包一份纯净的代码。当然这个只适用于发部一个版本的源码，而不是备份Git管理的整套源码。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ git archive xxxx</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>xxx代表SHA-1 Hash值。</p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="git只clone最新版本代码不要git目录">Git只clone最新版本代码不要.git目录<a href="#git只clone最新版本代码不要git目录" class="hash-link" aria-label="Git只clone最新版本代码不要.git目录的直接链接" title="Git只clone最新版本代码不要.git目录的直接链接">​</a></h2><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">git clone --depth=1 git://someserver/somerepo dirformynewrepo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rm -rf !$/.git</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="不产生-merge-commit">不产生 merge commit<a href="#不产生-merge-commit" class="hash-link" aria-label="不产生 merge commit的直接链接" title="不产生 merge commit的直接链接">​</a></h2><p>通常 <code>merge/pull</code> 会产生一个 merge commit,让提交记录看起来不太美观，可以使用 <code>rebase</code>选项来合并commit</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ git pull --rebase origin master</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="合并时只产生合并提交">合并时只产生合并提交<a href="#合并时只产生合并提交" class="hash-link" aria-label="合并时只产生合并提交的直接链接" title="合并时只产生合并提交的直接链接">​</a></h2><blockquote><p>还有其它说法：合并时不合并历史；合并时将所有commit合为一个。</p></blockquote><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">git pull --squash another</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>一般用于master分支，像linus的linux内核一样。
更多信息见《Git merge no history commit》《git merge –squash介绍》</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="添加空目录">添加空目录<a href="#添加空目录" class="hash-link" aria-label="添加空目录的直接链接" title="添加空目录的直接链接">​</a></h2><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ find . -type d -empty -exec touch {}/.gitkeep \;</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>执行以上命令将会在空目录中添加一个<code>.gitkeep</code>文件，这样就可以保证空目录不被忽略，且不影响原代码的结构。</p><p>以上参考转自 <a href="http://blog.csdn.net/kangear/article/details/13169395" target="_blank" rel="noopener noreferrer">Git深度使用经验总结</a></p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="输出最后一次提交的改变">输出最后一次提交的改变<a href="#输出最后一次提交的改变" class="hash-link" aria-label="输出最后一次提交的改变的直接链接" title="输出最后一次提交的改变的直接链接">​</a></h2><p>这个命令，我经常使用它 来发送其他没有使用git的人来检查或者集成所修改的。它会输出最近提交的修改内容到一个zip文件中。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">git archive -o ../updated.zip HEAD $(git diff --name-only HEAD^)</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="输出两个提交间的改变">输出两个提交间的改变<a href="#输出两个提交间的改变" class="hash-link" aria-label="输出两个提交间的改变的直接链接" title="输出两个提交间的改变的直接链接">​</a></h2><p>类似的，如果你需要输出某两个提交间的改变时，你可以使用这个。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">git archive -o ../latest.zip NEW_COMMIT_ID_HERE $(git diff --name-only OLD_COMMIT_ID_HERE NEW_COMMIT_ID_HERE)</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="克隆-指定的远程分支">克隆 指定的远程分支<a href="#克隆-指定的远程分支" class="hash-link" aria-label="克隆 指定的远程分支的直接链接" title="克隆 指定的远程分支的直接链接">​</a></h2><p>如果你渴望只克隆远程仓库的一个指定分支，而不是整个仓库分支，这对你帮助很大。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">git init</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git remote add -t BRANCH_NAME_HERE -f origin REMOTE_REPO_URL_PATH_HERE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git checkout BRANCH_NAME_HERE</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="应用-从不相关的本地仓库来的补丁">应用 从不相关的本地仓库来的补丁<a href="#应用-从不相关的本地仓库来的补丁" class="hash-link" aria-label="应用 从不相关的本地仓库来的补丁的直接链接" title="应用 从不相关的本地仓库来的补丁的直接链接">​</a></h2><p>如果你需要其它一些不相关的本地仓库作为你现在仓库的补丁，这里就是通往那里的捷径。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">git --git-dir=PATH_TO_OTHER_REPOSITORY_HERE/.git format-patch -k -1 --stdout COMMIT_HASH_ID_HERE| git am -3 -k</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="检测-你的分支的改变是否为其它分支的一部分">检测 你的分支的改变是否为其它分支的一部分<a href="#检测-你的分支的改变是否为其它分支的一部分" class="hash-link" aria-label="检测 你的分支的改变是否为其它分支的一部分的直接链接" title="检测 你的分支的改变是否为其它分支的一部分的直接链接">​</a></h2><p><code>cherry</code>命令让我们检测你的分支的改变是否出现在其它一些分支中。它通过+或者-符号来显示从当前分支与所给的分支之间的改变：是否合并了(merged)。.+ 指示没有出现在所给分支中，反之，- 就表示出现在了所给的分支中了。这里就是如何去检测：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">git cherry -v OTHER_BRANCH_NAME_HERE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 例如: 检测master分支</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git cherry -v master</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="开始一个无历史的新分支">开始一个无历史的新分支<a href="#开始一个无历史的新分支" class="hash-link" aria-label="开始一个无历史的新分支的直接链接" title="开始一个无历史的新分支的直接链接">​</a></h2><p>有时，你需要开始一个新分支，但是又不想把很长很长的历史记录带进来，例如，你想在公众区域（开源）放置你的代码，但是又不想别人知道它的历史记录。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">git checkout --orphan NEW_BRANCH_NAME_HERE</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="无切换分支的从其它分支checkout文件">无切换分支的从其它分支Checkout文件<a href="#无切换分支的从其它分支checkout文件" class="hash-link" aria-label="无切换分支的从其它分支Checkout文件的直接链接" title="无切换分支的从其它分支Checkout文件的直接链接">​</a></h2><p>不想切换分支，但是又想从其它分支中获得你需要的文件：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">git checkout BRANCH_NAME_HERE -- PATH_TO_FILE_IN_BRANCH_HERE</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="忽略已追踪文件的变动">忽略已追踪文件的变动<a href="#忽略已追踪文件的变动" class="hash-link" aria-label="忽略已追踪文件的变动的直接链接" title="忽略已追踪文件的变动的直接链接">​</a></h2><p>如果您正在一个团队中工作，而且大家都在同一条branch上面工作，那么您很有可能会经常用到fetch和merge。但是有时候这样会重置您的环境配置文件，如此的话，您就得在每次merge后修改它。使用这一命令，您就能要求git忽视指定文件的变动。这样，下回你再merge的话，这个文件就不会被修改了。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">git update-index --assume-unchanged PATH_TO_FILE_HERE</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="检查提交的变动是否是release的一部分">检查提交的变动是否是release的一部分<a href="#检查提交的变动是否是release的一部分" class="hash-link" aria-label="检查提交的变动是否是release的一部分的直接链接" title="检查提交的变动是否是release的一部分的直接链接">​</a></h2><p>name-rev命令能告诉您一个commit相对于最近一次release的位置。使用这条命令，您就可以检查您所做出的改动是否是release的一部分了。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">git name-rev --name-only COMMIT_HASH_HERE</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="使用rebase推送而非merge">使用rebase推送而非merge<a href="#使用rebase推送而非merge" class="hash-link" aria-label="使用rebase推送而非merge的直接链接" title="使用rebase推送而非merge的直接链接">​</a></h2><p>如果您正在团队中工作并且整个团队都在同一条branch上面工作，那么您就得经常地进行fetch/merge或者pull。Git中，分支的合并以所提交的merge来记录，以此表明一条feature分支何时与主分支合并。但是在多团队成员共同工作于一条branch的情形中，常规的merge会导致log中出现多条消息，从而产生混淆。因此，您可以在pull的时候使用rebase，以此来减少无用的merge消息，从而保持历史记录的清晰。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">git pull --rebase</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>您也可以将某条branch配置为总是使用rebase推送：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">git config branch.BRANCH_NAME_HERE.rebase true</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="git-revert-后再次merge代码丢失问题">Git revert 后再次Merge代码丢失问题<a href="#git-revert-后再次merge代码丢失问题" class="hash-link" aria-label="Git revert 后再次Merge代码丢失问题的直接链接" title="Git revert 后再次Merge代码丢失问题的直接链接">​</a></h2><p>解决Git Revert操作后再次Merge代码被冲掉的问题。</p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="产生过程">产生过程<a href="#产生过程" class="hash-link" aria-label="产生过程的直接链接" title="产生过程的直接链接">​</a></h3><ul><li>开发分支Dev 错误的PR合并到了 目标分支A</li><li>使用 <code>git revert</code> 撤销了这次 PR 合并</li><li>后面想真正将 分支Dev 合并到 分支A 时，却发现没有第一次PR的代码</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="解决方式1">解决方式1：<a href="#解决方式1" class="hash-link" aria-label="解决方式1：的直接链接" title="解决方式1：的直接链接">​</a></h3><ul><li>删除现有的 目标分支A</li><li>从 Master 重新切一个目标分支A</li><li>将开发分支Dev合并到目标分支A</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="解决方式2">解决方式2：<a href="#解决方式2" class="hash-link" aria-label="解决方式2：的直接链接" title="解决方式2：的直接链接">​</a></h3><p>对 revert 的那次提交记录再次进行revert  (官方推荐方法)</p><div class="language-shell codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-shell codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">git</span><span class="token plain"> checkout A</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">git</span><span class="token plain"> log</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 找到 revert 的那条提交记录</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 注意: revert 相关的会有两条记录</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#  第一条是 revert，第二条是 revert 后 merge 的记录，这里取第一条</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># revert之前的revert第一条commit_id</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">git</span><span class="token plain"> revert </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">commit_id</span><span class="token operator" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="git-revert-和--git-reset的区别">git revert 和  git reset的区别<a href="#git-revert-和--git-reset的区别" class="hash-link" aria-label="git revert 和  git reset的区别的直接链接" title="git revert 和  git reset的区别的直接链接">​</a></h2><ul><li>git revert是用一次新的commit来回滚之前的commit，git reset是直接删除指定的commit。</li><li>git reset 是把HEAD向后移动了一下，而git revert是HEAD继续前进，只是新的commit的内容和要revert的内容正好相反，能够抵消要被revert的内容。</li></ul><p>在回滚这一操作上看，效果差不多。但是在日后继续merge以前的老版本时有区别。
因为git revert是用一次逆向的commit“中和”之前的提交，因此日后合并老的branch时，导致这部分改变不会再次出现，但是git reset是之间把某些commit在某个branch上删除，因而和老的branch再次merge时，这些被回滚的commit应该还会被引入。</p><blockquote><p>refers: <a href="http://www.oschina.net/translate/10-useful-advanced-git-commands" target="_blank" rel="noopener noreferrer">10 个很有用的高级 Git 命令</a></p></blockquote>]]></content:encoded>
            <category>git</category>
        </item>
        <item>
            <title><![CDATA[安装centos 7 后的一些设置记录]]></title>
            <link>https://inhere.github.io/blog/centos7-init-setting-after-install</link>
            <guid>https://inhere.github.io/blog/centos7-init-setting-after-install</guid>
            <pubDate>Sat, 09 Apr 2016 16:51:00 GMT</pubDate>
            <description><![CDATA[安装centos 7 后的一些常用设置记录]]></description>
            <content:encoded><![CDATA[<p>安装centos 7 后的一些常用设置记录</p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="添加用户到-sudoers">添加用户到 sudoers<a href="#添加用户到-sudoers" class="hash-link" aria-label="添加用户到 sudoers的直接链接" title="添加用户到 sudoers的直接链接">​</a></h3><p>刚安装系统后 使用 <code>sudo [command] ...</code> 会报错误信息  <code>该用户不存在群组sudoers中</code></p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ su  // 切换到 root</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ vim /etc/sudoers</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>找到 <code> root  ALL=(ALL)   ALL</code>, 后面换行并将当前用户添加进去  </p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">root  ALL=(ALL)   ALL</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> xxx   ALL=(ALL)   ALL</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>保存并退出</p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="无法使用中文输入">无法使用中文输入<a href="#无法使用中文输入" class="hash-link" aria-label="无法使用中文输入的直接链接" title="无法使用中文输入的直接链接">​</a></h3><p>实际上 安装的系统已经有拼音输入法了，请看 <a href="http://blog.csdn.net/alex_my/article/details/38223449" target="_blank" rel="noopener noreferrer">http://blog.csdn.net/alex_my/article/details/38223449</a></p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="windowslinux-双系统">windows,linux 双系统<a href="#windowslinux-双系统" class="hash-link" aria-label="windows,linux 双系统的直接链接" title="windows,linux 双系统的直接链接">​</a></h3><p>最好是先安装了windows后再安装linux系统</p><ul><li><p>挂载 ntfs 分区
请看 <a href="http://yzone.net/blog/31" target="_blank" rel="noopener noreferrer">安装双系统后，centos 7 如何挂载 windows 分区</a></p></li><li><p>恢复windows的引导项
打开终端, 执行下面的命令就会自动查找硬盘上已有的系统，并添加相应的引导</p></li></ul><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo update-grub // ubuntu 一类可用</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo grub2-mkconfig -o /boot/grub2/grub.cfg // centos 一类可用</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li>删除linux系统
windows上下在一个分区助手之类的工具，恢复系统硬盘的<code>mbr</code>, 在格式化 linux所在分区即可</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="添加-阿里云的epel源">添加 阿里云的epel源<a href="#添加-阿里云的epel源" class="hash-link" aria-label="添加 阿里云的epel源的直接链接" title="添加 阿里云的epel源的直接链接">​</a></h3><p>1.备份(如有配置其他epel源)</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">mv /etc/yum.repos.d/epel.repo /etc/yum.repos.d/epel.repo.backup</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mv /etc/yum.repos.d/epel-testing.repo /etc/yum.repos.d/epel-testing.repo.backup</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>2.下载新repo 到<code>/etc/yum.repos.d/</code></p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">// epel(RHEL 7) </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo yum update // update</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="修改home下的中文目录为英文目录">修改home下的中文目录为英文目录<a href="#修改home下的中文目录为英文目录" class="hash-link" aria-label="修改home下的中文目录为英文目录的直接链接" title="修改home下的中文目录为英文目录的直接链接">​</a></h3><p>打开终端，在终端下输入命令：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ export LANG=en_US</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ xdg-user-dirs-gtk-update</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这个时候会弹出一个配置界面，提示是否将中文目录切换为英文目录。选中不再提示，确定。系统会删除没有内容的中文目录，而有内容的目录会保持。
并创建8个相应的英文目录如下：“Desktop”、“Download”、“Templates”、“Public”、“Documents”、“Music”、“Pictures”、“Videos”。
此时，您在“位置”里看到的常用中文目录已经变成英文目录。只需要将原中文目录的内容拷贝到相应英文目录，并删除中文目录即可。
接下来再执行</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ export LANG=zh_CN.UTF-8</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>以显示中文。</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="一些常用工具">一些常用工具<a href="#一些常用工具" class="hash-link" aria-label="一些常用工具的直接链接" title="一些常用工具的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="tmux">tmux<a href="#tmux" class="hash-link" aria-label="tmux的直接链接" title="tmux的直接链接">​</a></h3><p>安装 tmux  <code>sudo yum install tmux</code></p><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="git">git<a href="#git" class="hash-link" aria-label="git的直接链接" title="git的直接链接">​</a></h3><p>仓库中的git版本有些老了，推荐手动安装最新版的
下载依赖包</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo yum install zlib-devel perl-ExtUtils-MakeMaker openssl-devel libcurl-devel expat-devel asciidoc xmlto</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>源码下载地址 <code>https://github.com/git/git/releases</code></p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ wget -c https://github.com/git/git/archive/v2.8.1.tar.gz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ cd git-2.8.1/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ make prefix=/usr/local all doc  // all 对所有用户可用，doc 是生成文档 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ make prefix=/usr/local/git install</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>加入环境变量<code>vim  ~/.bashrc</code></p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">export PATH=/usr/local/git/bin:$PATH</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="zsh-和-oh-my-zsh">zsh 和 oh-my-zsh<a href="#zsh-和-oh-my-zsh" class="hash-link" aria-label="zsh 和 oh-my-zsh的直接链接" title="zsh 和 oh-my-zsh的直接链接">​</a></h3><p>查看已有的shell <code>cat /etc/shells </code>
若没有，先安装 zsh </p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo yum install zsh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ chsh -s /bin/zsh </span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>若用chsh命令修改无效，则进入<code>/etc/passwd</code>中修改当前用户的shell环境。</p></blockquote><p>安装oh-my-zsh -- <a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="noopener noreferrer">oh-my-zsh 主页</a></p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">sh -c "$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)"</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="rar-压缩文件支持">rar 压缩文件支持<a href="#rar-压缩文件支持" class="hash-link" aria-label="rar 压缩文件支持的直接链接" title="rar 压缩文件支持的直接链接">​</a></h3><p>在liunx下原本是不支持rar文件的，需要安装liunx下的winrar版本，操作如下</p><blockquote><p>下载页面 <a href="http://www.rarsoft.com/download.htm" target="_blank" rel="noopener noreferrer">http://www.rarsoft.com/download.htm</a></p></blockquote><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ wget -O ~/Downloads/rarlinux-x64-5.3.tar.gz http://www.rarsoft.com/rar/rarlinux-x64-5.3.0.tar.gz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ cd ~/Downloads/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ tar -zxvf rarlinux-x64-5.3.tar.gz </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ cd rar  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo make                </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[sudo] password for inhere: </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mkdir -p /usr/local/bin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mkdir -p /usr/local/lib</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cp rar unrar /usr/local/bin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cp rarfiles.lst /etc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cp default.sfx /usr/local/lib</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>两个常用命令：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">rar x yhcsh.rar //解压 yhcsh.rar 到当前目录</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rar yhcsh.rar ./yhcsh/  //将 yhcsh 目录打包为 yhcsh.rar</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>linux</category>
            <category>centos</category>
        </item>
        <item>
            <title><![CDATA[git 找回丢失 commit]]></title>
            <link>https://inhere.github.io/blog/revert-lost-commit-by-git-reflog</link>
            <guid>https://inhere.github.io/blog/revert-lost-commit-by-git-reflog</guid>
            <pubDate>Fri, 01 Apr 2016 12:30:00 GMT</pubDate>
            <description><![CDATA[在使用git的过程中，常有失误的时候，有时把需要的东西给删了或者使用rebase覆盖掉了一些有用的代码。]]></description>
            <content:encoded><![CDATA[<p>在使用git的过程中，常有失误的时候，有时把需要的东西给删了或者使用rebase覆盖掉了一些有用的代码。</p><p>不过没有关系，git给了我们一层安全网，让们能有机会把失去的东西给找回来。 </p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="查找丢失的记录">查找丢失的记录<a href="#查找丢失的记录" class="hash-link" aria-label="查找丢失的记录的直接链接" title="查找丢失的记录的直接链接">​</a></h2><p>假设你不小心提交了些你不想要的东西，不得不做一次强制重置来恢复到之前的状态。
然后，你意识到在这一过程中你丢失了其它一些信息并且想要把它们找回来，或者至少瞅一眼。这正是<code>git reflog</code>可以做到的。</p><p>一个简单的<code>git log</code>命令可以为你展示最后一次commit，以及它的父亲，还有它父亲的父亲等等。而<code>git reflog</code>则列出了head曾经指向过的一系列commit。</p><blockquote><p>要明白它们(丢失的记录)只存在于你本机中,而不是你的版本仓库的一部分，也不包含在push和merge操作中。</p></blockquote><ul><li>如果我运行<code>git log</code>命令，我可以看到一些commit，它们都是我仓库的一部分：</li></ul><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ git log -4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">commit 6b8df20b71fcd1622109c2319c13df3120cd3716</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Author: xyz &lt;xyz@compay.com&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Date:   Wed Mar 30 17:41:42 2016 +0800</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">commit bcb250dcda7ec609dda522d0bff38161a57e20d0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Author: xyz &lt;xyz@compay.com&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Date:   Wed Mar 30 15:51:00 2016 +0800</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">commit 93d354756f8941201d0c53c7947766f6bd5955bf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Author: xyz &lt;xyz@compay.com&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Date:   Wed Mar 30 13:38:07 2016 +0800</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    update Model.php,rename BaseController to Controller</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">commit 185bcfce1a9c3fb4164f675318d5ad0086ea39d1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Author: xyz &lt;xyz@compay.com&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Date:   Wed Mar 30 11:35:39 2016 +0800</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    database operate update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li><code>git reflog</code>命令则展示了一次<code>9d7aabc HEAD@{1}: commit: update</code>，它是一个丢失掉的提交记录：</li></ul><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">$ git reflog -4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">6b8df20 HEAD@{0}: commit (amend): update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">9d7aabc HEAD@{1}: commit: update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">bcb250d HEAD@{2}: commit: update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">93d3547 HEAD@{3}: commit (amend): update Model.php,rename BaseController to Controller</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>使用<code>git log 9d7aabc -p</code> 或者 <code>git show 9d7aabc</code>查看丢失了那些改动</p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="如何恢复呢">如何恢复呢<a href="#如何恢复呢" class="hash-link" aria-label="如何恢复呢的直接链接" title="如何恢复呢的直接链接">​</a></h2><ul><li>使用rebase，用命令<code>git rebase</code>来进行恢复：<code>$ git rebase 9d7aabc</code></li><li>使用merge，用合并命令<code>git merge</code>来进行恢复：<code>$ git merge 9d7aabc</code></li></ul><blockquote><p>另外有一篇博文使用 <code>git fsck --lost-found</code> <a href="http://liuhui998.com/2010/10/22/recover_lost_commits_with_git/" target="_blank" rel="noopener noreferrer">如何找回git 中丢失的提交(commit) </a></p></blockquote>]]></content:encoded>
            <category>git</category>
            <category>git-log</category>
            <category>git-reflog</category>
        </item>
        <item>
            <title><![CDATA[Ubuntu 下挂载以及卸载Windows分区]]></title>
            <link>https://inhere.github.io/blog/mount-windows-pattern-on-ubuntu</link>
            <guid>https://inhere.github.io/blog/mount-windows-pattern-on-ubuntu</guid>
            <pubDate>Wed, 16 Mar 2016 13:00:00 GMT</pubDate>
            <description><![CDATA[如何在Linux(Ubuntu) 下挂载以及卸载Windows分区, 自动挂载]]></description>
            <content:encoded><![CDATA[<p>如何在Linux(Ubuntu) 下挂载以及卸载Windows分区, 自动挂载 </p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="1-手工挂载">1. 手工挂载<a href="#1-手工挂载" class="hash-link" aria-label="1. 手工挂载的直接链接" title="1. 手工挂载的直接链接">​</a></h2><p>1) 首先你得知道Linux下对硬盘分区的称呼。</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">sudo fdisk -l</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Disk /dev/sda: 160.0 GB, 160041885696 bytes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">255 heads, 63 sectors/track, 19457 cylinders</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Units = cylinders of 16065 * 512 = 8225280 bytes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Disk identifier: 0xf0b1ebb0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   Device Boot      Start         End      Blocks   Id  System</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/dev/sda1   *           1        2612    20980858+   7  HPFS/NTFS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/dev/sda2            2613       19457   135307462+   f  W95 Ext'd (LBA)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/dev/sda5            2613        6529    31463271    7  HPFS/NTFS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/dev/sda6           11753       19457    61890381    7  HPFS/NTFS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/dev/sda7            6530        6778     2000061   82  Linux swap / Solaris</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/dev/sda8            6779       11752    39953623+  83  Linux</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>其中是/dev/sda1 和 /dev/sda2主分区，其余的是逻辑分区。/dev/sda1 是Windows 下的c盘，<code>/dev/sda5</code> 是Windows 下的D盘，<code>/dev/sda6</code> 是Windows 下的F盘，（我的E盘是光驱）。</p></blockquote><p>2) 确定你所用的Linux系统的locale（这个locale包括了系统使用的语言和字符的编码等信息）。中文 Linux 常用的locale是zh_CN.gb2312，zh_CN.gbk，zh_CN.gb18030 和 zh_CN.UTF-8 。</p><p>在默认安装中，Debian Linux和Mandriva Linux的locale是zh_CN.gb2312,而Ubuntu Linux和Fedora Linux的locale是zh_CN.UTF-8 。最好不要随便更改locale，否则会出现很多乱码的情形。要查看系统的locale，可以在终端下输入下面的命令查看：</p><p><code>echo $LANG</code></p><p>3) 你得知道你的windows分区的格式，这个在windows的分区的属性中可以看到，一般是fat32和ntfs格式的。</p><p>假设你的locale是zh_CN.UTF-8，要挂载一个/dev/sda1的fat32格式的windows分区到/mnt/C目录（若这个目录不存在手工新建一个sudo mkdir /mnt/C），可以在终端下输入以下命令(在Ubuntu里还需要在这行命令前加上sudo)：</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">mount</span><span class="token plain"> -t vfat /dev/sda1 /mnt/C -o </span><span class="token assign-left variable" style="color:#36acaa">iocharset</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">utf8</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>如果你的locale不是zh_CN.UTF-8，把上面命令的utf8改为gb2312；如果这个windows分区是ntfs格式的，将上面命令的vfat改为ntfs。</p><p>这样挂载的ntfs格式的分区，只有root能读取，如果需要让普通用户也能读取，需要再加上umask=022选项，如下：</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">mount</span><span class="token plain"> -t ntfs /dev/sda1 /mnt/C -o </span><span class="token assign-left variable" style="color:#36acaa">iocharset</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">utf8,umask</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">022</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>类似地，如果要让挂载的分区允许所有用户读取和修改，可以将上面的<code>umask=022</code>，改为<code>umask=0</code>就可以了。</p><p>4) 卸载分区就简单多了：</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">umount</span><span class="token plain"> /dev/sda1</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>有时候卸载分区时提示分区繁忙（device is busy），可以先用下面的命令看看哪个进程在使用此分区：</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">fuser</span><span class="token plain"> -cu /dev/sda1</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>假如屏幕的输出为</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">/dev/sda1: 8463m</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cck</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>则可以用此命令看这个进程对应的程序名字：</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">ps</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">8463</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>然后可以用此命令结束此进程：</p><div class="language-bash codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-bash codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">kill</span><span class="token plain"> -9 </span><span class="token number" style="color:#36acaa">8463</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这样就可以正常卸载分区了。 </p><h2 class="anchor anchorWithHideOnScrollNavbar_kOCw" id="2-自动挂载">2. 自动挂载<a href="#2-自动挂载" class="hash-link" aria-label="2. 自动挂载的直接链接" title="2. 自动挂载的直接链接">​</a></h2><p>要让Linux系统启动时自动挂载windows分区，可以把上述的命令写入 <code>/etc/fstab</code> 文件中，下面是一个例子：</p><div class="codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain"># &lt;file system&gt; &lt;mount point&gt;   &lt;type&gt;  &lt;options&gt;       &lt;dump&gt;  &lt;pass&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">proc            /proc           proc    defaults        0       0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># / was on /dev/sda8 during installation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">UUID=c75b08d0-5763-4754-a269-09e759b746da /               ext4    errors=remount-ro 0       1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># swap was on /dev/sda7 during installation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">UUID=86cd7015-66f4-4e91-bf36-f109818f8da4 none            swap    sw              0       0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/dev/sda1 /mnt/C ntfs utf8,umask=022 0 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/dev/sda5 /mnt/D ntfs utf8,umask=022 0 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/dev/sda6 /mnt/F ntfs utf8,umask=022 0 0</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>From: <a href="http://blog.csdn.net/heyutao007/article/details/5447324" target="_blank" rel="noopener noreferrer">Ubuntu 下挂载Windows分区</a></p>]]></content:encoded>
            <category>linux</category>
            <category>ubuntu</category>
            <category>windows</category>
        </item>
    </channel>
</rss>